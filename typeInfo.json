{
    "primitives": [
        "std::string",
        "signed char",
        "Angle",
        "unsigned short",
        "double",
        "float",
        "unsigned int",
        "unsigned char",
        "char",
        "int",
        "short",
        "bool"
    ],
    "dataClassDescriptions": {
        "UpperRobotCameraMatrix": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ]
        ],
        "RobotStableStateProviderModule::Params": [
            [
                "predictionSteps",
                "unsigned int"
            ],
            [
                "turnPointSteps",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<Range<Angle>,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "Range<Angle>"
            ],
            [
                "headPitch",
                "Range<Angle>"
            ],
            [
                "lShoulderPitch",
                "Range<Angle>"
            ],
            [
                "lShoulderRoll",
                "Range<Angle>"
            ],
            [
                "lElbowYaw",
                "Range<Angle>"
            ],
            [
                "lElbowRoll",
                "Range<Angle>"
            ],
            [
                "lWristYaw",
                "Range<Angle>"
            ],
            [
                "lHand",
                "Range<Angle>"
            ],
            [
                "rShoulderPitch",
                "Range<Angle>"
            ],
            [
                "rShoulderRoll",
                "Range<Angle>"
            ],
            [
                "rElbowYaw",
                "Range<Angle>"
            ],
            [
                "rElbowRoll",
                "Range<Angle>"
            ],
            [
                "rWristYaw",
                "Range<Angle>"
            ],
            [
                "rHand",
                "Range<Angle>"
            ],
            [
                "lHipYawPitch",
                "Range<Angle>"
            ],
            [
                "lHipRoll",
                "Range<Angle>"
            ],
            [
                "lHipPitch",
                "Range<Angle>"
            ],
            [
                "lKneePitch",
                "Range<Angle>"
            ],
            [
                "lAnklePitch",
                "Range<Angle>"
            ],
            [
                "lAnkleRoll",
                "Range<Angle>"
            ],
            [
                "rHipYawPitch",
                "Range<Angle>"
            ],
            [
                "rHipRoll",
                "Range<Angle>"
            ],
            [
                "rHipPitch",
                "Range<Angle>"
            ],
            [
                "rKneePitch",
                "Range<Angle>"
            ],
            [
                "rAnklePitch",
                "Range<Angle>"
            ],
            [
                "rAnkleRoll",
                "Range<Angle>"
            ]
        ],
        "LowerCameraInfo": [
            [
                "camera",
                "CameraInfo::Camera"
            ],
            [
                "width",
                "int"
            ],
            [
                "height",
                "int"
            ],
            [
                "openingAngleWidth",
                "Angle"
            ],
            [
                "openingAngleHeight",
                "Angle"
            ],
            [
                "opticalCenter",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "LowerBodyContour": [
            [
                "lines",
                "BodyContour::Line*"
            ],
            [
                "cameraResolution",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ]
        ],
        "FieldLineIntersections": [
            [
                "intersections",
                "FieldLineIntersections::Intersection*"
            ]
        ],
        "IntersectionsPercept": [
            [
                "intersections",
                "IntersectionsPercept::Intersection*"
            ]
        ],
        "WalkToPointReadyImplSkill::Params": [
            [
                "timeToEmergencyMode",
                "int"
            ]
        ],
        "UpperImageCoordinateSystem": [
            [
                "rotation",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "origin",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "offset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "robotOffset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "a",
                "float"
            ],
            [
                "b",
                "float"
            ]
        ],
        "CameraCalibration": [
            [
                "cameraRotationCorrections",
                "EnumIndexedArray<Eigen::Matrix<Angle,3,1,0,3,1>,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ],
            [
                "bodyRotationCorrection",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ]
        ],
        "BOPPerceptorModule::Params": [
            [
                "ballThreshold",
                "float"
            ],
            [
                "penaltyMarkThreshold",
                "float"
            ],
            [
                "obstaclesThreshold",
                "float"
            ]
        ],
        "ObstaclesPerceptorData": [
            [
                "cameraInfo",
                "CameraInfo"
            ],
            [
                "cameraMatrix",
                "CameraMatrix"
            ],
            [
                "imageCoordinateSystem",
                "ImageCoordinateSystem"
            ],
            [
                "scanScores",
                "ObstaclesPerceptorData::ScanScore*"
            ],
            [
                "incompleteObstacles",
                "ObstaclesFieldPercept::Obstacle*"
            ]
        ],
        "EnumIndexedArray<DamageConfigurationBody::Side,Legs::Leg,Legs::Leg_Info>": [
            [
                "left",
                "DamageConfigurationBody::Side"
            ],
            [
                "right",
                "DamageConfigurationBody::Side"
            ]
        ],
        "GameStateProviderModule::Params": [
            [
                "unstiffHeadButtonPressDuration",
                "unsigned int"
            ],
            [
                "calibrationHeadButtonPressDuration",
                "unsigned int"
            ],
            [
                "unstiffAfterHalfDuration",
                "int"
            ],
            [
                "gameControllerTimeout",
                "int"
            ],
            [
                "ballSaveInterval",
                "int"
            ],
            [
                "ballHasMovedTolerance",
                "float"
            ],
            [
                "ballHasMovedCloseToRobotThreshold",
                "float"
            ],
            [
                "ballOutOfCenterCircleCounterThreshold",
                "unsigned int"
            ],
            [
                "ballOutOfCenterCircleTolerance",
                "float"
            ],
            [
                "minVotersForWhistle",
                "unsigned int"
            ],
            [
                "maxWhistleTimeDifference",
                "int"
            ],
            [
                "minWhistleAverageConfidence",
                "float"
            ],
            [
                "ignoreWhistleAfterKickOff",
                "int"
            ],
            [
                "ignoreWhistleAfterPenaltyKick",
                "int"
            ],
            [
                "checkWhistleForGoal",
                "bool"
            ],
            [
                "checkBallForGoal",
                "bool"
            ],
            [
                "gameControllerOperatorDelay",
                "int"
            ],
            [
                "acceptBallInGoalDelay",
                "int"
            ],
            [
                "acceptPastWhistleDelay",
                "int"
            ],
            [
                "confidenceIntervalToLegalPositionFree",
                "float"
            ],
            [
                "confidenceIntervalToLegalPositionNotFree",
                "float"
            ],
            [
                "ballPlacementTolerance",
                "float"
            ],
            [
                "kickOffSetupDuration",
                "int"
            ],
            [
                "kickOffDuration",
                "int"
            ],
            [
                "penaltyKickSetupDuration",
                "int"
            ],
            [
                "penaltyKickDuration",
                "int"
            ],
            [
                "freeKickDuration",
                "int"
            ],
            [
                "playingSignalDelay",
                "int"
            ],
            [
                "goalSignalDelay",
                "int"
            ]
        ],
        "PlayersDeeptectorFeatBOPLowerModule::Params": [
            [
                "xyStep",
                "unsigned int"
            ],
            [
                "minContrastDiff",
                "short"
            ],
            [
                "satThreshold",
                "unsigned char"
            ],
            [
                "minNeighborPoints",
                "unsigned int"
            ],
            [
                "minPixel",
                "int"
            ],
            [
                "minWidthOnFieldNoMatch",
                "float"
            ],
            [
                "trimObstacles",
                "bool"
            ],
            [
                "minBeforeAfterTrimRatio",
                "float"
            ],
            [
                "mergeLowerObstacles",
                "bool"
            ],
            [
                "pRobotRotationDeviationInStand",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "pRobotRotationDeviation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "SkillBehaviorControlModule::Params": [
            [
                "options",
                "Cabsl<SkillBehaviorControl>::OptionInfos::Option*"
            ],
            [
                "playingOptions",
                "Cabsl<SkillBehaviorControl>::OptionInfos::Option*"
            ],
            [
                "useNewHandleCatchBallBehavior",
                "bool"
            ]
        ],
        "OpponentFreeKick": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ],
            [
                "preconditions",
                "FreeKick::Condition"
            ],
            [
                "invariants",
                "FreeKick::Condition"
            ],
            [
                "ballSide",
                "FreeKick::BallSide"
            ]
        ],
        "BallInGoal": [
            [
                "lastTimeInGoal",
                "unsigned int"
            ],
            [
                "inOwnGoal",
                "bool"
            ]
        ],
        "PowerKickPair": [
            [
                "kick",
                "KickInfo::KickType"
            ],
            [
                "power",
                "float"
            ]
        ],
        "RefereeGestureDetectionModule::Params::Constraint": [
            [
                "from",
                "Keypoints::Keypoint"
            ],
            [
                "to",
                "Keypoints::Keypoint"
            ],
            [
                "distance",
                "Range<float>"
            ],
            [
                "direction",
                "Range<Angle>"
            ]
        ],
        "CameraImage": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ],
            [
                "timestamp",
                "unsigned int"
            ]
        ],
        "UpperPenaltyMarkPercept": [
            [
                "positionInImage",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covarianceOnField",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "wasSeen",
                "bool"
            ]
        ],
        "PoseVariation": [
            [
                "poseVaria",
                "Pose2f*"
            ]
        ],
        "Range<unsigned char>": [
            [
                "min",
                "unsigned char"
            ],
            [
                "max",
                "unsigned char"
            ]
        ],
        "PlayBallImplSkill::Params": [
            [
                "goalPostHandlingAreaRadius",
                "float"
            ],
            [
                "goalPostHandlingAreaHysteresisMultiplier",
                "float"
            ],
            [
                "duelMinDistanceToClosest",
                "float"
            ],
            [
                "duelMinAngleToClosest",
                "Angle"
            ]
        ],
        "WhistleCompact": [
            [
                "listening",
                "bool"
            ],
            [
                "recentWhistle",
                "RecentWhistle*"
            ]
        ],
        "FieldLines::Line": [
            [
                "alpha",
                "Angle"
            ],
            [
                "length",
                "float"
            ],
            [
                "first",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "last",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "cov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ]
        ],
        "FollowUpMotionPair": [
            [
                "startAsNextPhase",
                "KeyframeMotionListID::KeyframeMotionListID"
            ],
            [
                "conditions",
                "Condition*"
            ],
            [
                "isAndCondition",
                "bool"
            ]
        ],
        "ArmKeyFrameGenerator": [],
        "BHumanMessage": [
            [
                "playerNumber",
                "unsigned char"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "referenceGameControllerPacketTimestampOffset",
                "unsigned short"
            ],
            [
                "referenceGameControllerPacketNumber",
                "unsigned char"
            ],
            [
                "compressedContainer",
                "unsigned char*"
            ]
        ],
        "FsrSensorData": [
            [
                "pressures",
                "EnumIndexedArray<EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>,Legs::Leg,Legs::Leg_Info>"
            ],
            [
                "totals",
                "EnumIndexedArray<float,Legs::Leg,Legs::Leg_Info>"
            ]
        ],
        "Keypoints": [
            [
                "points",
                "EnumIndexedArray<Keypoints::Point,Keypoints::Keypoint,Keypoints::Keypoint_Info>"
            ],
            [
                "patchBoundary",
                "Boundary<int>"
            ]
        ],
        "EnumIndexedArray<CameraSettings::Collection,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "CameraSettings::Collection"
            ],
            [
                "lower",
                "CameraSettings::Collection"
            ]
        ],
        "FilteredBallPercepts": [
            [
                "percepts",
                "FilteredBallPercept*"
            ]
        ],
        "EnumIndexedArray<CameraIntrinsics::Camera,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "CameraIntrinsics::Camera"
            ],
            [
                "lower",
                "CameraIntrinsics::Camera"
            ]
        ],
        "WalkModifier": [
            [
                "numOfGyroPeaks",
                "int"
            ],
            [
                "balanceChangeFactor",
                "float"
            ]
        ],
        "KeyframeMotionParameters::BalancingParameter": [
            [
                "balanceFactor",
                "KeyframeMotionParameters::BalanceFactors"
            ],
            [
                "comDiffBase",
                "DirectionValue"
            ]
        ],
        "StiffnessSettings": [
            [
                "stiffnesses",
                "EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "RelativeFieldColors": [
            [
                "rfcParameters",
                "RelativeFieldColorsParameters"
            ],
            [
                "averageLuminance",
                "unsigned char"
            ],
            [
                "averageSaturation",
                "unsigned char"
            ],
            [
                "averageLuminanceF",
                "float"
            ],
            [
                "averageSaturationF",
                "float"
            ]
        ],
        "KeyframeMotionParameters::BalanceFactors": [
            [
                "maxValAdditionalScaling",
                "DirectionValue"
            ],
            [
                "exponentFactorScaling",
                "DirectionValue"
            ],
            [
                "pidPPitchParameter",
                "KeyframeMotionParameters::PIDParameter"
            ],
            [
                "pidPRollParameter",
                "KeyframeMotionParameters::PIDParameter"
            ],
            [
                "pidDPitchParameter",
                "KeyframeMotionParameters::PIDParameter"
            ],
            [
                "pidDRollParameter",
                "KeyframeMotionParameters::PIDParameter"
            ]
        ],
        "BallPercept": [
            [
                "positionInImage",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radiusInImage",
                "float"
            ],
            [
                "status",
                "BallPercept::Status"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radiusOnField",
                "float"
            ],
            [
                "covarianceOnField",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ]
        ],
        "KeyframeEndRequest": [
            [
                "energySavingLegs",
                "EnergySavingType::EnergySavingType"
            ],
            [
                "energySavingArms",
                "EnergySavingType::EnergySavingType"
            ],
            [
                "isStandHigh",
                "bool"
            ]
        ],
        "KeyframeMotionParameters::PIDParameter": [
            [
                "baseValue",
                "float"
            ],
            [
                "maxAdditionalValue",
                "float"
            ]
        ],
        "BHLoggingController::TeamList": [
            [
                "teams",
                "BHLoggingController::Team*"
            ]
        ],
        "WalkingEngineModule::Params": [
            [
                "configuratedParameters",
                "ConfiguratedParameters"
            ]
        ],
        "StaticJointPoses": [
            [
                "pose",
                "EnumIndexedArray<EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>,StaticJointPoses::StaticJointPoseName,StaticJointPoses::StaticJointPoseName_Info>"
            ]
        ],
        "Tactic::PriorityGroup": [
            [
                "positions",
                "Tactic::Position::Type*"
            ],
            [
                "priorities",
                "unsigned int*"
            ]
        ],
        "SelfLocalizationHypotheses::Hypothesis": [
            [
                "pose",
                "Pose2f"
            ],
            [
                "validity",
                "float"
            ],
            [
                "xVariance",
                "float"
            ],
            [
                "yVariance",
                "float"
            ],
            [
                "xyCovariance",
                "float"
            ],
            [
                "rotVariance",
                "float"
            ]
        ],
        "RelativeFieldColorsParameters": [
            [
                "minWhiteToFieldLuminanceDifference",
                "unsigned char"
            ],
            [
                "minWhiteToFieldSaturationDifference",
                "unsigned char"
            ],
            [
                "minFieldSaturation",
                "unsigned char"
            ],
            [
                "maxWhiteSaturation",
                "unsigned char"
            ],
            [
                "maxFieldLuminance",
                "unsigned char"
            ],
            [
                "minWhiteLuminance",
                "unsigned char"
            ],
            [
                "fieldHue",
                "Range<unsigned char>"
            ]
        ],
        "JointCalibration": [
            [
                "offsets",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "OwnKickOff": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ]
        ],
        "Condition": [
            [
                "variable",
                "ConditionVar"
            ],
            [
                "range",
                "Range<float>"
            ],
            [
                "isNot",
                "bool"
            ]
        ],
        "StiffnessData": [
            [
                "stiffnesses",
                "EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "CameraSettings": [
            [
                "cameras",
                "EnumIndexedArray<CameraSettings::Collection,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ]
        ],
        "ArmObstacleAvoidanceImplSkill::Params": [
            [
                "stayBackTime",
                "int"
            ],
            [
                "deadTime",
                "int"
            ],
            [
                "distance",
                "float"
            ]
        ],
        "BallModel": [
            [
                "lastPerception",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "estimate",
                "BallState"
            ],
            [
                "timeWhenLastSeen",
                "unsigned int"
            ],
            [
                "timeWhenDisappeared",
                "unsigned int"
            ],
            [
                "seenPercentage",
                "unsigned char"
            ],
            [
                "riskyMovingEstimate",
                "BallState"
            ],
            [
                "riskyMovingEstimateIsValid",
                "bool"
            ]
        ],
        "PerceptRegistration": [
            [
                "totalNumberOfAvailableAbsolutePoseMeasurements",
                "int"
            ],
            [
                "totalNumberOfAvailableLandmarks",
                "int"
            ],
            [
                "totalNumberOfAvailableLines",
                "int"
            ],
            [
                "totalNumberOfIgnoredLines",
                "int"
            ]
        ],
        "Image<PixelTypes::BGRAPixel>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "ECImage": [
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "grayscaled",
                "Image<unsigned char>"
            ],
            [
                "saturated",
                "Image<unsigned char>"
            ],
            [
                "hued",
                "Image<PixelTypes::HuePixel>"
            ]
        ],
        "LowerBallPercept": [
            [
                "positionInImage",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radiusInImage",
                "float"
            ],
            [
                "status",
                "BallPercept::Status"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radiusOnField",
                "float"
            ],
            [
                "covarianceOnField",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ]
        ],
        "LinesPercept": [
            [
                "lines",
                "LinesPercept::Line*"
            ]
        ],
        "LinesPercept::Line": [
            [
                "line",
                "Geometry::Line"
            ],
            [
                "spotsInField",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "spotsInImg",
                "Eigen::Matrix<int,2,1,0,2,1>*"
            ],
            [
                "firstImg",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ],
            [
                "lastImg",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ],
            [
                "firstField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "lastField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "belongsToCircle",
                "bool"
            ]
        ],
        "Boundary<int>": [
            [
                "x",
                "Range<int>"
            ],
            [
                "y",
                "Range<int>"
            ]
        ],
        "LibLookActive": [],
        "CognitionFrameInfo": [
            [
                "time",
                "unsigned int"
            ]
        ],
        "Eigen::Matrix<int,2,1,0,2,1>": [
            [
                "x",
                "int"
            ],
            [
                "y",
                "int"
            ]
        ],
        "AutoExposureWeightTable": [
            [
                "tables",
                "EnumIndexedArray<Eigen::Matrix<unsigned char,4,4,1,4,4>,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ]
        ],
        "ScanGridProviderModule::Params": [
            [
                "minStepSize",
                "int"
            ],
            [
                "minNumOfLowResScanLines",
                "int"
            ],
            [
                "lineWidthRatio",
                "float"
            ],
            [
                "ballWidthRatio",
                "float"
            ]
        ],
        "TeamMessageHandler::Statistics": [
            [
                "counters",
                "TeamMessageHandler::Statistics::Counter*"
            ]
        ],
        "GroundContactDetectorModule::Params": [
            [
                "minPressurePerFootToRegainContact",
                "float"
            ],
            [
                "maxTimeWithoutPressure",
                "int"
            ],
            [
                "minTimeWithPressure",
                "int"
            ]
        ],
        "TeamMessageHandler::Statistics::Counter": [
            [
                "name",
                "std::string"
            ],
            [
                "changes",
                "unsigned int"
            ]
        ],
        "ColorScanLineRegionsVertical::ScanLine": [
            [
                "x",
                "unsigned short"
            ],
            [
                "regions",
                "ScanLineRegion*"
            ]
        ],
        "KickOff": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ]
        ],
        "SafeFallParameters": [
            [
                "sitHYPThreshold",
                "Angle"
            ],
            [
                "head",
                "Angle"
            ],
            [
                "headStiffness",
                "int"
            ],
            [
                "bodyStiffness",
                "int"
            ],
            [
                "lowHeadStiffnessWaitTime",
                "int"
            ],
            [
                "unstiffWaitTime",
                "int"
            ]
        ],
        "DuelRatings": [
            [
                "ratingMinMaxDifference",
                "float"
            ],
            [
                "ratingBallLandsInOwnHalf",
                "float"
            ],
            [
                "ratingPoseBlockedSmallKickAngle",
                "float"
            ],
            [
                "ratingPoseBlocked",
                "float"
            ],
            [
                "ratingOpponentFaster",
                "float"
            ],
            [
                "ratingSameKick",
                "float"
            ],
            [
                "ratingSameKickAngle",
                "float"
            ],
            [
                "ratingStealBall",
                "float"
            ],
            [
                "goalAreaLongKickRating",
                "float"
            ],
            [
                "ratingStealBallKick",
                "float"
            ],
            [
                "ratingStealBallKickBetterSide",
                "float"
            ],
            [
                "ratingGoalShot",
                "float"
            ]
        ],
        "BallStateEstimatorModule::Params": [
            [
                "processDeviation",
                "Eigen::Matrix<float,4,1,0,4,1>"
            ],
            [
                "odometryDeviation",
                "Pose2f"
            ],
            [
                "initialStateWeight",
                "float"
            ],
            [
                "ballDisappearedMaxCheckingDistance",
                "float"
            ],
            [
                "ballDisappearedThreshold",
                "unsigned int"
            ],
            [
                "lastBallPerceptTimeout",
                "int"
            ],
            [
                "minNumberOfMeasurementsForRollingBalls",
                "int"
            ],
            [
                "minSpeed",
                "float"
            ],
            [
                "maxNumberOfHypotheses",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<KeyframeBlock,KeyframeMotionBlockID::KeyframeMotionBlockID,KeyframeMotionBlockID::KeyframeMotionBlockID_Info>": [
            [
                "sit",
                "KeyframeBlock"
            ],
            [
                "sitDown",
                "KeyframeBlock"
            ],
            [
                "stand",
                "KeyframeBlock"
            ],
            [
                "standHigh",
                "KeyframeBlock"
            ],
            [
                "front",
                "KeyframeBlock"
            ],
            [
                "frontCatch",
                "KeyframeBlock"
            ],
            [
                "frontCatchStart",
                "KeyframeBlock"
            ],
            [
                "frontUpright",
                "KeyframeBlock"
            ],
            [
                "back",
                "KeyframeBlock"
            ],
            [
                "backTipOver",
                "KeyframeBlock"
            ],
            [
                "backTipOverReset",
                "KeyframeBlock"
            ],
            [
                "recover",
                "KeyframeBlock"
            ],
            [
                "recoverBackStaticArms",
                "KeyframeBlock"
            ],
            [
                "recoverFront",
                "KeyframeBlock"
            ],
            [
                "recoverBack",
                "KeyframeBlock"
            ],
            [
                "recoverSlow",
                "KeyframeBlock"
            ],
            [
                "recoverGenuflect",
                "KeyframeBlock"
            ],
            [
                "recoverGenuflectWide",
                "KeyframeBlock"
            ],
            [
                "armSavingFront",
                "KeyframeBlock"
            ],
            [
                "armSavingBack",
                "KeyframeBlock"
            ],
            [
                "fromSitting",
                "KeyframeBlock"
            ],
            [
                "genuflectFromSitting",
                "KeyframeBlock"
            ],
            [
                "genuflectFromStand",
                "KeyframeBlock"
            ],
            [
                "genuflect",
                "KeyframeBlock"
            ],
            [
                "genuflectWide",
                "KeyframeBlock"
            ],
            [
                "genuflectEnd",
                "KeyframeBlock"
            ],
            [
                "wait",
                "KeyframeBlock"
            ],
            [
                "jumpLeftFromSitting",
                "KeyframeBlock"
            ],
            [
                "jumpLeftFromStand",
                "KeyframeBlock"
            ],
            [
                "sitKeeper",
                "KeyframeBlock"
            ],
            [
                "sitKeeperJump",
                "KeyframeBlock"
            ],
            [
                "waveInitial",
                "KeyframeBlock"
            ],
            [
                "wave",
                "KeyframeBlock"
            ]
        ],
        "KickEngineParameters::JointOffset": [
            [
                "kickKeyframeLine",
                "int"
            ],
            [
                "boost",
                "KickEngineParameters::BoostAngle*"
            ]
        ],
        "DummyRepresentation": [
            [
                "dummy",
                "int"
            ]
        ],
        "JointLimits": [
            [
                "limits",
                "EnumIndexedArray<Range<Angle>,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "SetupPoses::SetupPose": [
            [
                "playerNumber",
                "int"
            ],
            [
                "position",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "turnedTowards",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "IllegalAreaProviderModule::Params": [
            [
                "freeKickClearAreaRadius",
                "float"
            ]
        ],
        "Range<int>": [
            [
                "min",
                "int"
            ],
            [
                "max",
                "int"
            ]
        ],
        "EnumIndexedArray<short,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "short"
            ],
            [
                "headPitch",
                "short"
            ],
            [
                "lShoulderPitch",
                "short"
            ],
            [
                "lShoulderRoll",
                "short"
            ],
            [
                "lElbowYaw",
                "short"
            ],
            [
                "lElbowRoll",
                "short"
            ],
            [
                "lWristYaw",
                "short"
            ],
            [
                "lHand",
                "short"
            ],
            [
                "rShoulderPitch",
                "short"
            ],
            [
                "rShoulderRoll",
                "short"
            ],
            [
                "rElbowYaw",
                "short"
            ],
            [
                "rElbowRoll",
                "short"
            ],
            [
                "rWristYaw",
                "short"
            ],
            [
                "rHand",
                "short"
            ],
            [
                "lHipYawPitch",
                "short"
            ],
            [
                "lHipRoll",
                "short"
            ],
            [
                "lHipPitch",
                "short"
            ],
            [
                "lKneePitch",
                "short"
            ],
            [
                "lAnklePitch",
                "short"
            ],
            [
                "lAnkleRoll",
                "short"
            ],
            [
                "rHipYawPitch",
                "short"
            ],
            [
                "rHipRoll",
                "short"
            ],
            [
                "rHipPitch",
                "short"
            ],
            [
                "rKneePitch",
                "short"
            ],
            [
                "rAnklePitch",
                "short"
            ],
            [
                "rAnkleRoll",
                "short"
            ]
        ],
        "KickGenerator": [],
        "Forward::Parameters": [
            [
                "sigmaBase",
                "float"
            ],
            [
                "startThreshold",
                "float"
            ],
            [
                "stopThreshold",
                "float"
            ],
            [
                "addWeight",
                "float"
            ]
        ],
        "CNSRegions": [
            [
                "regions",
                "Boundary<int>*"
            ]
        ],
        "BalanceOutParams": [
            [
                "maxTime",
                "int"
            ],
            [
                "minFluctuation",
                "Angle"
            ],
            [
                "minForwardAngle",
                "Angle"
            ],
            [
                "minBackwardAngle",
                "Angle"
            ],
            [
                "minPIDDValue",
                "float"
            ]
        ],
        "RatingRole::Parameters": [
            [
                "delta",
                "float"
            ],
            [
                "step",
                "float"
            ],
            [
                "cellSize",
                "float"
            ],
            [
                "numIterations",
                "int"
            ],
            [
                "heatmapAlpha",
                "unsigned char"
            ],
            [
                "worstEvaluationColor",
                "ColorRGBA"
            ],
            [
                "bestEvaluationColor",
                "ColorRGBA"
            ],
            [
                "positionBufferSize",
                "unsigned int"
            ],
            [
                "baseDeviation",
                "float"
            ],
            [
                "startThreshold",
                "float"
            ],
            [
                "stopThreshold",
                "float"
            ],
            [
                "startAngle",
                "Angle"
            ],
            [
                "stopAngle",
                "Angle"
            ],
            [
                "maxAngleToBall",
                "Angle"
            ],
            [
                "startTranslationThreshold",
                "float"
            ],
            [
                "stopTranslationThreshold",
                "float"
            ]
        ],
        "LowerFieldLineIntersections": [
            [
                "intersections",
                "FieldLineIntersections::Intersection*"
            ]
        ],
        "EnumIndexedArray<ComInFootState,Legs::Leg,Legs::Leg_Info>": [
            [
                "left",
                "ComInFootState"
            ],
            [
                "right",
                "ComInFootState"
            ]
        ],
        "Eigen::Matrix<double,2,1,0,2,1>": [
            [
                "x",
                "double"
            ],
            [
                "y",
                "double"
            ]
        ],
        "FieldFeatureOverview": [
            [
                "combinedStatus",
                "FieldFeatureOverview::FieldFeatureStatus"
            ],
            [
                "statuses",
                "EnumIndexedArray<FieldFeatureOverview::FieldFeatureStatus,FieldFeatureOverview::Feature,FieldFeatureOverview::Feature_Info>"
            ]
        ],
        "DamageConfigurationHead": [
            [
                "audioChannelsDefect",
                "bool[4]"
            ]
        ],
        "Strategy::TacticState::Transition::Condition": [
            [
                "numOfFieldPlayersGE",
                "unsigned int"
            ],
            [
                "numOfFieldPlayersLE",
                "unsigned int"
            ],
            [
                "ownScoreGE",
                "unsigned int"
            ],
            [
                "ownScoreLE",
                "unsigned int"
            ],
            [
                "opponentScoreGE",
                "unsigned int"
            ],
            [
                "opponentScoreLE",
                "unsigned int"
            ],
            [
                "scoreDifferenceGE",
                "int"
            ],
            [
                "scoreDifferenceLE",
                "int"
            ],
            [
                "ballXThreshold",
                "float"
            ],
            [
                "timeSinceBallBehindThresholdGE",
                "int"
            ],
            [
                "timeSinceBallAheadOfThresholdGE",
                "int"
            ]
        ],
        "FootOffset": [
            [
                "forward",
                "float"
            ],
            [
                "backward",
                "float"
            ],
            [
                "leftFoot",
                "FootValues"
            ],
            [
                "rightFoot",
                "FootValues"
            ],
            [
                "isCalibrated",
                "bool"
            ]
        ],
        "RefereeGestureDetection::detectGesture() const::Checks": [
            [
                "failed",
                "std::string*"
            ]
        ],
        "UpperCirclePercept": [
            [
                "pos",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "cov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "wasSeen",
                "bool"
            ]
        ],
        "UpperBodyContour": [
            [
                "lines",
                "BodyContour::Line*"
            ],
            [
                "cameraResolution",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ]
        ],
        "HeadMotionInfo": [
            [
                "moving",
                "bool"
            ]
        ],
        "JointAngles": [
            [
                "angles",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "variance",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "timestamp",
                "unsigned int"
            ]
        ],
        "SearchParameters": [
            [
                "numOfAnglesNearBestDuelPose",
                "int"
            ],
            [
                "rangeOfBestDuelPose",
                "Angle"
            ],
            [
                "numOfOverallSearch",
                "int"
            ],
            [
                "overallSearchRange",
                "Angle"
            ],
            [
                "bonusForStealBallDirectionAdjustmentSmall",
                "Angle"
            ],
            [
                "bonusForStealBallDirectionAdjustmentBig",
                "Angle"
            ],
            [
                "moreSearchAfterDoingNothing",
                "int"
            ],
            [
                "goalSectorWidth",
                "Angle"
            ],
            [
                "minMaxAngleAngleRange",
                "Range<Angle>"
            ]
        ],
        "ObstaclesImagePercept::Obstacle": [
            [
                "top",
                "int"
            ],
            [
                "bottom",
                "int"
            ],
            [
                "left",
                "int"
            ],
            [
                "right",
                "int"
            ],
            [
                "bottomFound",
                "bool"
            ],
            [
                "fallen",
                "bool"
            ],
            [
                "probability",
                "float"
            ],
            [
                "distance",
                "float"
            ]
        ],
        "AlternativeRobotPoseHypothesis": [
            [
                "pose",
                "Pose2f"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "timeOfLastPerceptionUpdate",
                "unsigned int"
            ],
            [
                "isInOwnHalf",
                "bool"
            ],
            [
                "numOfContributingObservations",
                "int"
            ]
        ],
        "SentTeamMessage": [
            [
                "theBallModel",
                "BallModel"
            ],
            [
                "theBehaviorStatus",
                "BehaviorStatus"
            ],
            [
                "theFrameInfo",
                "FrameInfo"
            ],
            [
                "theRobotPose",
                "RobotPose"
            ],
            [
                "theRobotStatus",
                "RobotStatus"
            ],
            [
                "theStrategyStatus",
                "StrategyStatus"
            ],
            [
                "theWhistle",
                "Whistle"
            ]
        ],
        "AutonomousCameraCalibrationImplSkill::Params": [
            [
                "walkSpeed",
                "Pose2f"
            ],
            [
                "adjustmentRadius",
                "float"
            ],
            [
                "goalAreaCornerDistance",
                "float"
            ],
            [
                "penaltyMarkDistance",
                "float"
            ],
            [
                "settleAfterWalkDuration",
                "int"
            ],
            [
                "settleAfterHeadMovementDuration",
                "int"
            ],
            [
                "panAndTilGridWaitInPositionTime",
                "int"
            ],
            [
                "waitDurationForSamplesWhenRecording",
                "int"
            ],
            [
                "maxHorizontalAdjustmentAngle",
                "Angle"
            ],
            [
                "horizontalAdjustmentAngleStep",
                "Angle"
            ],
            [
                "maxVerticalAdjustmentAngle",
                "Angle"
            ],
            [
                "verticalAdjustmentAngleStep",
                "Angle"
            ],
            [
                "headPans",
                "Angle*"
            ],
            [
                "headSpeed",
                "Angle"
            ],
            [
                "headTiltUpper",
                "Angle"
            ],
            [
                "headTiltLower",
                "Angle"
            ],
            [
                "standStillTranslationThreshold",
                "float"
            ],
            [
                "standStillOrientationThreshold",
                "Angle"
            ]
        ],
        "SystemSensorData": [
            [
                "cpuTemperature",
                "float"
            ],
            [
                "batteryCurrent",
                "float"
            ],
            [
                "batteryLevel",
                "float"
            ],
            [
                "batteryTemperature",
                "float"
            ],
            [
                "batteryCharging",
                "bool"
            ]
        ],
        "GyroStateProviderModule::Params": [
            [
                "thresholdGyroDeviation",
                "Angle"
            ],
            [
                "thresholdZero",
                "Angle"
            ]
        ],
        "LowerCameraStatus": [
            [
                "ok",
                "bool"
            ]
        ],
        "EnumIndexedArray<CameraInfo,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "CameraInfo"
            ],
            [
                "lower",
                "CameraInfo"
            ]
        ],
        "Image<PixelTypes::HuePixel>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "LowerCirclePercept": [
            [
                "pos",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "cov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "wasSeen",
                "bool"
            ]
        ],
        "ObservePointImplSkill::Params": [
            [
                "closeBoundary",
                "float"
            ],
            [
                "farBoundary",
                "float"
            ],
            [
                "hysteresisOffset",
                "float"
            ]
        ],
        "DirectionValue": [
            [
                "pitchDirection",
                "Range<Angle>"
            ],
            [
                "rollDirection",
                "Range<Angle>"
            ]
        ],
        "FootBumperState::State": [
            [
                "contact",
                "bool"
            ],
            [
                "contactDuration",
                "int"
            ],
            [
                "lastContact",
                "unsigned int"
            ]
        ],
        "LibLookActiveProviderModule::Params": [
            [
                "defaultSpeed",
                "Angle"
            ],
            [
                "minSpeed",
                "Angle"
            ],
            [
                "maxSpeed",
                "Angle"
            ],
            [
                "largeDefaultPan",
                "Angle"
            ],
            [
                "smallDefaultPan",
                "Angle"
            ],
            [
                "minPanMoving",
                "Angle"
            ],
            [
                "defaultTilt",
                "Angle"
            ],
            [
                "minTilt",
                "Angle"
            ],
            [
                "ballPositionUnknownTimeout",
                "int"
            ],
            [
                "ballPositionUnknownTimeoutLowerCamera",
                "int"
            ],
            [
                "translationSpeedMinValue",
                "float"
            ],
            [
                "translationSpeedMaxValue",
                "float"
            ],
            [
                "rotationSpeedMinValue",
                "Angle"
            ],
            [
                "rotationSpeedMaxValue",
                "Angle"
            ],
            [
                "lookAtCloseObstacleWhenFollowingBall",
                "bool"
            ],
            [
                "maxObstacleDistanceToBeLookedAt",
                "float"
            ],
            [
                "maxObstacleAgeToBeLookedAt",
                "int"
            ],
            [
                "cameraChoiceHysteresis",
                "Angle"
            ],
            [
                "teammatesBallModelError",
                "float"
            ]
        ],
        "EnumIndexedArray<KeyframeMotionParameters::BalancingParameter,KeyframeMotionPhases::KeyframeMotionPhase,KeyframeMotionPhases::KeyframeMotionPhase_Info>": [
            [
                "UnknownPhase",
                "KeyframeMotionParameters::BalancingParameter"
            ],
            [
                "PushingWithArmsFromGround",
                "KeyframeMotionParameters::BalancingParameter"
            ],
            [
                "ReduceVel",
                "KeyframeMotionParameters::BalancingParameter"
            ],
            [
                "Split",
                "KeyframeMotionParameters::BalancingParameter"
            ],
            [
                "HalfSplit",
                "KeyframeMotionParameters::BalancingParameter"
            ],
            [
                "Sit",
                "KeyframeMotionParameters::BalancingParameter"
            ],
            [
                "Stand",
                "KeyframeMotionParameters::BalancingParameter"
            ],
            [
                "StandStatic",
                "KeyframeMotionParameters::BalancingParameter"
            ]
        ],
        "GlobalOpponentsModel::OpponentEstimate": [
            [
                "position",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "left",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "right",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "EigenMatrixRow<unsigned char,4>": [
            [
                "elems",
                "unsigned char[4]"
            ]
        ],
        "Strategy::WeightedSetPlay<OwnPenaltyKick>": [
            [
                "type",
                "OwnPenaltyKick::Type"
            ],
            [
                "weight",
                "float"
            ]
        ],
        "Strategy::TacticState": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "transitions",
                "Strategy::TacticState::Transition*"
            ]
        ],
        "DemoGoToBallAndKickImplSkill::Params": [
            [
                "waitPosition",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "ballSeenDuration",
                "int"
            ],
            [
                "lastKickDuration",
                "int"
            ],
            [
                "availableKicks",
                "PowerKickPair*"
            ],
            [
                "kickRepetitionNumber",
                "unsigned int"
            ],
            [
                "numberOfSampledKicksBeforeSoftReset",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<Angle[6],KeyframeLimb,KeyframeLimb_Info>": [
            [
                "leftArm",
                "Angle[6]"
            ],
            [
                "rightArm",
                "Angle[6]"
            ],
            [
                "leftLeg",
                "Angle[6]"
            ],
            [
                "rightLeg",
                "Angle[6]"
            ]
        ],
        "SetPlay::Action": [
            [
                "type",
                "SetPlay::Action::Type"
            ],
            [
                "passTarget",
                "Tactic::Position::Type*"
            ],
            [
                "markZone",
                "Boundary<float>"
            ],
            [
                "pose",
                "Pose2f"
            ]
        ],
        "CalibrationControlImplSkill::Params": [
            [
                "lookAroundDuration",
                "int"
            ],
            [
                "lookAroundDurationMax",
                "int"
            ],
            [
                "notMovingCycles",
                "int"
            ]
        ],
        "PassEvaluation": [],
        "OptionalImageRequest": [
            [
                "sendImage",
                "bool"
            ]
        ],
        "Image<PixelTypes::RGBPixel>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "FieldDimensions::read(In&)::DimensionsOpt": [
            [
                "field",
                "FieldDimensions::read(In&)::DimensionsOpt::Field"
            ]
        ],
        "WalkToPointImplSkill::Params": [
            [
                "switchToPathPlannerDistance",
                "float"
            ],
            [
                "switchToLibWalkDistance",
                "float"
            ],
            [
                "targetForwardWalkingSpeed",
                "float"
            ],
            [
                "translationStopThreshold",
                "float"
            ],
            [
                "translationStartThreshold",
                "float"
            ],
            [
                "rotationStopThreshold",
                "float"
            ],
            [
                "rotationStartThreshold",
                "float"
            ]
        ],
        "JointPlayAnalyserModule::Params": [
            [
                "minMaxRange",
                "unsigned int"
            ]
        ],
        "LowerObstaclesPerceptorData": [
            [
                "cameraInfo",
                "CameraInfo"
            ],
            [
                "cameraMatrix",
                "CameraMatrix"
            ],
            [
                "imageCoordinateSystem",
                "ImageCoordinateSystem"
            ],
            [
                "scanScores",
                "ObstaclesPerceptorData::ScanScore*"
            ],
            [
                "incompleteObstacles",
                "ObstaclesFieldPercept::Obstacle*"
            ]
        ],
        "FieldBoundaryProviderModule::Params": [
            [
                "minDistance",
                "float"
            ],
            [
                "fittingMethod",
                "FittingMethod"
            ],
            [
                "minNumberOfSpots",
                "unsigned int"
            ],
            [
                "maxNumberOfIterations",
                "int"
            ],
            [
                "maxSquaredError",
                "int"
            ],
            [
                "spotAbovePenaltyFactor",
                "int"
            ],
            [
                "acceptanceRatio",
                "float"
            ],
            [
                "randomlyChosenAngleDevThreshold",
                "Angle"
            ],
            [
                "threshold",
                "float"
            ],
            [
                "nonTopPoints",
                "float"
            ],
            [
                "top",
                "int"
            ],
            [
                "uncertaintyLimit",
                "float"
            ],
            [
                "maxPointsUnderBorder",
                "int"
            ]
        ],
        "Eigen::Matrix<float,1,3,0,1,3>": [
            [
                "x",
                "float"
            ],
            [
                "y",
                "float"
            ],
            [
                "z",
                "float"
            ]
        ],
        "FrameInfo": [
            [
                "time",
                "unsigned int"
            ]
        ],
        "FieldBoundary": [
            [
                "boundaryOnField",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "boundaryInImage",
                "Eigen::Matrix<int,2,1,0,2,1>*"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "extrapolated",
                "bool"
            ],
            [
                "odd",
                "bool"
            ]
        ],
        "EnergySavingProviderModule::Params": [
            [
                "motionChangeWaitTime",
                "int"
            ],
            [
                "adjustWaitTime",
                "int"
            ],
            [
                "currentThresholdLegs",
                "int"
            ],
            [
                "currentThresholdLegsHighOffset",
                "int"
            ],
            [
                "currentThresholdArms",
                "int"
            ],
            [
                "minGearStep",
                "Angle"
            ],
            [
                "maxGearStepArms",
                "Angle"
            ],
            [
                "maxGearStepLegs",
                "Angle"
            ],
            [
                "maxAngleMultipleJoints",
                "Angle"
            ],
            [
                "maxAngleOneJoint",
                "Angle"
            ],
            [
                "minNumberForHeatAdjustmentReset",
                "int"
            ],
            [
                "resetTimeNormal",
                "float"
            ],
            [
                "resetTimeSlow",
                "float"
            ],
            [
                "stepsBeforeEmergencyStep",
                "int"
            ],
            [
                "comXDiffRangeBeforeReset",
                "Range<float>"
            ],
            [
                "comYDiffRangeBeforeReset",
                "Range<float>"
            ],
            [
                "skipJoints",
                "Joints::Joint*"
            ],
            [
                "highStandSigns",
                "EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "standSigns",
                "EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "ModuleGraphCreator::ExecutionValues": [
            [
                "received",
                "ModuleGraphCreator::ExecutionValues::StringVector*"
            ],
            [
                "sent",
                "ModuleGraphCreator::ExecutionValues::StringVector*"
            ],
            [
                "representationsToReset",
                "std::string*"
            ],
            [
                "modules",
                "ModuleGraphCreator::ExecutionValues::ModuleRequired*"
            ],
            [
                "providers",
                "Configuration::RepresentationProvider*"
            ]
        ],
        "LinePerceptorModule::Params": [
            [
                "maxLineWidthDeviationPx",
                "int"
            ],
            [
                "maxSkipWidth",
                "int"
            ],
            [
                "maxSkipNumber",
                "int"
            ],
            [
                "greenAroundLineRatio",
                "float"
            ],
            [
                "greenAroundLineRatioCalibration",
                "float"
            ],
            [
                "maxDistantHorizontalLength",
                "float"
            ],
            [
                "maxLineFittingError",
                "float"
            ],
            [
                "minSpotsPerLine",
                "unsigned int"
            ],
            [
                "minSpotsPerLineCalibration",
                "unsigned int"
            ],
            [
                "whiteCheckStepSize",
                "unsigned int"
            ],
            [
                "minWhiteRatio",
                "float"
            ],
            [
                "minSquaredLineLength",
                "float"
            ],
            [
                "maxCircleFittingError",
                "float"
            ],
            [
                "maxCircleRadiusDeviation",
                "float"
            ],
            [
                "minCircleAngleBetweenSpots",
                "Angle"
            ],
            [
                "minSpotsOnCircle",
                "unsigned int"
            ],
            [
                "minCircleWhiteRatio",
                "float"
            ],
            [
                "sqrCircleClusterRadius",
                "float"
            ],
            [
                "minCircleClusterSize",
                "unsigned int"
            ],
            [
                "trimLines",
                "bool"
            ],
            [
                "trimLinesCalibration",
                "bool"
            ],
            [
                "maxWidthImage",
                "int"
            ],
            [
                "maxWidthImageSquared",
                "float"
            ],
            [
                "mFactor",
                "float"
            ],
            [
                "minConsecutiveSpots",
                "int"
            ],
            [
                "squaredWhiteCheckNearField",
                "float"
            ],
            [
                "maxNormalAngleDiff",
                "float"
            ],
            [
                "relaxedGreenCheckAtImageBorder",
                "bool"
            ],
            [
                "perspectivelyCorrectWhiteCheck",
                "bool"
            ],
            [
                "highResolutionScan",
                "bool"
            ]
        ],
        "WalkSpeedParams": [
            [
                "maxSpeed",
                "Pose2f"
            ],
            [
                "maxSpeedBackwards",
                "float"
            ]
        ],
        "DemoTalkImplSkill::Params": [
            [
                "delayBeforeTalking",
                "int"
            ]
        ],
        "ReplayWalkRequestProviderModule::Params": [
            [
                "motionRequests",
                "WalkPhaseData*"
            ]
        ],
        "LibWalkProviderModule::Params": [
            [
                "ballTimeout",
                "int"
            ],
            [
                "obstacleAvoidanceDistance",
                "float"
            ],
            [
                "obstacleAvoidanceMinRadius",
                "float"
            ],
            [
                "obstacleAvoidanceMaxRadius",
                "float"
            ],
            [
                "goalPostAvoidanceDistance",
                "float"
            ],
            [
                "goalPostAvoidanceMinRadius",
                "float"
            ],
            [
                "goalPostAvoidanceMaxRadius",
                "float"
            ],
            [
                "ballAvoidanceDistance",
                "float"
            ],
            [
                "ballAvoidanceMinRadius",
                "float"
            ],
            [
                "ballAvoidanceMaxRadius",
                "float"
            ],
            [
                "penaltyAreaExpansion",
                "float"
            ],
            [
                "penaltyAreaAvoidanceDistance",
                "float"
            ],
            [
                "penaltyAreaAvoidanceMinRadius",
                "float"
            ],
            [
                "penaltyAreaAvoidanceMaxRadius",
                "float"
            ],
            [
                "fieldBorderExpansion",
                "float"
            ],
            [
                "fieldBorderAvoidanceDistance",
                "float"
            ],
            [
                "fieldBorderAvoidanceMinRadius",
                "float"
            ],
            [
                "fieldBorderAvoidanceMaxRadius",
                "float"
            ]
        ],
        "StrategyBehaviorControlModule::Params": [
            [
                "strategy",
                "Strategy::Type"
            ]
        ],
        "FieldDimensions::read(In&)::Dimensions::Field": [
            [
                "length",
                "float"
            ],
            [
                "width",
                "float"
            ],
            [
                "penaltyCrossSize",
                "float"
            ],
            [
                "penaltyAreaLength",
                "float"
            ],
            [
                "penaltyAreaWidth",
                "float"
            ],
            [
                "penaltyCrossDistance",
                "float"
            ],
            [
                "centerCircleDiameter",
                "float"
            ],
            [
                "borderStripWidth",
                "float"
            ]
        ],
        "WalkDelayParameters": [
            [
                "minDelay",
                "float"
            ],
            [
                "heightOffset",
                "Range<float>"
            ],
            [
                "endHeightShift",
                "float"
            ],
            [
                "delayInterpolation",
                "Range<float>"
            ],
            [
                "sideShift",
                "Range<float>"
            ],
            [
                "sideShiftDelayInterpolation",
                "Range<float>"
            ],
            [
                "translationBuffer",
                "float"
            ]
        ],
        "CalibrationRequest": [
            [
                "targetState",
                "CameraCalibrationStatus::State"
            ],
            [
                "totalNumOfSamples",
                "unsigned int"
            ],
            [
                "sampleConfigurationRequest",
                "SampleConfigurationRequest*"
            ],
            [
                "serialNumberIMUCalibration",
                "unsigned int"
            ],
            [
                "preciseJointPositions",
                "bool"
            ],
            [
                "numOfFootSoleCalibration",
                "unsigned int"
            ]
        ],
        "BallContactInformation": [
            [
                "contactType",
                "BallContactInformation::ContactType"
            ],
            [
                "newPosition",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "newVelocity",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "addVelocityCov",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "CNSImageProviderModule::Params": [
            [
                "minContrast",
                "float"
            ],
            [
                "fullImage",
                "bool"
            ]
        ],
        "PenaltyMarkPercept": [
            [
                "positionInImage",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covarianceOnField",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "wasSeen",
                "bool"
            ]
        ],
        "JerseyClassifier": [],
        "InertialSensorData": [
            [
                "gyro",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "gyroVariance",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "acc",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "accVariance",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "angle",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ]
        ],
        "PenaltyMarkRegionsProviderModule::Params": [
            [
                "maxDistanceOnField",
                "float"
            ],
            [
                "regionExtensionFactor",
                "int"
            ],
            [
                "sizeToleranceRatio",
                "float"
            ],
            [
                "minWhiteRatio",
                "float"
            ],
            [
                "blockSizeX",
                "int"
            ],
            [
                "blockSizeY",
                "int"
            ],
            [
                "maxNumberOfRegions",
                "unsigned int"
            ]
        ],
        "Defender::Parameters": [
            [
                "minXDiffToBeClearForward",
                "float"
            ],
            [
                "defenderRoyaleDistanceToGoalArea",
                "float"
            ],
            [
                "defenderRoyaleForwardDistanceToBall",
                "float"
            ],
            [
                "standOffsetMultiplierToAdjustGoalieDefenderLineDistance",
                "float"
            ],
            [
                "ballDistanceInterpolationRange",
                "Range<float>"
            ],
            [
                "rotationThresholdRange",
                "Range<Angle>"
            ],
            [
                "translationXThresholdRange",
                "Range<float>"
            ],
            [
                "translationYThresholdRange",
                "Range<float>"
            ],
            [
                "shouldStopRotation",
                "Angle"
            ],
            [
                "shouldStopTranslation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "annotationTime",
                "float"
            ]
        ],
        "OptionalCameraImage": [
            [
                "image",
                "CameraImage*"
            ]
        ],
        "Image<CNSResponse>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<ArmKeyFrameRequest::Arm,Arms::Arm,Arms::Arm_Info>": [
            [
                "left",
                "ArmKeyFrameRequest::Arm"
            ],
            [
                "right",
                "ArmKeyFrameRequest::Arm"
            ]
        ],
        "EnumIndexedArray<MassCalibration::MassInfo,Limbs::Limb,Limbs::Limb_Info>": [
            [
                "neck",
                "MassCalibration::MassInfo"
            ],
            [
                "head",
                "MassCalibration::MassInfo"
            ],
            [
                "shoulderLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "bicepsLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "elbowLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "foreArmLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "wristLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "shoulderRight",
                "MassCalibration::MassInfo"
            ],
            [
                "bicepsRight",
                "MassCalibration::MassInfo"
            ],
            [
                "elbowRight",
                "MassCalibration::MassInfo"
            ],
            [
                "foreArmRight",
                "MassCalibration::MassInfo"
            ],
            [
                "wristRight",
                "MassCalibration::MassInfo"
            ],
            [
                "pelvisLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "hipLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "thighLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "tibiaLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "ankleLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "footLeft",
                "MassCalibration::MassInfo"
            ],
            [
                "pelvisRight",
                "MassCalibration::MassInfo"
            ],
            [
                "hipRight",
                "MassCalibration::MassInfo"
            ],
            [
                "thighRight",
                "MassCalibration::MassInfo"
            ],
            [
                "tibiaRight",
                "MassCalibration::MassInfo"
            ],
            [
                "ankleRight",
                "MassCalibration::MassInfo"
            ],
            [
                "footRight",
                "MassCalibration::MassInfo"
            ],
            [
                "torso",
                "MassCalibration::MassInfo"
            ]
        ],
        "EnumIndexedArray<bool,Arms::Arm,Arms::Arm_Info>": [
            [
                "left",
                "bool"
            ],
            [
                "right",
                "bool"
            ]
        ],
        "ColorScanLineRegionsHorizontal": [
            [
                "scanLines",
                "ColorScanLineRegionsHorizontal::ScanLine*"
            ]
        ],
        "CalibrationGenerator": [],
        "ScanGrid::Line": [
            [
                "x",
                "int"
            ],
            [
                "yMax",
                "int"
            ],
            [
                "yMaxIndex",
                "unsigned int"
            ]
        ],
        "LowerIntersectionsPercept": [
            [
                "intersections",
                "IntersectionsPercept::Intersection*"
            ]
        ],
        "BHLoggingController::Team": [
            [
                "number",
                "unsigned char"
            ],
            [
                "name",
                "std::string"
            ]
        ],
        "GyroState": [
            [
                "mean",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "deviation",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "filterTimeWindow",
                "int"
            ],
            [
                "notMovingSinceTimestamp",
                "unsigned int"
            ],
            [
                "gyroNotChangingSinceTimestamp",
                "unsigned int"
            ]
        ],
        "WalkLearnerProviderModule::Params": [
            [
                "adjustmentRange",
                "Range<float>"
            ],
            [
                "adjustmentSteps",
                "float"
            ],
            [
                "minForwardStep",
                "float"
            ],
            [
                "maxSideStep",
                "float"
            ],
            [
                "maxTurnStep",
                "Angle"
            ],
            [
                "clipStepDurationRatio",
                "float"
            ],
            [
                "maxStepsForJointPlayInitializing",
                "int"
            ],
            [
                "jointPlayInitializing",
                "float"
            ],
            [
                "bestStepDuration",
                "Range<float>"
            ]
        ],
        "Keyframe3DPose": [
            [
                "trans",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "rot",
                "Eigen::Matrix<Angle,3,1,0,3,1>*"
            ]
        ],
        "BallDropInModel": [
            [
                "isValid",
                "bool"
            ],
            [
                "dropInTypes",
                "unsigned int"
            ],
            [
                "lastTimeWhenBallOutWasObserved",
                "unsigned int"
            ],
            [
                "lastTimeWhenBallWentOut",
                "unsigned int"
            ],
            [
                "lastTimeWhenBallWasOnTheField",
                "unsigned int"
            ],
            [
                "ballDirection",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "outPosition",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "dropInPositions",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ]
        ],
        "MotionRequest::ObstacleAvoidance": [
            [
                "avoidance",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "path",
                "MotionRequest::ObstacleAvoidance::PathSegment*"
            ]
        ],
        "BehaviorStatus": [
            [
                "calibrationFinished",
                "bool"
            ],
            [
                "passTarget",
                "int"
            ],
            [
                "passOrigin",
                "int"
            ],
            [
                "walkingTo",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "speed",
                "float"
            ],
            [
                "shootingTo",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ]
        ],
        "CameraCalibrationStatus": [
            [
                "state",
                "CameraCalibrationStatus::State"
            ],
            [
                "inStateSince",
                "int"
            ],
            [
                "sampleConfigurationStatus",
                "SampleConfigurationStatus"
            ]
        ],
        "JerseyClassifierProvider2020For2023Module::Params": [
            [
                "jerseyYRange",
                "Range<float>"
            ],
            [
                "whiteScanHeightRatio",
                "float"
            ],
            [
                "grayRange",
                "Range<float>"
            ],
            [
                "jerseyMinYSamples",
                "int"
            ],
            [
                "jerseyMaxYSamples",
                "float"
            ],
            [
                "jerseyMaxXSamples",
                "float"
            ],
            [
                "relativeJerseyWidth",
                "float"
            ],
            [
                "hueSimilarityThreshold",
                "int"
            ],
            [
                "colorDelimiter",
                "unsigned char"
            ],
            [
                "weighPixels",
                "bool"
            ],
            [
                "minJerseyWeightRatio",
                "float"
            ],
            [
                "minJerseyRatio",
                "float"
            ],
            [
                "whiteScanOffSet",
                "int"
            ],
            [
                "satThreshold",
                "unsigned char"
            ]
        ],
        "ArmKeyFrameRequest": [
            [
                "arms",
                "EnumIndexedArray<ArmKeyFrameRequest::Arm,Arms::Arm,Arms::Arm_Info>"
            ]
        ],
        "WalkLearner": [
            [
                "newGyroForwardBalance",
                "float"
            ],
            [
                "newGyroBackwardBalance",
                "float"
            ],
            [
                "stepHeightDurationOffset",
                "float"
            ],
            [
                "useWalkLearner",
                "bool"
            ]
        ],
        "EnumIndexedArray<KeyframeMotionList,KeyframeMotionListID::KeyframeMotionListID,KeyframeMotionListID::KeyframeMotionListID_Info>": [
            [
                "front",
                "KeyframeMotionList"
            ],
            [
                "back",
                "KeyframeMotionList"
            ],
            [
                "recoverGeneric",
                "KeyframeMotionList"
            ],
            [
                "catchBack",
                "KeyframeMotionList"
            ],
            [
                "catchFront",
                "KeyframeMotionList"
            ],
            [
                "recoverFromGenu",
                "KeyframeMotionList"
            ],
            [
                "recoverFromSumo",
                "KeyframeMotionList"
            ],
            [
                "restartFront",
                "KeyframeMotionList"
            ],
            [
                "restartBack",
                "KeyframeMotionList"
            ],
            [
                "stand",
                "KeyframeMotionList"
            ],
            [
                "sit",
                "KeyframeMotionList"
            ],
            [
                "sitDown",
                "KeyframeMotionList"
            ],
            [
                "sitDownKeeper",
                "KeyframeMotionList"
            ],
            [
                "keeperJumpLeft",
                "KeyframeMotionList"
            ],
            [
                "genuflectStand",
                "KeyframeMotionList"
            ],
            [
                "genuflectStandDefender",
                "KeyframeMotionList"
            ],
            [
                "demoBannerWave",
                "KeyframeMotionList"
            ],
            [
                "demoBannerWaveInitial",
                "KeyframeMotionList"
            ]
        ],
        "OtherObstaclesPerceptorData": [
            [
                "cameraInfo",
                "CameraInfo"
            ],
            [
                "cameraMatrix",
                "CameraMatrix"
            ],
            [
                "imageCoordinateSystem",
                "ImageCoordinateSystem"
            ],
            [
                "scanScores",
                "ObstaclesPerceptorData::ScanScore*"
            ],
            [
                "incompleteObstacles",
                "ObstaclesFieldPercept::Obstacle*"
            ]
        ],
        "AudioProviderModule::Params": [
            [
                "retries",
                "unsigned int"
            ],
            [
                "retryDelay",
                "unsigned int"
            ],
            [
                "allChannels",
                "bool"
            ],
            [
                "sampleRate",
                "unsigned int"
            ],
            [
                "frames",
                "unsigned int"
            ],
            [
                "onlySoundInSetAndPlaying",
                "bool"
            ],
            [
                "captureCard",
                "std::string"
            ],
            [
                "captureVolume",
                "float"
            ]
        ],
        "KeyframeMotionParameters": [
            [
                "balanceList",
                "EnumIndexedArray<KeyframeMotionParameters::BalancingParameter,KeyframeMotionPhases::KeyframeMotionPhase,KeyframeMotionPhases::KeyframeMotionPhase_Info>"
            ]
        ],
        "Keyframe3DPoseWrapper": [
            [
                "pose",
                "Keyframe3DPose*"
            ]
        ],
        "FilteredBallPercept": [
            [
                "positionInImage",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covOnField",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "radiusOnField",
                "float"
            ],
            [
                "timeWhenSeen",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<LEDRequest::LEDState,LEDRequest::LED,LEDRequest::LED_Info>": [
            [
                "faceLeftRed0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftRed45Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftRed90Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftRed135Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftRed180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftRed225Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftRed270Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftRed315Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen45Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen90Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen135Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen225Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen270Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftGreen315Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue45Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue90Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue135Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue225Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue270Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceLeftBlue315Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed45Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed90Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed135Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed225Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed270Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightRed315Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen45Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen90Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen135Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen225Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen270Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightGreen315Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue45Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue90Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue135Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue225Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue270Deg",
                "LEDRequest::LEDState"
            ],
            [
                "faceRightBlue315Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft36Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft72Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft108Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft144Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft216Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft252Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft288Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsLeft324Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight0Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight36Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight72Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight108Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight144Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight180Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight216Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight252Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight288Deg",
                "LEDRequest::LEDState"
            ],
            [
                "earsRight324Deg",
                "LEDRequest::LEDState"
            ],
            [
                "chestRed",
                "LEDRequest::LEDState"
            ],
            [
                "chestGreen",
                "LEDRequest::LEDState"
            ],
            [
                "chestBlue",
                "LEDRequest::LEDState"
            ],
            [
                "headRearLeft0",
                "LEDRequest::LEDState"
            ],
            [
                "headRearLeft1",
                "LEDRequest::LEDState"
            ],
            [
                "headRearLeft2",
                "LEDRequest::LEDState"
            ],
            [
                "headRearRight0",
                "LEDRequest::LEDState"
            ],
            [
                "headRearRight1",
                "LEDRequest::LEDState"
            ],
            [
                "headRearRight2",
                "LEDRequest::LEDState"
            ],
            [
                "headMiddleRight0",
                "LEDRequest::LEDState"
            ],
            [
                "headFrontRight0",
                "LEDRequest::LEDState"
            ],
            [
                "headFrontRight1",
                "LEDRequest::LEDState"
            ],
            [
                "headFrontLeft0",
                "LEDRequest::LEDState"
            ],
            [
                "headFrontLeft1",
                "LEDRequest::LEDState"
            ],
            [
                "headMiddleLeft0",
                "LEDRequest::LEDState"
            ],
            [
                "footLeftRed",
                "LEDRequest::LEDState"
            ],
            [
                "footLeftGreen",
                "LEDRequest::LEDState"
            ],
            [
                "footLeftBlue",
                "LEDRequest::LEDState"
            ],
            [
                "footRightRed",
                "LEDRequest::LEDState"
            ],
            [
                "footRightGreen",
                "LEDRequest::LEDState"
            ],
            [
                "footRightBlue",
                "LEDRequest::LEDState"
            ]
        ],
        "CNSImage": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<int,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>": [
            [
                "motionRequest",
                "int"
            ],
            [
                "headMotionRequest",
                "int"
            ],
            [
                "calibrationFinished",
                "int"
            ],
            [
                "passTarget",
                "int"
            ]
        ],
        "LowerLinesPercept": [
            [
                "lines",
                "LinesPercept::Line*"
            ]
        ],
        "ArmContactModel": [
            [
                "status",
                "ArmContactModel::ArmContact[2]"
            ]
        ],
        "EigenMatrixRow<float,6>": [
            [
                "elems",
                "float[6]"
            ]
        ],
        "LEDHandlerModule::Params": [
            [
                "chargingLightSlowness",
                "int"
            ],
            [
                "tempForHalfLEDActive",
                "int"
            ],
            [
                "tempForLEDBlinking",
                "int"
            ],
            [
                "tempForLEDFastBlinking",
                "int"
            ]
        ],
        "ActivationGraph::Node": [
            [
                "option",
                "std::string"
            ],
            [
                "depth",
                "int"
            ],
            [
                "state",
                "std::string"
            ],
            [
                "optionTime",
                "int"
            ],
            [
                "stateTime",
                "int"
            ],
            [
                "parameters",
                "std::string*"
            ]
        ],
        "RobotDetectorModule::Params": [
            [
                "objectThres",
                "float"
            ],
            [
                "xyStep",
                "unsigned int"
            ],
            [
                "xyRegions",
                "unsigned int"
            ],
            [
                "minContrastDiff",
                "short"
            ],
            [
                "brightnessThreshold",
                "short"
            ],
            [
                "satThreshold",
                "unsigned char"
            ],
            [
                "mixedThresh",
                "float"
            ],
            [
                "minHetSpots",
                "int"
            ],
            [
                "minNeighborPoints",
                "unsigned int"
            ],
            [
                "minPixel",
                "int"
            ],
            [
                "minWidthOnFieldNoMatch",
                "float"
            ],
            [
                "trimObstacles",
                "bool"
            ],
            [
                "minBeforeAfterTrimRatio",
                "float"
            ],
            [
                "mergeLowerObstacles",
                "bool"
            ],
            [
                "pRobotRotationDeviationInStand",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "pRobotRotationDeviation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "WaitCondition": [
            [
                "variable",
                "ConditionVar"
            ],
            [
                "range",
                "Range<float>"
            ],
            [
                "isNot",
                "bool"
            ],
            [
                "maxWaitTime",
                "int"
            ]
        ],
        "ConditionPair": [
            [
                "conditions",
                "Condition*"
            ],
            [
                "isAnd",
                "bool"
            ]
        ],
        "WalkingEngineCommon": [
            [
                "minPhaseForStopWithWrongGroundContact",
                "float"
            ],
            [
                "standStiffnessDelay",
                "int"
            ],
            [
                "clipForward",
                "Range<float>"
            ],
            [
                "lowStiffnessDelay",
                "int"
            ],
            [
                "clipAtBallDistanceX",
                "float"
            ],
            [
                "clipAtBallDistance",
                "float"
            ],
            [
                "standHighTorsoPitch",
                "Angle"
            ],
            [
                "standInterpolationVelocity",
                "Angle"
            ],
            [
                "standHighInterpolationDuration",
                "float"
            ],
            [
                "lowStiffnessLegs",
                "int"
            ],
            [
                "lowStiffnessAnklePitch",
                "int"
            ],
            [
                "standHighNotMovingTime",
                "int"
            ],
            [
                "highDeltaScale",
                "float"
            ],
            [
                "minTimeForEarlySwitch",
                "float"
            ],
            [
                "maxWalkDirectionForFootPrediction",
                "Angle"
            ],
            [
                "useFootSupportSwitchPrediction",
                "bool"
            ],
            [
                "blockStoppingWithStepAdjustment",
                "bool"
            ],
            [
                "useJointPlayScaling",
                "bool"
            ],
            [
                "commonSpeedParameters",
                "CommonSpeedParameters"
            ],
            [
                "kinematicParameters",
                "KinematicParameters"
            ],
            [
                "emergencyStep",
                "EmergencyStepParameters"
            ],
            [
                "armParameters",
                "ArmParameters"
            ],
            [
                "stepSizeParameters",
                "StepSizeParameters"
            ],
            [
                "balanceParameters",
                "BalanceParameters"
            ],
            [
                "walkStepAdjustmentParams",
                "WalkStepAdjustmentParams"
            ],
            [
                "soleRotationParameter",
                "SoleRotationParameter"
            ],
            [
                "parabolicFootHeightParameters",
                "ParabolicFootHeightParameters"
            ],
            [
                "stiffnessParameters",
                "StiffnessParameters"
            ],
            [
                "speedRegulatorParams",
                "SpeedRegulatorParams"
            ],
            [
                "walkDelayParameters",
                "WalkDelayParameters"
            ],
            [
                "walkSpeedParamsWalkStep",
                "WalkSpeedParams"
            ],
            [
                "sideStabilizeParameters",
                "SideStabilizeParameters"
            ]
        ],
        "Strategy::WeightedSetPlay<OwnKickOff>": [
            [
                "type",
                "OwnKickOff::Type"
            ],
            [
                "weight",
                "float"
            ]
        ],
        "ParabolicFootHeightParameters": [
            [
                "maxHeightAfterTime",
                "float"
            ],
            [
                "maxHeightAfterTimePercent",
                "float"
            ]
        ],
        "DebugRequest": [
            [
                "name",
                "std::string"
            ],
            [
                "enable",
                "bool"
            ]
        ],
        "Eigen::Matrix<unsigned char,4,4,1,4,4>": [
            [
                "rows",
                "EigenMatrixRow<unsigned char,4>[4]"
            ]
        ],
        "DynPoint": [
            [
                "limb",
                "int"
            ],
            [
                "phaseNumber",
                "int"
            ],
            [
                "duration",
                "int"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "angle",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "odometryOffset",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "CameraResolutionRequest": [
            [
                "resolutions",
                "EnumIndexedArray<CameraResolutionRequest::Resolutions,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ]
        ],
        "Odometer": [
            [
                "distanceWalked",
                "float"
            ],
            [
                "odometryOffset",
                "Pose2f"
            ],
            [
                "odometryOffsetCovariance",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ]
        ],
        "ExtendedGameState": [
            [
                "stateLastFrame",
                "GameState::State"
            ],
            [
                "playerStateLastFrame",
                "GameState::PlayerState"
            ],
            [
                "messageBudgetLastFrame",
                "unsigned int"
            ],
            [
                "returnFromGameControllerPenalty",
                "bool"
            ],
            [
                "returnFromManualPenalty",
                "bool"
            ],
            [
                "timeWhenStateStarted",
                "unsigned int[31]"
            ],
            [
                "timeWhenPlayerStateStarted",
                "unsigned int[15]"
            ]
        ],
        "UpperBallPercept": [
            [
                "positionInImage",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radiusInImage",
                "float"
            ],
            [
                "status",
                "BallPercept::Status"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radiusOnField",
                "float"
            ],
            [
                "covarianceOnField",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ]
        ],
        "WalkKickStep": [
            [
                "keyframe",
                "WalkKickStep::StepKeyframe*"
            ],
            [
                "longKickParams",
                "WalkKickStep::LongKickParams*"
            ],
            [
                "increaseSwingHeightFactor",
                "float"
            ],
            [
                "reduceSwingFootHeight",
                "float"
            ],
            [
                "numOfBalanceSteps",
                "int"
            ],
            [
                "useSlowSupportFootHeightAfterKickInterpolation",
                "bool"
            ],
            [
                "useSlowSwingFootHeightInterpolation",
                "float"
            ],
            [
                "overrideOldSwingFoot",
                "WalkKickStep::OverrideFoot"
            ],
            [
                "overrideOldSupportFoot",
                "WalkKickStep::OverrideFoot"
            ],
            [
                "currentKick",
                "WalkKicks::Type"
            ],
            [
                "useLastKeyframeForSupportFootXTranslation",
                "bool"
            ]
        ],
        "FieldDimensions::LinesTable::Line": [
            [
                "from",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "to",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "FieldRating": [],
        "DuelTimings": [
            [
                "maxTimeDoingNothing",
                "int"
            ],
            [
                "deactiveAfterDoingNothing",
                "int"
            ],
            [
                "sidewardRestrictionTime",
                "int"
            ],
            [
                "noKickMinTime",
                "int"
            ],
            [
                "noKickStealMinTime",
                "int"
            ],
            [
                "ignoreSkillRequestTime",
                "int"
            ]
        ],
        "Strategy::WeightedSetPlay<OpponentFreeKick>": [
            [
                "type",
                "OpponentFreeKick::Type"
            ],
            [
                "weight",
                "float"
            ]
        ],
        "JointSensorData": [
            [
                "angles",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "variance",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "currents",
                "EnumIndexedArray<short,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "temperatures",
                "EnumIndexedArray<unsigned char,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "status",
                "EnumIndexedArray<JointSensorData::TemperatureStatus,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "GameState::Team": [
            [
                "playerStates",
                "GameState::PlayerState[20]"
            ],
            [
                "number",
                "int"
            ],
            [
                "fieldPlayerColor",
                "Settings::TeamColor"
            ],
            [
                "goalkeeperColor",
                "Settings::TeamColor"
            ],
            [
                "goalkeeperNumber",
                "int"
            ],
            [
                "score",
                "unsigned int"
            ],
            [
                "messageBudget",
                "unsigned int"
            ]
        ],
        "OtherFieldBoundary": [
            [
                "boundaryOnField",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "boundaryInImage",
                "Eigen::Matrix<int,2,1,0,2,1>*"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "extrapolated",
                "bool"
            ],
            [
                "odd",
                "bool"
            ]
        ],
        "CameraMatrix": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ],
            [
                "isValid",
                "bool"
            ]
        ],
        "SkillRegistryBase::Configuration": [
            [
                "skillImplementations",
                "SkillRegistryBase::Configuration::SkillImplementation*"
            ]
        ],
        "GoToBallAndKickImplSkill::Params": [
            [
                "switchToPathPlannerDistance",
                "float"
            ],
            [
                "switchToLibWalkDistance",
                "float"
            ],
            [
                "goalkeeperDoNotIgnoreObstaclesDistance",
                "float"
            ],
            [
                "goalkeeperIgnoreObstaclesDistance",
                "float"
            ]
        ],
        "DribbleToGoalImplSkill::Params": [
            [
                "iterationSteps",
                "int"
            ],
            [
                "stepLength",
                "float"
            ],
            [
                "obstacleDistance",
                "float"
            ],
            [
                "minFreeSector",
                "Angle"
            ],
            [
                "dribbleRange",
                "float"
            ],
            [
                "safeDistanceToFieldBoarder",
                "float"
            ],
            [
                "lookActiveMinBallDistance",
                "float"
            ],
            [
                "searchStepDrawWidth",
                "float"
            ],
            [
                "searchStepDrawScale",
                "float"
            ],
            [
                "searchStepDrawModulo",
                "int"
            ]
        ],
        "SetPlay": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ]
        ],
        "Image<PixelTypes::YUYVPixel>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "UpperCameraStatus": [
            [
                "ok",
                "bool"
            ]
        ],
        "Obstacle": [
            [
                "covariance",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "center",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "left",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "right",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "velocity",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "lastSeen",
                "unsigned int"
            ],
            [
                "type",
                "Obstacle::Type"
            ]
        ],
        "ArmContactImplSkill::Params": [
            [
                "stayBackTime",
                "int"
            ],
            [
                "deadTime",
                "int"
            ]
        ],
        "PenaltyKick": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ]
        ],
        "ColorScanLineRegionsVertical": [
            [
                "scanLines",
                "ColorScanLineRegionsVertical::ScanLine*"
            ],
            [
                "lowResStart",
                "unsigned int"
            ],
            [
                "lowResStep",
                "unsigned int"
            ]
        ],
        "OpponentPenaltyKick": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ]
        ],
        "Strategy::WeightedSetPlay<OpponentKickOff>": [
            [
                "type",
                "OpponentKickOff::Type"
            ],
            [
                "weight",
                "float"
            ]
        ],
        "JointPlayTranslation::JointPlayState": [
            [
                "offset",
                "Angle"
            ],
            [
                "play",
                "Angle"
            ]
        ],
        "InertialDataProviderModule::Params": [
            [
                "gyroVariance",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "accVariance",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "accVarianceWhileWalking",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "accVarianceWhileStanding",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "accVarianceFactor",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "maxMeanSquaredDeviation",
                "float"
            ]
        ],
        "HeadMotionRequest": [
            [
                "mode",
                "HeadMotionRequest::Mode"
            ],
            [
                "cameraControlMode",
                "HeadMotionRequest::CameraControlMode"
            ],
            [
                "pan",
                "Angle"
            ],
            [
                "tilt",
                "Angle"
            ],
            [
                "speed",
                "Angle"
            ],
            [
                "target",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "stopAndGoMode",
                "bool"
            ]
        ],
        "BallSearchAreas": [
            [
                "grid",
                "BallSearchAreas::Cell*"
            ],
            [
                "cellLength",
                "float"
            ],
            [
                "cellCountX",
                "int"
            ],
            [
                "cellCountY",
                "int"
            ]
        ],
        "GameState": [
            [
                "phase",
                "GameState::Phase"
            ],
            [
                "timeWhenPhaseEnds",
                "unsigned int"
            ],
            [
                "state",
                "GameState::State"
            ],
            [
                "timeWhenStateStarted",
                "unsigned int"
            ],
            [
                "timeWhenStateEnds",
                "unsigned int"
            ],
            [
                "kickOffSetupFromSidelines",
                "bool"
            ],
            [
                "ownTeam",
                "GameState::Team"
            ],
            [
                "opponentTeam",
                "GameState::Team"
            ],
            [
                "playerNumber",
                "int"
            ],
            [
                "playerState",
                "GameState::PlayerState"
            ],
            [
                "timeWhenPlayerStateStarted",
                "unsigned int"
            ],
            [
                "gameControllerActive",
                "bool"
            ],
            [
                "leftHandTeam",
                "bool"
            ],
            [
                "competitionPhase",
                "GameState::CompetitionPhase"
            ],
            [
                "whistled",
                "bool"
            ]
        ],
        "JointPlayOffsetParameters": [
            [
                "applyOffsetFactor",
                "float"
            ],
            [
                "applyOffsetFactorAnkle",
                "float"
            ]
        ],
        "LegacyMeasurementCovarianceProviderModule::Params": [
            [
                "robotRotationDeviationDefault",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "robotRotationDeviationInStandDefault",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "ExtendedGameStateProviderModule::Params": [
            [
                "minPenaltyTime",
                "int"
            ],
            [
                "minPenaltyTimeIPS",
                "int"
            ]
        ],
        "IMUCalibration": [
            [
                "rotation",
                "Eigen::AngleAxis<float>"
            ],
            [
                "gyroFactor",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "isCalibrated",
                "bool"
            ],
            [
                "serialNumberIMUCalibration",
                "unsigned int"
            ]
        ],
        "FieldLines": [
            [
                "lines",
                "FieldLines::Line*"
            ]
        ],
        "Range<float>": [
            [
                "min",
                "float"
            ],
            [
                "max",
                "float"
            ]
        ],
        "Eigen::Matrix<Angle,3,1,0,3,1>": [
            [
                "x",
                "Angle"
            ],
            [
                "y",
                "Angle"
            ],
            [
                "z",
                "Angle"
            ]
        ],
        "SpeedRegulatorParams": [
            [
                "rotationSpeedHYP",
                "Range<Angle>"
            ],
            [
                "rotationSpeedHip",
                "Range<Angle>"
            ],
            [
                "rotationSpeedAnklePitch",
                "Range<Angle>"
            ],
            [
                "rotationSpeedKnee",
                "Range<Angle>"
            ],
            [
                "rotationSpeedRoll",
                "Range<Angle>"
            ],
            [
                "pitchRatioForward",
                "Range<float>"
            ],
            [
                "pitchRatioBackward",
                "Range<float>"
            ],
            [
                "rollRatio",
                "Range<float>"
            ],
            [
                "rotationErrorRatioForwardWornOut",
                "Range<Angle>"
            ],
            [
                "rotationErrorRatioForwardGood",
                "Range<Angle>"
            ],
            [
                "rotationErrorRatioBackward",
                "Range<Angle>"
            ]
        ],
        "RotationMatrix": [
            [
                "cols",
                "EigenMatrixRow<float,3>[3]"
            ]
        ],
        "GoaliePose": [
            [
                "goaliePoseField",
                "Pose2f"
            ],
            [
                "goaliePoseRel",
                "Pose2f"
            ],
            [
                "isNearLeftPost",
                "bool"
            ],
            [
                "isNearRightPost",
                "bool"
            ]
        ],
        "SE3WithCov": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ]
        ],
        "FreeKick::Condition": [
            [
                "ballToOpponentGoalDistanceGE",
                "float"
            ],
            [
                "ballToOpponentGoalDistanceLE",
                "float"
            ],
            [
                "ballToOpponentGoalAbsAngleGE",
                "Angle"
            ],
            [
                "ballToOpponentGoalAbsAngleLE",
                "Angle"
            ],
            [
                "ballXGE",
                "float"
            ],
            [
                "ballXLE",
                "float"
            ],
            [
                "ballYAbsGE",
                "float"
            ],
            [
                "ballYAbsLE",
                "float"
            ]
        ],
        "DelayKickParams": [
            [
                "delay",
                "float"
            ],
            [
                "kickIndex",
                "int"
            ]
        ],
        "StiffnessPair": [
            [
                "joint",
                "Joints::Joint"
            ],
            [
                "s",
                "int"
            ]
        ],
        "GroundTruthWorldState::GroundTruthPlayer": [
            [
                "number",
                "int"
            ],
            [
                "pose",
                "Pose2f"
            ],
            [
                "upright",
                "bool"
            ]
        ],
        "AlternativeRobotPoseProviderModule::Params": [
            [
                "maxTimeToKeepObservation",
                "int"
            ],
            [
                "translationDifference",
                "float"
            ],
            [
                "rotationDifference",
                "float"
            ],
            [
                "maxClusters",
                "unsigned int"
            ]
        ],
        "CenterCircleWithLinePerceptorModule::Params": [
            [
                "bufferTimeCenterCircle",
                "int"
            ],
            [
                "minimumLengthOfPerceivedLine",
                "float"
            ],
            [
                "maxExtraCheckingLineLength",
                "float"
            ],
            [
                "maxLineDeviationFromCenter",
                "float"
            ],
            [
                "maxAbsAngleAlpha",
                "Angle"
            ]
        ],
        "ECImageProviderModule::Params": [
            [
                "disableColor",
                "bool"
            ]
        ],
        "MeasurementCovariance": [],
        "ObstacleModelProviderModule::Params": [
            [
                "maxDistance",
                "unsigned int"
            ],
            [
                "minPercepts",
                "unsigned int"
            ],
            [
                "debug",
                "bool"
            ],
            [
                "notSeenThreshold",
                "unsigned int"
            ],
            [
                "deleteAfter",
                "int"
            ],
            [
                "pNp",
                "float"
            ],
            [
                "odoDeviation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "useArmContactModel",
                "bool"
            ],
            [
                "armCov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "maxContactTime",
                "int"
            ],
            [
                "useFootBumperState",
                "bool"
            ],
            [
                "feetCov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "distJointToToe",
                "unsigned int"
            ],
            [
                "distToeToBumper",
                "unsigned int"
            ],
            [
                "useTeammatePositionForClassification",
                "bool"
            ],
            [
                "maxTeammateRadius",
                "unsigned int"
            ],
            [
                "weightedSum",
                "float"
            ],
            [
                "maxMergeRadius",
                "unsigned int"
            ],
            [
                "mergeOverlapTimeDiff",
                "unsigned int"
            ],
            [
                "minMahalanobisDistance",
                "float"
            ],
            [
                "cameraAngleFactor",
                "float"
            ],
            [
                "recentlySeenTime",
                "int"
            ],
            [
                "mergeDistance",
                "float"
            ],
            [
                "minMergeDistance",
                "unsigned int"
            ],
            [
                "velocitySampleTime",
                "int"
            ],
            [
                "minSamplesForCalculation",
                "unsigned int"
            ],
            [
                "minVelocityForMotionDetection",
                "int"
            ],
            [
                "maxVelocityForMotionDetection",
                "int"
            ],
            [
                "teamThreshold",
                "int"
            ],
            [
                "uprightThreshold",
                "int"
            ]
        ],
        "CNSBallSpotsProviderModule::Params": [
            [
                "contourSubDivisions",
                "int"
            ],
            [
                "maxTableRadius",
                "float"
            ],
            [
                "minTableHeight",
                "float"
            ],
            [
                "maxTableHeight",
                "float"
            ],
            [
                "spacing",
                "float"
            ],
            [
                "usePrediction",
                "bool"
            ],
            [
                "refineIterations",
                "int"
            ],
            [
                "refineStepSize",
                "float"
            ],
            [
                "minResponse",
                "float"
            ]
        ],
        "Keyframe3DPoseArray": [
            [
                "robotPoses",
                "EnumIndexedArray<Keyframe3DPoseWrapper,KeyframeLimb,KeyframeLimb_Info>"
            ]
        ],
        "GoToBallAndDribbleImplSkill::Params": [
            [
                "switchToPathPlannerDistance",
                "float"
            ],
            [
                "switchToLibWalkDistance",
                "float"
            ]
        ],
        "InterceptBallProviderModule::Params": [
            [
                "timeOffset",
                "float"
            ],
            [
                "footRectLengthOffset",
                "float"
            ],
            [
                "footRectYOffset",
                "float"
            ]
        ],
        "SkillRequest": [
            [
                "skill",
                "SkillRequest::Type"
            ],
            [
                "target",
                "Pose2f"
            ],
            [
                "passTarget",
                "int"
            ]
        ],
        "BallPerceptorModule::Params": [
            [
                "encoderName",
                "std::string"
            ],
            [
                "classifierName",
                "std::string"
            ],
            [
                "correctorName",
                "std::string"
            ],
            [
                "guessedThreshold",
                "float"
            ],
            [
                "acceptThreshold",
                "float"
            ],
            [
                "ensureThreshold",
                "float"
            ],
            [
                "normalizationMode",
                "BallPerceptorModule::Params::NormalizationMode"
            ],
            [
                "normalizationOutlierRatio",
                "float"
            ],
            [
                "ballAreaFactor",
                "float"
            ],
            [
                "useFloat",
                "bool"
            ],
            [
                "extractionMode",
                "PatchUtilities::ExtractionMode"
            ]
        ],
        "EnumIndexedArray<bool,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "bool"
            ],
            [
                "lower",
                "bool"
            ]
        ],
        "KeypointsProviderModule::Params": [
            [
                "filename",
                "std::string"
            ],
            [
                "maskCenterY",
                "float"
            ],
            [
                "maskRadius",
                "float"
            ],
            [
                "maskWidth",
                "int"
            ],
            [
                "maskRecomputeThreshold",
                "float"
            ],
            [
                "minConfidence",
                "float"
            ]
        ],
        "TeammatesBallModel": [
            [
                "position",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "velocity",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "newerThanOwnBall",
                "bool"
            ]
        ],
        "ArmContactModelProviderModule::Params": [
            [
                "frameDelay",
                "int"
            ],
            [
                "minimalContactDuration",
                "unsigned int"
            ],
            [
                "yErrorThresholdBase",
                "float"
            ],
            [
                "xErrorThresholdBase",
                "float"
            ],
            [
                "yErrorThresholdExtension",
                "float"
            ],
            [
                "xErrorThresholdExtension",
                "float"
            ],
            [
                "soundWaitTime",
                "int"
            ]
        ],
        "HeadTarget": [
            [
                "pan",
                "Angle"
            ],
            [
                "tilt",
                "Angle"
            ],
            [
                "speed",
                "Angle"
            ],
            [
                "cameraControlMode",
                "HeadMotionRequest::CameraControlMode"
            ],
            [
                "stopAndGoMode",
                "bool"
            ]
        ],
        "Boundary<float>": [
            [
                "x",
                "Range<float>"
            ],
            [
                "y",
                "Range<float>"
            ]
        ],
        "OracledWorldModelProviderModule::Params": [
            [
                "robotPoseOffset",
                "Pose2f"
            ],
            [
                "obstacleModelMaxDistance",
                "float"
            ]
        ],
        "WalkToBallEngineModule::Params": [
            [
                "minTimeSinceBallSeen",
                "int"
            ]
        ],
        "EnumIndexedArray<SolePressureInfo,Legs::Leg,Legs::Leg_Info>": [
            [
                "left",
                "SolePressureInfo"
            ],
            [
                "right",
                "SolePressureInfo"
            ]
        ],
        "SectorWheel::Sector": [
            [
                "angleRange",
                "Range<Angle>"
            ],
            [
                "distance",
                "float"
            ],
            [
                "type",
                "SectorWheel::Sector::Type"
            ]
        ],
        "TeamData": [
            [
                "teammates",
                "Teammate*"
            ],
            [
                "receivedMessages",
                "unsigned int"
            ],
            [
                "receivedUnsynchronizedMessages",
                "unsigned int"
            ]
        ],
        "Phase": [
            [
                "duration",
                "unsigned int"
            ],
            [
                "leftFootTra1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftFootTra2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftFootRot1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftFootRot2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightFootTra1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightFootTra2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightFootRot1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightFootRot2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftArmTra1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftArmTra2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftHandRot1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftHandRot2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightArmTra1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightArmTra2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightHandRot1",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "rightHandRot2",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "comTra1",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "comTra2",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "headTra1",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "headTra2",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "odometryOffset",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "KeyStates": [
            [
                "pressed",
                "EnumIndexedArray<bool,KeyStates::Key,KeyStates::Key_Info>"
            ]
        ],
        "PenaltyMarkWithPenaltyAreaLinePerceptorModule::Params": [
            [
                "minimumLineLength",
                "float"
            ],
            [
                "maximumDeviation",
                "float"
            ],
            [
                "bufferTimePenaltyMark",
                "int"
            ]
        ],
        "PassToTeammateImplSkill::Params": [
            [
                "allowedKicks",
                "KickInfo::KickType*"
            ],
            [
                "doSpecialKickChecks",
                "bool"
            ],
            [
                "minKickLengthForLong",
                "float"
            ],
            [
                "ratingThreshold",
                "float"
            ],
            [
                "passAheadDistance",
                "float"
            ],
            [
                "minAngleOffset",
                "Angle"
            ],
            [
                "maxAngleOffset",
                "Angle"
            ],
            [
                "maxAngleOffsetBehind",
                "Angle"
            ],
            [
                "maxPrecisionOffset",
                "Angle"
            ],
            [
                "waitingPositionOffset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "targetOffsetToFieldBorder",
                "float"
            ],
            [
                "timeLeftToAdjust",
                "int"
            ],
            [
                "minTimeWaiting",
                "int"
            ],
            [
                "maxTimeWaiting",
                "int"
            ],
            [
                "maxTimeWaitingFactor",
                "float"
            ],
            [
                "kickRangeOffset",
                "float"
            ],
            [
                "averageKickExecutionTime",
                "float"
            ],
            [
                "averageKickBallOffset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "ignoreObstaclesThreshold",
                "float"
            ],
            [
                "ignoreDynamicObstaclesThreshold",
                "float"
            ],
            [
                "lookAhead",
                "bool"
            ],
            [
                "maxLookAheadTime",
                "float"
            ],
            [
                "interceptionDistanceThreshold",
                "Range<float>"
            ],
            [
                "targetDistanceScale",
                "Range<float>"
            ],
            [
                "minRating",
                "float"
            ],
            [
                "maxHeadAngle",
                "Angle"
            ],
            [
                "headSpeed",
                "Angle"
            ],
            [
                "headTilt",
                "Angle"
            ]
        ],
        "CameraMatrixProvider::ModelPoints": [
            [
                "thighPoints",
                "float*"
            ],
            [
                "thighIndex",
                "int*"
            ],
            [
                "shinPoints",
                "float*"
            ],
            [
                "shinIndex",
                "int*"
            ],
            [
                "footPoints",
                "float*"
            ],
            [
                "footIndex",
                "int*"
            ]
        ],
        "DamageConfigurationBody": [
            [
                "noFieldGenuflect",
                "bool"
            ],
            [
                "brokenStandUp",
                "DamageConfigurationBody::BrokenStandUp"
            ],
            [
                "jointsToEraseStiffness",
                "Joints::Joint*"
            ],
            [
                "startTiltLeft",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "startTiltRight",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "sides",
                "EnumIndexedArray<DamageConfigurationBody::Side,Legs::Leg,Legs::Leg_Info>"
            ]
        ],
        "Image<Sobel::SobelPixel>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<float,Legs::Leg,Legs::Leg_Info>": [
            [
                "left",
                "float"
            ],
            [
                "right",
                "float"
            ]
        ],
        "FsrData": [
            [
                "pressures",
                "EnumIndexedArray<EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>,Legs::Leg,Legs::Leg_Info>"
            ],
            [
                "legInfo",
                "EnumIndexedArray<SolePressureInfo,Legs::Leg,Legs::Leg_Info>"
            ],
            [
                "minPressure",
                "float"
            ],
            [
                "isCalibrated",
                "bool"
            ],
            [
                "lastUpdateTimestamp",
                "unsigned int"
            ]
        ],
        "ArmMotionInfo": [
            [
                "armMotion",
                "EnumIndexedArray<ArmMotionRequest::ArmRequest,Arms::Arm,Arms::Arm_Info>"
            ],
            [
                "armKeyFrameRequest",
                "ArmKeyFrameRequest"
            ],
            [
                "pointToPointAt",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "isFree",
                "EnumIndexedArray<bool,Arms::Arm,Arms::Arm_Info>"
            ],
            [
                "isFinished",
                "EnumIndexedArray<bool,Arms::Arm,Arms::Arm_Info>"
            ]
        ],
        "GetUpGenerator": [],
        "TeammatesBallModelProviderModule::Params": [
            [
                "inactivityInvalidationTimeSpan",
                "int"
            ],
            [
                "ballLastSeenTimeout",
                "int"
            ],
            [
                "ballDisappearedTimeout",
                "int"
            ],
            [
                "timestampTolerance",
                "int"
            ]
        ],
        "RobotPose": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "quality",
                "RobotPose::LocalizationQuality"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ],
            [
                "timestampLastJump",
                "unsigned int"
            ]
        ],
        "JointPlay::JointState": [
            [
                "status",
                "JointPlay::JointStatus"
            ],
            [
                "requestBoundary",
                "Range<Angle>"
            ],
            [
                "velocity",
                "Angle"
            ],
            [
                "lastExecutedRequest",
                "Angle"
            ]
        ],
        "RobotCameraMatrix": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ]
        ],
        "JointCompensation": [
            [
                "jointCompensationParams",
                "JointCompensationParams*"
            ],
            [
                "reduceFactorJointCompensation",
                "float"
            ]
        ],
        "GameControllerDataProviderModule::Params": [
            [
                "gameControllerTimeout",
                "int"
            ],
            [
                "aliveDelay",
                "int"
            ],
            [
                "refereeSendDuration",
                "int"
            ],
            [
                "refereeSendInterval",
                "int"
            ]
        ],
        "WalkStepData": [
            [
                "stepTarget",
                "Pose2f"
            ],
            [
                "stepDuration",
                "float"
            ],
            [
                "usedPredictedSwitch",
                "int"
            ],
            [
                "lastUpdate",
                "int"
            ]
        ],
        "Agent": [
            [
                "number",
                "int"
            ],
            [
                "isGoalkeeper",
                "bool"
            ],
            [
                "lastKnownTimestamp",
                "unsigned int"
            ],
            [
                "lastKnownPose",
                "Pose2f"
            ],
            [
                "lastKnownTarget",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "lastKnownSpeed",
                "float"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "pose",
                "Pose2f"
            ],
            [
                "currentPosition",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "ballPosition",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "ballVelocity",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "timeWhenBallLastSeen",
                "unsigned int"
            ],
            [
                "timeWhenBallDisappeared",
                "unsigned int"
            ],
            [
                "disagreeOnBall",
                "bool"
            ],
            [
                "isUpright",
                "bool"
            ],
            [
                "timeWhenLastUpright",
                "unsigned int"
            ],
            [
                "proposedTactic",
                "Tactic::Type"
            ],
            [
                "acceptedTactic",
                "Tactic::Type"
            ],
            [
                "proposedMirror",
                "bool"
            ],
            [
                "acceptedMirror",
                "bool"
            ],
            [
                "proposedSetPlay",
                "SetPlay::Type"
            ],
            [
                "acceptedSetPlay",
                "SetPlay::Type"
            ],
            [
                "setPlayStep",
                "int"
            ],
            [
                "position",
                "Tactic::Position::Type"
            ],
            [
                "basePose",
                "Pose2f"
            ],
            [
                "baseArea",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "role",
                "Role::Type"
            ],
            [
                "nextRole",
                "Role::Type"
            ]
        ],
        "EnumIndexedArray<int,RefereePercept::Gesture,RefereePercept::Gesture_Info>": [
            [
                "none",
                "int"
            ],
            [
                "kickInBlue",
                "int"
            ],
            [
                "kickInRed",
                "int"
            ],
            [
                "goalKickBlue",
                "int"
            ],
            [
                "goalKickRed",
                "int"
            ],
            [
                "cornerKickBlue",
                "int"
            ],
            [
                "cornerKickRed",
                "int"
            ],
            [
                "goalBlue",
                "int"
            ],
            [
                "goalRed",
                "int"
            ],
            [
                "pushingFreeKickBlue",
                "int"
            ],
            [
                "pushingFreeKickRed",
                "int"
            ],
            [
                "fullTime",
                "int"
            ],
            [
                "substitutionBlue",
                "int"
            ],
            [
                "substitutionRed",
                "int"
            ]
        ],
        "FieldBallProviderModule::Params": [
            [
                "opponentGoalpostYOffset",
                "float"
            ],
            [
                "ownGoalpostYOffset",
                "float"
            ],
            [
                "ballInterceptionWidthHysteresis",
                "float"
            ],
            [
                "consistencyDistanceToDropInPosition",
                "float"
            ],
            [
                "useRiskyBallEstimate",
                "bool"
            ],
            [
                "interpolateRiskyBallEstimateRange",
                "Range<float>"
            ],
            [
                "useXAxisIntersection",
                "bool"
            ]
        ],
        "InterceptBallGenerator": [],
        "JointPlayData": [
            [
                "play",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "FallGenerator": [],
        "MotionGenerator": [],
        "ArmParameters": [
            [
                "armShoulderRoll",
                "Angle"
            ],
            [
                "armShoulderRollIncreaseFactor",
                "float"
            ],
            [
                "armShoulderPitchFactor",
                "float"
            ],
            [
                "comTiltFactor",
                "float"
            ],
            [
                "armInterpolationTime",
                "float"
            ]
        ],
        "ObstaclesFieldPercept::Obstacle": [
            [
                "center",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "left",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "right",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "fallen",
                "bool"
            ],
            [
                "type",
                "ObstaclesFieldPercept::Type"
            ],
            [
                "probability",
                "float"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ]
        ],
        "Strategy::TacticState::Transition": [
            [
                "to",
                "Tactic::Type"
            ],
            [
                "conditions",
                "Strategy::TacticState::Transition::Condition*"
            ]
        ],
        "Eigen::Matrix<float,6,6,0,6,6>": [
            [
                "cols",
                "EigenMatrixRow<float,6>[6]"
            ]
        ],
        "BallSearchAreas::Cell": [
            [
                "id",
                "unsigned int"
            ],
            [
                "priority",
                "unsigned int"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "UpperObstaclesFieldPercept": [
            [
                "obstacles",
                "ObstaclesFieldPercept::Obstacle*"
            ]
        ],
        "Strategy::WeightedSetPlay<OwnFreeKick>": [
            [
                "type",
                "OwnFreeKick::Type"
            ],
            [
                "weight",
                "float"
            ]
        ],
        "HeadMotionEngineModule::Params": [
            [
                "defaultTilt",
                "Angle"
            ],
            [
                "maxAcceleration",
                "float"
            ],
            [
                "maxAccelerationNoGroundContact",
                "float"
            ],
            [
                "stopAndGoModeFrequency",
                "int"
            ],
            [
                "lowerCamThreshold",
                "Range<Angle>"
            ]
        ],
        "Strategy": [
            [
                "tactics",
                "Strategy::TacticState*"
            ],
            [
                "ownKickOffs",
                "Strategy::WeightedSetPlay<OwnKickOff>*"
            ],
            [
                "opponentKickOffs",
                "Strategy::WeightedSetPlay<OpponentKickOff>*"
            ],
            [
                "ownPenaltyKicks",
                "Strategy::WeightedSetPlay<OwnPenaltyKick>*"
            ],
            [
                "opponentPenaltyKicks",
                "Strategy::WeightedSetPlay<OpponentPenaltyKick>*"
            ],
            [
                "ownFreeKicks",
                "Strategy::WeightedSetPlay<OwnFreeKick>*"
            ],
            [
                "opponentFreeKicks",
                "Strategy::WeightedSetPlay<OpponentFreeKick>*"
            ]
        ],
        "ScanGrid": [
            [
                "y",
                "int*"
            ],
            [
                "lines",
                "ScanGrid::Line*"
            ],
            [
                "fieldLimit",
                "int"
            ],
            [
                "lowResStart",
                "unsigned int"
            ],
            [
                "lowResStep",
                "unsigned int"
            ]
        ],
        "RegisteredLine": [
            [
                "perceptStart",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "perceptEnd",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "perceptDirection",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "perceptCenter",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "orthogonalProjection",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covPerceptCenter",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "modelStart",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "modelEnd",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "measuredAngle",
                "float"
            ],
            [
                "measuredAngleAlternative",
                "float"
            ],
            [
                "parallelToWorldModelXAxis",
                "bool"
            ],
            [
                "partOfCenterCircle",
                "bool"
            ]
        ],
        "KinematicParameters": [
            [
                "baseWalkPeriod",
                "float"
            ],
            [
                "sidewaysWalkHeightPeriodIncreaseFactor",
                "float"
            ],
            [
                "sidewaysHipShiftFactor",
                "float"
            ],
            [
                "walkHipHeight",
                "float"
            ],
            [
                "baseFootLift",
                "float"
            ],
            [
                "torsoOffset",
                "float"
            ]
        ],
        "GoaliePoseProviderModule::Params": [
            [
                "goalieLine",
                "float"
            ],
            [
                "distanceToGroundLineForMinimumXValue",
                "float"
            ],
            [
                "jumpAngleThresholdMin",
                "Angle"
            ],
            [
                "jumpAngleThresholdMax",
                "Angle"
            ],
            [
                "positionAngle",
                "Angle"
            ],
            [
                "jumpDistanceThreshold",
                "float"
            ],
            [
                "timeOutBallLastSeen",
                "int"
            ],
            [
                "timeOutBallDisappear",
                "int"
            ]
        ],
        "Settings": [
            [
                "teamNumber",
                "int"
            ],
            [
                "fieldPlayerColor",
                "Settings::TeamColor"
            ],
            [
                "goalkeeperColor",
                "Settings::TeamColor"
            ],
            [
                "playerNumber",
                "int"
            ],
            [
                "location",
                "std::string"
            ],
            [
                "scenario",
                "std::string"
            ],
            [
                "magicNumber",
                "unsigned char"
            ]
        ],
        "DamageConfigurationBody::Side": [
            [
                "weakLeg",
                "bool"
            ],
            [
                "footBumperDefect",
                "bool"
            ],
            [
                "armContactDefect",
                "bool"
            ]
        ],
        "BallState": [
            [
                "position",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "velocity",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radius",
                "float"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ]
        ],
        "SimpleFieldDimensions": [
            [
                "xPosOpponentFieldBorder",
                "float"
            ],
            [
                "xPosOpponentGoal",
                "float"
            ],
            [
                "xPosOpponentGoalPost",
                "float"
            ],
            [
                "xPosOpponentGroundLine",
                "float"
            ],
            [
                "xPosOpponentPenaltyArea",
                "float"
            ],
            [
                "xPosOpponentPenaltyMark",
                "float"
            ],
            [
                "xPosPenaltyStrikerStartPosition",
                "float"
            ],
            [
                "xPosHalfWayLine",
                "float"
            ],
            [
                "xPosOwnPenaltyArea",
                "float"
            ],
            [
                "xPosOwnPenaltyMark",
                "float"
            ],
            [
                "xPosOwnGroundLine",
                "float"
            ],
            [
                "xPosOwnGoalPost",
                "float"
            ],
            [
                "xPosOwnGoal",
                "float"
            ],
            [
                "xPosOwnFieldBorder",
                "float"
            ],
            [
                "xPosOpponentGoalArea",
                "float"
            ],
            [
                "xPosOwnGoalArea",
                "float"
            ],
            [
                "yPosLeftFieldBorder",
                "float"
            ],
            [
                "yPosLeftSideline",
                "float"
            ],
            [
                "yPosLeftPenaltyArea",
                "float"
            ],
            [
                "yPosLeftGoal",
                "float"
            ],
            [
                "yPosRightGoal",
                "float"
            ],
            [
                "yPosRightPenaltyArea",
                "float"
            ],
            [
                "yPosRightSideline",
                "float"
            ],
            [
                "yPosRightFieldBorder",
                "float"
            ],
            [
                "yPosLeftGoalArea",
                "float"
            ],
            [
                "yPosRightGoalArea",
                "float"
            ],
            [
                "fieldLinesWidth",
                "float"
            ],
            [
                "centerCircleRadius",
                "float"
            ],
            [
                "goalPostRadius",
                "float"
            ],
            [
                "crossBarRadius",
                "float"
            ],
            [
                "goalHeight",
                "float"
            ],
            [
                "penaltyMarkSize",
                "float"
            ]
        ],
        "ReceivedTeamMessage": [
            [
                "number",
                "int"
            ],
            [
                "theRobotStatus",
                "RobotStatus"
            ],
            [
                "theRobotPose",
                "RobotPose"
            ],
            [
                "theBallModel",
                "BallModel"
            ],
            [
                "theFrameInfo",
                "FrameInfo"
            ],
            [
                "theBehaviorStatus",
                "BehaviorStatus"
            ],
            [
                "theWhistle",
                "Whistle"
            ],
            [
                "theStrategyStatus",
                "StrategyStatus"
            ]
        ],
        "WalkPhaseData": [
            [
                "description",
                "std::string"
            ],
            [
                "isLeftPhaseStart",
                "bool"
            ],
            [
                "walkRequests",
                "ReplayRequest*"
            ]
        ],
        "StrategyStatus": [
            [
                "proposedTactic",
                "Tactic::Type"
            ],
            [
                "acceptedTactic",
                "Tactic::Type"
            ],
            [
                "proposedMirror",
                "bool"
            ],
            [
                "acceptedMirror",
                "bool"
            ],
            [
                "proposedSetPlay",
                "SetPlay::Type"
            ],
            [
                "acceptedSetPlay",
                "SetPlay::Type"
            ],
            [
                "setPlayStep",
                "int"
            ],
            [
                "position",
                "Tactic::Position::Type"
            ],
            [
                "role",
                "Role::Type"
            ]
        ],
        "MarkImplSkill::Params": [
            [
                "distToMarkedRobot",
                "float"
            ]
        ],
        "MotionRequest": [
            [
                "motion",
                "MotionRequest::Motion"
            ],
            [
                "standHigh",
                "bool"
            ],
            [
                "walkSpeed",
                "Pose2f"
            ],
            [
                "walkTarget",
                "Pose2f"
            ],
            [
                "keepTargetRotation",
                "bool"
            ],
            [
                "obstacleAvoidance",
                "MotionRequest::ObstacleAvoidance"
            ],
            [
                "targetOfInterest",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "forceSideWalking",
                "bool"
            ],
            [
                "shouldInterceptBall",
                "bool"
            ],
            [
                "targetDirection",
                "Angle"
            ],
            [
                "directionPrecision",
                "Range<Angle>"
            ],
            [
                "kickType",
                "KickInfo::KickType"
            ],
            [
                "kickLength",
                "float"
            ],
            [
                "alignPrecisely",
                "KickPrecision"
            ],
            [
                "preStepAllowed",
                "bool"
            ],
            [
                "turnKickAllowed",
                "bool"
            ],
            [
                "shiftTurnKickPose",
                "bool"
            ],
            [
                "diveRequest",
                "MotionRequest::Dive::Request"
            ],
            [
                "specialRequest",
                "MotionRequest::Special::Request"
            ],
            [
                "odometryData",
                "Pose2f"
            ],
            [
                "ballEstimate",
                "BallState"
            ],
            [
                "ballEstimateTimestamp",
                "unsigned int"
            ],
            [
                "ballTimeWhenLastSeen",
                "unsigned int"
            ]
        ],
        "LowerRobotCameraMatrix": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ]
        ],
        "WalkGenerator": [],
        "Tactic::Position": [
            [
                "type",
                "Tactic::Position::Type"
            ],
            [
                "pose",
                "Pose2f"
            ],
            [
                "stabilityOffset",
                "float"
            ]
        ],
        "PenaltyMarkWithPenaltyAreaLine": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covOfAbsoluteRobotPose",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ],
            [
                "isValid",
                "bool"
            ]
        ],
        "DirectKickOffImplSkill::Params": [
            [
                "hysteresisNumber",
                "float"
            ],
            [
                "hysteresisAngle",
                "Angle"
            ],
            [
                "halfGoalSectorAngle",
                "Angle"
            ],
            [
                "minOpeningAngle",
                "Angle"
            ]
        ],
        "ModuleGraphCreator::ExecutionValues::ModuleRequired": [
            [
                "module",
                "std::string"
            ],
            [
                "required",
                "bool"
            ]
        ],
        "DebugImage": [
            [
                "type",
                "PixelTypes::PixelType"
            ],
            [
                "width",
                "unsigned short"
            ],
            [
                "height",
                "unsigned short"
            ]
        ],
        "CenterCircleWithLine": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covOfAbsoluteRobotPose",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ],
            [
                "isValid",
                "bool"
            ]
        ],
        "SpecialGenerator": [],
        "StandGenerator": [],
        "DribbleEngineModule::Params": [
            [
                "redecideSignThreshold",
                "Angle"
            ],
            [
                "minBallPositionFuture",
                "float"
            ],
            [
                "minBallPositionFrontSide",
                "float"
            ],
            [
                "minBallVelocityCloseRange",
                "float"
            ],
            [
                "ballVelocityInterpolationRange",
                "Range<float>"
            ]
        ],
        "KeyframeMotionList": [
            [
                "keyframes",
                "KeyframeMotionBlockID::KeyframeMotionBlockID*"
            ],
            [
                "balanceOut",
                "bool"
            ],
            [
                "keyframeEndRequest",
                "KeyframeEndRequest"
            ],
            [
                "isMotionStable",
                "bool"
            ],
            [
                "startAsNextPhaseMotion",
                "FollowUpMotionPair*"
            ]
        ],
        "ExpectedGoalsProviderModule::Params": [
            [
                "minValue",
                "float"
            ],
            [
                "minOpeningAngle",
                "Angle"
            ],
            [
                "maxOpeningAngle",
                "Angle"
            ],
            [
                "cellSize",
                "float"
            ],
            [
                "heatmapAlpha",
                "unsigned char"
            ],
            [
                "worstRatingColor",
                "ColorRGBA"
            ],
            [
                "bestRatingColor",
                "ColorRGBA"
            ]
        ],
        "JointFailureParams": [
            [
                "motionIDFailure",
                "KeyframeMotionRequest::KeyframeMotionID"
            ],
            [
                "lineCounterFailureStart",
                "int"
            ],
            [
                "lineCounterFailureEnd",
                "int"
            ],
            [
                "ratioStart",
                "float"
            ],
            [
                "ratioEnd",
                "float"
            ],
            [
                "joint",
                "Joints::Joint"
            ],
            [
                "reduceRatio",
                "float"
            ]
        ],
        "WalkToBallGenerator": [],
        "WalkStepAdjustmentParams": [
            [
                "maxVelX",
                "float"
            ],
            [
                "minVelX",
                "float"
            ],
            [
                "removeSpeedX",
                "float"
            ],
            [
                "comLowPassRatio",
                "float"
            ],
            [
                "unstableBackWalkThreshold",
                "float"
            ],
            [
                "desiredFootArea",
                "Range<float>"
            ],
            [
                "hipBalanceBackwardFootArea",
                "float"
            ],
            [
                "unstableWalkThreshold",
                "float"
            ],
            [
                "reduceWalkingSpeedTimeWindow",
                "float"
            ]
        ],
        "GroundTruthRobotPose": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "quality",
                "RobotPose::LocalizationQuality"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ],
            [
                "timestampLastJump",
                "unsigned int"
            ],
            [
                "timestamp",
                "unsigned int"
            ]
        ],
        "ConfiguratedParameters": [
            [
                "maxSpeed",
                "Pose2f"
            ],
            [
                "minSpeed",
                "Pose2f"
            ],
            [
                "maxSpeedBackwards",
                "float"
            ],
            [
                "minSpeedBackwards",
                "float"
            ],
            [
                "emergencyNotMovingTime",
                "int"
            ],
            [
                "maxGyroBalanceKneeValue",
                "Angle"
            ],
            [
                "supportSwitchPhaseRange",
                "Range<float>"
            ],
            [
                "thresholdStopStandTransition",
                "Pose2f"
            ],
            [
                "walkSpeedParams",
                "WalkSpeedParams"
            ],
            [
                "jointPlayOffsetParameters",
                "JointPlayOffsetParameters"
            ]
        ],
        "KickEngineParameters::ArmBalancing": [
            [
                "startAndEndKeyframe",
                "Range<int>"
            ],
            [
                "startAndEndRatio",
                "Range<float>"
            ],
            [
                "maxAdjustment",
                "Angle"
            ],
            [
                "upperRange",
                "Range<float>"
            ],
            [
                "lowerRange",
                "Range<float>"
            ],
            [
                "i",
                "float"
            ]
        ],
        "EnergySaving": [
            [
                "offsets",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "state",
                "EnergySaving::EnergyState"
            ]
        ],
        "LowerPenaltyMarkPercept": [
            [
                "positionInImage",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ],
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covarianceOnField",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "wasSeen",
                "bool"
            ]
        ],
        "FieldDimensions::read(In&)::Dimensions::Goal": [
            [
                "postDiameter",
                "float"
            ],
            [
                "height",
                "float"
            ],
            [
                "innerWidth",
                "float"
            ],
            [
                "depth",
                "float"
            ]
        ],
        "EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "int"
            ],
            [
                "headPitch",
                "int"
            ],
            [
                "lShoulderPitch",
                "int"
            ],
            [
                "lShoulderRoll",
                "int"
            ],
            [
                "lElbowYaw",
                "int"
            ],
            [
                "lElbowRoll",
                "int"
            ],
            [
                "lWristYaw",
                "int"
            ],
            [
                "lHand",
                "int"
            ],
            [
                "rShoulderPitch",
                "int"
            ],
            [
                "rShoulderRoll",
                "int"
            ],
            [
                "rElbowYaw",
                "int"
            ],
            [
                "rElbowRoll",
                "int"
            ],
            [
                "rWristYaw",
                "int"
            ],
            [
                "rHand",
                "int"
            ],
            [
                "lHipYawPitch",
                "int"
            ],
            [
                "lHipRoll",
                "int"
            ],
            [
                "lHipPitch",
                "int"
            ],
            [
                "lKneePitch",
                "int"
            ],
            [
                "lAnklePitch",
                "int"
            ],
            [
                "lAnkleRoll",
                "int"
            ],
            [
                "rHipYawPitch",
                "int"
            ],
            [
                "rHipRoll",
                "int"
            ],
            [
                "rHipPitch",
                "int"
            ],
            [
                "rKneePitch",
                "int"
            ],
            [
                "rAnklePitch",
                "int"
            ],
            [
                "rAnkleRoll",
                "int"
            ]
        ],
        "PointAtEngineModule::Params": [
            [
                "maxSquaredDisToIgnorePoints",
                "float"
            ],
            [
                "stiffness",
                "int"
            ],
            [
                "smoothnessValue",
                "float"
            ]
        ],
        "JointPlay": [
            [
                "qualityOfRobotHardware",
                "float"
            ],
            [
                "isCalibrated",
                "bool"
            ],
            [
                "jointState",
                "EnumIndexedArray<JointPlay::JointState,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "Logger::RepresentationsPerThread": [
            [
                "thread",
                "std::string"
            ],
            [
                "representations",
                "std::string*"
            ]
        ],
        "EnumIndexedArray<Keypoints::Point,Keypoints::Keypoint,Keypoints::Keypoint_Info>": [
            [
                "nose",
                "Keypoints::Point"
            ],
            [
                "leftEye",
                "Keypoints::Point"
            ],
            [
                "rightEye",
                "Keypoints::Point"
            ],
            [
                "leftEar",
                "Keypoints::Point"
            ],
            [
                "rightEar",
                "Keypoints::Point"
            ],
            [
                "leftShoulder",
                "Keypoints::Point"
            ],
            [
                "rightShoulder",
                "Keypoints::Point"
            ],
            [
                "leftElbow",
                "Keypoints::Point"
            ],
            [
                "rightElbow",
                "Keypoints::Point"
            ],
            [
                "leftWrist",
                "Keypoints::Point"
            ],
            [
                "rightWrist",
                "Keypoints::Point"
            ],
            [
                "leftHip",
                "Keypoints::Point"
            ],
            [
                "rightHip",
                "Keypoints::Point"
            ],
            [
                "leftKnee",
                "Keypoints::Point"
            ],
            [
                "rightKnee",
                "Keypoints::Point"
            ],
            [
                "leftAnkle",
                "Keypoints::Point"
            ],
            [
                "rightAnkle",
                "Keypoints::Point"
            ]
        ],
        "KickEngineModule::Params": [
            [
                "maxInterpolationTime",
                "float"
            ],
            [
                "interpolationSpeed",
                "Angle"
            ],
            [
                "minFootGroundContactTime",
                "float"
            ]
        ],
        "IntersectionsProviderModule::Params": [
            [
                "maxAllowedIntersectionAngleDifference",
                "float"
            ],
            [
                "maxLengthUnrecognizedProportionRelaxed",
                "float"
            ],
            [
                "maxOverheadToDecleareAsEndRelaxed",
                "float"
            ],
            [
                "minimumBallExclusionCheckDistance",
                "float"
            ],
            [
                "ballRadiusInImageScale",
                "float"
            ],
            [
                "maxLengthUnrecognizedProportionStrict",
                "float"
            ],
            [
                "maxIntersectionGapStrict",
                "float"
            ],
            [
                "maxOverheadToDecleareAsEndStrict",
                "float"
            ],
            [
                "threshold",
                "float"
            ],
            [
                "patchSize",
                "int"
            ],
            [
                "minClassificationDistance",
                "int"
            ]
        ],
        "GlobalTeammatesModel::TeammateEstimate": [
            [
                "pose",
                "Pose2f"
            ],
            [
                "playerNumber",
                "int"
            ],
            [
                "relativeWalkTarget",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "speed",
                "float"
            ]
        ],
        "ScanLineRegion": [
            [
                "range.from",
                "unsigned short"
            ],
            [
                "range.to",
                "unsigned short"
            ],
            [
                "color",
                "ScanLineRegion::Color"
            ]
        ],
        "DribbleGenerator": [],
        "StepSizeParameters": [
            [
                "insideTurnRatio",
                "float"
            ],
            [
                "reduceTranslationFromRotation",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ],
            [
                "noTranslationFromRotation",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ],
            [
                "noTranslationYFromRotationFastInner",
                "Angle"
            ],
            [
                "noTranslationYFromRotationFastOuter",
                "Angle"
            ],
            [
                "reduceTranslationYFromRotationFast",
                "Angle"
            ],
            [
                "minXTranslationStep",
                "float"
            ],
            [
                "minXForwardTranslationFast",
                "float"
            ],
            [
                "minXBackwardTranslationFastRange",
                "Range<float>"
            ],
            [
                "translationPolygonSafeRange",
                "Range<float>"
            ],
            [
                "noFastTranslationPolygonStepsNumber",
                "int"
            ]
        ],
        "DiveGenerator": [],
        "KeyframeBlockBranch": [
            [
                "blockID",
                "KeyframeMotionBlockID::KeyframeMotionBlockID"
            ],
            [
                "motionID",
                "KeyframeMotionListID::KeyframeMotionListID*"
            ],
            [
                "initStiffness",
                "bool"
            ],
            [
                "removeCurrentBlock",
                "bool"
            ],
            [
                "preCondition",
                "ConditionPair"
            ],
            [
                "useEarlyEntrance",
                "bool"
            ],
            [
                "earlyEntranceCondition",
                "ConditionPair"
            ],
            [
                "maxNumberOfLoopsBlockID",
                "int"
            ],
            [
                "maxNumberOfLoopsMotionID",
                "int"
            ]
        ],
        "WalkToBallAndKickEngineModule::Params": [
            [
                "forwardFastYThreshold",
                "Range<float>"
            ],
            [
                "forwardFastXThreshold",
                "Range<float>"
            ],
            [
                "forwardFastLongXMaxThreshold",
                "float"
            ],
            [
                "maxBallVelocity",
                "float"
            ],
            [
                "forwardStealStepPlanningThreshold",
                "Pose2f"
            ],
            [
                "kickPoseMaxYTranslation",
                "float"
            ],
            [
                "forwardFastYClipRange",
                "Range<float>"
            ],
            [
                "robotStuckThresholds",
                "Pose2f"
            ],
            [
                "minBallPositionFuture",
                "float"
            ],
            [
                "minBallPositionFrontSide",
                "float"
            ],
            [
                "minBallVelocityCloseRange",
                "float"
            ],
            [
                "ballVelocityInterpolationRange",
                "Range<float>"
            ]
        ],
        "BallSpecification": [
            [
                "radius",
                "float"
            ],
            [
                "friction",
                "float"
            ],
            [
                "kickDistanceUpperBound",
                "float"
            ]
        ],
        "EnumIndexedArray<EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>,Legs::Leg,Legs::Leg_Info>": [
            [
                "left",
                "EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>"
            ],
            [
                "right",
                "EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>"
            ]
        ],
        "InterceptBallProviderDBHCModule::Params": [
            [
                "maxYShift",
                "Range<float>"
            ],
            [
                "maxXStep",
                "Range<float>"
            ],
            [
                "maxRotationStep",
                "Angle"
            ],
            [
                "maxBallRollAngle",
                "Angle"
            ],
            [
                "minTimeForBallAlwaysRotate",
                "float"
            ],
            [
                "minBallDistanceAlwaysRotate",
                "float"
            ],
            [
                "bestHitPoint",
                "float"
            ]
        ],
        "GlobalOpponentsTrackerModule::Params": [
            [
                "maxDistance",
                "unsigned int"
            ],
            [
                "minPercepts",
                "unsigned int"
            ],
            [
                "debug",
                "bool"
            ],
            [
                "notSeenThreshold",
                "unsigned int"
            ],
            [
                "deleteAfter",
                "int"
            ],
            [
                "pNp",
                "float"
            ],
            [
                "odoDeviation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "useArmContactModel",
                "bool"
            ],
            [
                "armCov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "maxContactTime",
                "int"
            ],
            [
                "useFootBumperState",
                "bool"
            ],
            [
                "feetCov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "distJointToToe",
                "unsigned int"
            ],
            [
                "distToeToBumper",
                "unsigned int"
            ],
            [
                "weightedSum",
                "float"
            ],
            [
                "maxMergeRadius",
                "unsigned int"
            ],
            [
                "mergeOverlapTimeDiff",
                "unsigned int"
            ],
            [
                "minMahalanobisDistance",
                "float"
            ],
            [
                "cameraAngleFactor",
                "float"
            ],
            [
                "recentlySeenTime",
                "int"
            ],
            [
                "mergeDistance",
                "float"
            ],
            [
                "minMergeDistance",
                "unsigned int"
            ],
            [
                "teamThreshold",
                "int"
            ],
            [
                "uprightThreshold",
                "int"
            ],
            [
                "goalAreaIgnoreTolerance",
                "float"
            ]
        ],
        "RegisteredAbsolutePoseMeasurement": [
            [
                "perceivedRelativePose",
                "Pose2f"
            ],
            [
                "absolutePoseOnField",
                "Pose2f"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ]
        ],
        "SideStabilizeParameters": [
            [
                "turnIncreaseRange",
                "Range<Angle>"
            ],
            [
                "increaseThreshold",
                "float"
            ],
            [
                "minOuterSide",
                "float"
            ],
            [
                "minOuterSideStop",
                "float"
            ],
            [
                "sideHipShiftStepSizeRange",
                "Range<float>"
            ],
            [
                "maxSideHipShift",
                "float"
            ],
            [
                "maxSideHipShiftStepSize",
                "float"
            ],
            [
                "comInOuterInterpolationRange",
                "Range<float>"
            ],
            [
                "heightRange",
                "Range<float>"
            ]
        ],
        "RobotHealthProviderModule::Params": [
            [
                "batteryLow",
                "char"
            ],
            [
                "cpuHeat",
                "int"
            ],
            [
                "timeBetweenHeatScreams",
                "unsigned int"
            ],
            [
                "enableName",
                "bool"
            ]
        ],
        "GlobalOpponentsModel": [
            [
                "opponents",
                "GlobalOpponentsModel::OpponentEstimate*"
            ],
            [
                "numOfPenalizedOpponents",
                "int"
            ],
            [
                "numOfUnknownOpponents",
                "int"
            ]
        ],
        "ImageCoordinateSystem": [
            [
                "rotation",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "origin",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "offset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "robotOffset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "a",
                "float"
            ],
            [
                "b",
                "float"
            ]
        ],
        "EnumIndexedArray<JointSensorData::TemperatureStatus,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "headPitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lShoulderPitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lShoulderRoll",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lElbowYaw",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lElbowRoll",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lWristYaw",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lHand",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rShoulderPitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rShoulderRoll",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rElbowYaw",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rElbowRoll",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rWristYaw",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rHand",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lHipYawPitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lHipRoll",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lHipPitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lKneePitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lAnklePitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "lAnkleRoll",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rHipYawPitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rHipRoll",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rHipPitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rKneePitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rAnklePitch",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "rAnkleRoll",
                "JointSensorData::TemperatureStatus"
            ]
        ],
        "WhistleRecognizerModule::Params": [
            [
                "whistles",
                "std::string*"
            ],
            [
                "bufferSize",
                "unsigned int"
            ],
            [
                "sampleRate",
                "unsigned int"
            ],
            [
                "newSampleRatio",
                "float"
            ],
            [
                "minVolume",
                "float"
            ],
            [
                "minCorrelation",
                "float"
            ],
            [
                "accumulationDuration",
                "int"
            ],
            [
                "minAnnotationDelay",
                "int"
            ],
            [
                "mute",
                "bool"
            ]
        ],
        "EnumIndexedArray<CameraResolutionRequest::Resolutions,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "CameraResolutionRequest::Resolutions"
            ],
            [
                "lower",
                "CameraResolutionRequest::Resolutions"
            ]
        ],
        "FallDownStateProviderModule::Params": [
            [
                "maxGyroToRegainStableState",
                "Angle"
            ],
            [
                "maxVelForPrediction",
                "Angle"
            ],
            [
                "useInertiaData",
                "bool"
            ],
            [
                "playSounds",
                "bool"
            ],
            [
                "velocityDiscountFactor",
                "float"
            ],
            [
                "forwardingTime",
                "float"
            ],
            [
                "minNormalizedFallVectorScalar",
                "float"
            ],
            [
                "minFallVectorScalar",
                "float"
            ],
            [
                "minPredictNormalizedFallVectorScalar",
                "float"
            ],
            [
                "minPredictFallVectorScalar",
                "float"
            ],
            [
                "minComDistanceToFootCenter",
                "float"
            ],
            [
                "minComDistanceToDetetctFall",
                "float"
            ],
            [
                "maxTorsoHeightToKeepSquatting",
                "float"
            ],
            [
                "minTorsoHeightToKeepUpright",
                "float"
            ],
            [
                "sigmaArea",
                "float"
            ],
            [
                "minTimeBetweenSound",
                "int"
            ],
            [
                "minTimeWithoutGroundContactToAssumePickup",
                "int"
            ],
            [
                "minTorsoOrientationToDetermineDirection",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ],
            [
                "maxTimeStaggering",
                "int"
            ],
            [
                "positionProcessDeviation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "velocityProcessDeviation",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ],
            [
                "positionMeasurementDeviation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "velocityMeasurementDeviation",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ]
        ],
        "OdometerProviderModule::Params": [
            [
                "sigmaAngle",
                "float"
            ],
            [
                "sigmaDistance",
                "float"
            ]
        ],
        "Midfielder::Parameters": [
            [
                "sigmaBase",
                "float"
            ],
            [
                "sigmaTeam",
                "float"
            ],
            [
                "sigmaBorder",
                "float"
            ],
            [
                "ballDistance",
                "float"
            ],
            [
                "sigmaBall",
                "float"
            ],
            [
                "startThreshold",
                "float"
            ],
            [
                "stopThreshold",
                "float"
            ],
            [
                "baseShiftX",
                "float"
            ],
            [
                "maxBaseShilftY",
                "float"
            ],
            [
                "smoothBaseShiftYDistence",
                "float"
            ],
            [
                "minBallRating",
                "float"
            ],
            [
                "minGoalRating",
                "float"
            ]
        ],
        "HeadLimits": [
            [
                "shoulderRadius",
                "float"
            ],
            [
                "intervals",
                "Angle*"
            ],
            [
                "lowerBounds",
                "Angle*"
            ],
            [
                "upperBounds",
                "Angle*"
            ]
        ],
        "Image<bool>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "KeyStateEnhancerModule::Params": [
            [
                "releaseTimeOut",
                "unsigned int"
            ],
            [
                "successiveTimeOut",
                "unsigned int"
            ]
        ],
        "BallContactChecker": [],
        "SampleConfigurationRequest": [
            [
                "doRecord",
                "bool"
            ],
            [
                "index",
                "unsigned int"
            ],
            [
                "camera",
                "CameraInfo::Camera"
            ],
            [
                "headPan",
                "Angle"
            ],
            [
                "headTilt",
                "Angle"
            ],
            [
                "sampleTypes",
                "unsigned int"
            ]
        ],
        "Image<unsigned short>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "HeadMotionGenerator": [],
        "BallSpots": [
            [
                "ballSpots",
                "Eigen::Matrix<int,2,1,0,2,1>*"
            ],
            [
                "firstSpotIsPredicted",
                "bool"
            ]
        ],
        "SelfLocalizationHypotheses": [
            [
                "hypotheses",
                "SelfLocalizationHypotheses::Hypothesis*"
            ]
        ],
        "UpperLinesPercept": [
            [
                "lines",
                "LinesPercept::Line*"
            ]
        ],
        "FieldFeature": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covOfAbsoluteRobotPose",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ],
            [
                "isValid",
                "bool"
            ]
        ],
        "EnumIndexedArray<Eigen::Matrix<unsigned char,4,4,1,4,4>,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "Eigen::Matrix<unsigned char,4,4,1,4,4>"
            ],
            [
                "lower",
                "Eigen::Matrix<unsigned char,4,4,1,4,4>"
            ]
        ],
        "RobotStatus": [
            [
                "isUpright",
                "bool"
            ],
            [
                "timeWhenLastUpright",
                "unsigned int"
            ]
        ],
        "LowerFieldLines": [
            [
                "lines",
                "FieldLines::Line*"
            ]
        ],
        "JointPair": [
            [
                "joint",
                "Joints::Joint"
            ],
            [
                "scaling",
                "float"
            ]
        ],
        "JointPlayProviderModule::Params": [
            [
                "lowpassFilterFactor",
                "Range<float>"
            ],
            [
                "interpolateLowpassFilterTime",
                "float"
            ],
            [
                "interpolateJointPlayValueWalkTime",
                "float"
            ],
            [
                "minWalkTime",
                "float"
            ],
            [
                "jointPlayList",
                "JointPlayPair*"
            ],
            [
                "jointPlayScalingWalkingSpeed",
                "Angle"
            ],
            [
                "maxForwardSpeed",
                "float"
            ],
            [
                "minForwardSpeed",
                "float"
            ],
            [
                "jointPlayScaling",
                "Range<Angle>"
            ],
            [
                "warningSoundWaitTime",
                "int"
            ],
            [
                "minPlayForSound",
                "Angle"
            ],
            [
                "minPlaySlowForSound",
                "Angle"
            ]
        ],
        "EnumIndexedArray<bool,KeyStates::Key,KeyStates::Key_Info>": [
            [
                "headFront",
                "bool"
            ],
            [
                "headMiddle",
                "bool"
            ],
            [
                "headRear",
                "bool"
            ],
            [
                "lHandBack",
                "bool"
            ],
            [
                "lHandLeft",
                "bool"
            ],
            [
                "lHandRight",
                "bool"
            ],
            [
                "rHandBack",
                "bool"
            ],
            [
                "rHandLeft",
                "bool"
            ],
            [
                "rHandRight",
                "bool"
            ],
            [
                "lFootLeft",
                "bool"
            ],
            [
                "lFootRight",
                "bool"
            ],
            [
                "rFootLeft",
                "bool"
            ],
            [
                "rFootRight",
                "bool"
            ],
            [
                "chest",
                "bool"
            ]
        ],
        "WalkToPointObstacleImplSkill::Params": [
            [
                "switchToRequestedPoseDistance",
                "float"
            ],
            [
                "minDistanceToLeaveForAvoidance",
                "float"
            ],
            [
                "minDistanceToTargetForAvoidance",
                "float"
            ],
            [
                "ignoreObstacleAvoidanceDistance",
                "float"
            ],
            [
                "positionOffsetIfOccupied",
                "float"
            ],
            [
                "deleteObstacleCircleRange",
                "Angle"
            ]
        ],
        "UpperFieldBoundary": [
            [
                "boundaryOnField",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "boundaryInImage",
                "Eigen::Matrix<int,2,1,0,2,1>*"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "extrapolated",
                "bool"
            ],
            [
                "odd",
                "bool"
            ]
        ],
        "BallDropInLocatorModule::Params": [
            [
                "safetyMargin",
                "float"
            ],
            [
                "useOutPositionTimeout",
                "int"
            ]
        ],
        "BallSpotsProviderModule::Params": [
            [
                "minRadiusOfWantedRegion",
                "float"
            ],
            [
                "greenEdge",
                "Angle"
            ],
            [
                "ballSpotDistUsage",
                "float"
            ],
            [
                "scanLengthRadiusFactor",
                "float"
            ],
            [
                "maxNumberOfSkippablePixel",
                "unsigned int"
            ],
            [
                "minAllowedDistanceRadiusRelation",
                "float"
            ],
            [
                "minFoundDiameterPercentage",
                "float"
            ],
            [
                "noiseThreshold",
                "float"
            ],
            [
                "additionalRadiusForGreenCheck",
                "int"
            ],
            [
                "greenPercent",
                "float"
            ],
            [
                "allowScanLineTopSpotFitting",
                "bool"
            ],
            [
                "lessStrictChecks",
                "bool"
            ]
        ],
        "KickKeyframePart": [
            [
                "relativePositionToBallMax",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "relativePositionToBallMin",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "offsetSwingFootMax",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "offsetSwingFootMin",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "minStepTarget",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "relativeBackwardStep",
                "float*"
            ],
            [
                "maxSideStep",
                "float"
            ],
            [
                "directionRatio",
                "float"
            ],
            [
                "reachPositionRatio",
                "float"
            ],
            [
                "speedUpSwingPositionScaling",
                "Range<float>"
            ],
            [
                "useDefaultReachPositionRatio",
                "bool"
            ],
            [
                "holdXTranslationWhenMovingBackward",
                "bool"
            ],
            [
                "holdYTranslationWhenFeetTogether",
                "bool"
            ],
            [
                "holdXSwingTarget",
                "bool"
            ],
            [
                "holdXSupportTarget",
                "bool"
            ],
            [
                "returnXToZero",
                "bool"
            ],
            [
                "returnYToZero",
                "bool"
            ],
            [
                "returnRotationToZero",
                "bool"
            ],
            [
                "hold",
                "bool"
            ],
            [
                "clipMaxSpeed",
                "bool"
            ]
        ],
        "FieldLineIntersections::Intersection": [
            [
                "type",
                "FieldLineIntersections::Intersection::IntersectionType"
            ],
            [
                "pos",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "cov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "dir1",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "dir2",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "WalkToPoseGenerator": [],
        "UpperOdometryData": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "SolePressureInfo": [
            [
                "forwardPressure",
                "unsigned int"
            ],
            [
                "backwardPressure",
                "unsigned int"
            ],
            [
                "leftPressure",
                "unsigned int"
            ],
            [
                "rightPressure",
                "unsigned int"
            ],
            [
                "hasPressure",
                "unsigned int"
            ],
            [
                "hasPressureSince",
                "unsigned int"
            ],
            [
                "sagittalRatio",
                "float"
            ],
            [
                "lateralRatio",
                "float"
            ],
            [
                "totals",
                "float"
            ]
        ],
        "CameraStatus": [
            [
                "ok",
                "bool"
            ]
        ],
        "EnumIndexedArray<Keyframe3DPoseWrapper,KeyframeLimb,KeyframeLimb_Info>": [
            [
                "leftArm",
                "Keyframe3DPoseWrapper"
            ],
            [
                "rightArm",
                "Keyframe3DPoseWrapper"
            ],
            [
                "leftLeg",
                "Keyframe3DPoseWrapper"
            ],
            [
                "rightLeg",
                "Keyframe3DPoseWrapper"
            ]
        ],
        "ObstaclesImagePercept": [
            [
                "obstacles",
                "ObstaclesImagePercept::Obstacle*"
            ]
        ],
        "Eigen::Matrix<float,3,3,0,3,3>": [
            [
                "cols",
                "EigenMatrixRow<float,3>[3]"
            ]
        ],
        "Geometry::Circle": [
            [
                "center",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radius",
                "float"
            ]
        ],
        "OdometryTranslationRequest": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "ObstacleModel": [
            [
                "obstacles",
                "Obstacle*"
            ]
        ],
        "Eigen::Matrix<float,2,1,0,2,1>": [
            [
                "x",
                "float"
            ],
            [
                "y",
                "float"
            ]
        ],
        "Strategy::WeightedSetPlay<OpponentPenaltyKick>": [
            [
                "type",
                "OpponentPenaltyKick::Type"
            ],
            [
                "weight",
                "float"
            ]
        ],
        "UpperFrameInfo": [
            [
                "time",
                "unsigned int"
            ]
        ],
        "Image<PixelTypes::Edge2Pixel>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "RefereeSignal": [
            [
                "signal",
                "RefereePercept::Gesture"
            ],
            [
                "timeWhenWhistleWasHeard",
                "unsigned int"
            ],
            [
                "timeWhenLastDetected",
                "unsigned int"
            ]
        ],
        "OpponentKickOff": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ]
        ],
        "BallContactCheckerProviderModule::Params": [
            [
                "footRadius",
                "float"
            ],
            [
                "footMass",
                "float"
            ],
            [
                "ballMass",
                "float"
            ],
            [
                "leftFootOffset",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "kickDeviation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "timeout",
                "int"
            ]
        ],
        "ArmContactModel::ArmContact": [
            [
                "contact",
                "bool"
            ],
            [
                "duration",
                "unsigned int"
            ],
            [
                "directionMap",
                "EnumIndexedArray<bool,ArmContactModel::PushDirection,ArmContactModel::PushDirection_Info>"
            ],
            [
                "pushDirection",
                "ArmContactModel::PushDirection"
            ],
            [
                "armOnBack",
                "bool"
            ],
            [
                "timeOfLastContact",
                "unsigned int"
            ]
        ],
        "JPEGImage": [
            [
                "width",
                "int"
            ],
            [
                "height",
                "int"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "size",
                "unsigned int"
            ]
        ],
        "PenaltyMarkPerceptorModule::Params": [
            [
                "threshold",
                "float"
            ]
        ],
        "WalkKickVariant": [
            [
                "kickType",
                "KickInfo::KickType"
            ],
            [
                "walkKickType",
                "WalkKicks::Type"
            ],
            [
                "kickLeg",
                "Legs::Leg"
            ],
            [
                "precision",
                "KickPrecision"
            ],
            [
                "length",
                "float"
            ],
            [
                "power",
                "float"
            ],
            [
                "direction",
                "Angle"
            ],
            [
                "kickInterpolation",
                "float"
            ],
            [
                "shiftTurnKickPose",
                "bool"
            ],
            [
                "diagonalKickState",
                "WalkKickVariant::DiagonalKickState"
            ],
            [
                "ballEstimationTime",
                "float"
            ],
            [
                "delayParams",
                "DelayKickParams"
            ]
        ],
        "FallEngineModule::Params": [
            [
                "waitAfterFalling",
                "int"
            ],
            [
                "fallDirectionChangeThreshold",
                "Angle"
            ],
            [
                "maxGyroToStartGetUp",
                "Angle"
            ],
            [
                "lateFallYAngleBack",
                "Angle"
            ],
            [
                "lateFallYAngleFront",
                "Angle"
            ],
            [
                "highStiffnessDuration",
                "int"
            ],
            [
                "highStiffnessDurationElbowRoll",
                "int"
            ],
            [
                "stiffnessArm",
                "Range<int>"
            ],
            [
                "stiffnessLeg",
                "Range<int>"
            ],
            [
                "stiffnessHead",
                "Range<int>"
            ],
            [
                "shoulderPitchSideFallCorrectionRange",
                "Angle"
            ],
            [
                "shoulderPitchSideFallCorrectionValue",
                "Angle"
            ]
        ],
        "ArmKeyFrameEngineModule::Params": [
            [
                "allMotions",
                "ArmKeyFrameMotion*"
            ]
        ],
        "GroundTruthWorldState": [
            [
                "ownTeamPlayers",
                "GroundTruthWorldState::GroundTruthPlayer*"
            ],
            [
                "opponentTeamPlayers",
                "GroundTruthWorldState::GroundTruthPlayer*"
            ],
            [
                "balls",
                "GroundTruthWorldState::GroundTruthBall*"
            ],
            [
                "ownPose",
                "Pose2f"
            ]
        ],
        "IntersectionsPercept::Intersection": [
            [
                "type",
                "IntersectionsPercept::Intersection::IntersectionType"
            ],
            [
                "pos",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "cov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "dir1",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "dir2",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "line1Index",
                "unsigned int"
            ],
            [
                "line2Index",
                "unsigned int"
            ]
        ],
        "BallRegions": [
            [
                "regions",
                "Boundary<int>*"
            ]
        ],
        "FilteredCurrent": [
            [
                "currents",
                "EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "legJointWithHighestCurrent",
                "Joints::Joint"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "legMotorMalfunction",
                "bool"
            ]
        ],
        "WalkPotentialFieldImplSkill::Params": [
            [
                "alignDistance",
                "float"
            ],
            [
                "maxBallAngleOffset",
                "Angle"
            ],
            [
                "maxRejection",
                "float"
            ],
            [
                "maxDistance",
                "float"
            ],
            [
                "freeKickClearAreaRadius",
                "float"
            ],
            [
                "gridOffset",
                "float"
            ],
            [
                "arrowWidth",
                "int"
            ]
        ],
        "MotionRobotHealth": [
            [
                "motionFrameRate",
                "float"
            ],
            [
                "avgMotionTime",
                "float"
            ],
            [
                "maxMotionTime",
                "float"
            ],
            [
                "minMotionTime",
                "float"
            ]
        ],
        "InertialData": [
            [
                "gyro",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "gyroVariance",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "acc",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "accVariance",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "angle",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "orientation2D",
                "Eigen::Quaternion<float,0>"
            ],
            [
                "orientation3D",
                "Eigen::Quaternion<float,0>"
            ],
            [
                "angleChange",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ],
            [
                "orientation3DCov",
                "Eigen::Matrix<float,3,3,0,3,3>"
            ]
        ],
        "WalkAtAbsoluteSpeedGenerator": [],
        "RobotPoseCompact": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "quality",
                "RobotPose::LocalizationQuality"
            ],
            [
                "covariance",
                "Eigen::Matrix<short,2,2,0,2,2>"
            ],
            [
                "timestampLastJump",
                "unsigned int"
            ]
        ],
        "GlobalTeammatesTrackerModule::Params": [
            [
                "borderThreshold",
                "float"
            ],
            [
                "reinitThreshold",
                "float"
            ],
            [
                "squaredDistanceThreshold",
                "float"
            ]
        ],
        "SkillRegistryBase::Configuration::SkillImplementation": [
            [
                "skill",
                "std::string"
            ],
            [
                "implementation",
                "std::string"
            ]
        ],
        "Eigen::Matrix<Angle,2,1,0,2,1>": [
            [
                "x",
                "Angle"
            ],
            [
                "y",
                "Angle"
            ]
        ],
        "TeamMessage": [
            [
                "theRobotPose",
                "RobotPoseCompact"
            ],
            [
                "theRobotStatus",
                "RobotStatus"
            ],
            [
                "theFrameInfo",
                "FrameInfo"
            ],
            [
                "theBallModel",
                "BallModel"
            ],
            [
                "theWhistle",
                "WhistleCompact"
            ],
            [
                "theBehaviorStatus",
                "BehaviorStatus"
            ],
            [
                "theStrategyStatus",
                "StrategyStatus"
            ]
        ],
        "FreeKick": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ],
            [
                "preconditions",
                "FreeKick::Condition"
            ],
            [
                "invariants",
                "FreeKick::Condition"
            ],
            [
                "ballSide",
                "FreeKick::BallSide"
            ]
        ],
        "WalkKickGenerator": [],
        "PenaltyMarkRegions": [
            [
                "regions",
                "Boundary<int>*"
            ]
        ],
        "GyroOffsetProviderModule::Params": [
            [
                "thresholdZero",
                "Angle"
            ],
            [
                "bodyDisconnectGyroRange",
                "Range<Angle>"
            ],
            [
                "waitTimeBeforeSampling",
                "int"
            ],
            [
                "maxGyroDelay",
                "int"
            ],
            [
                "startTimestamp",
                "unsigned int"
            ],
            [
                "bodyDisconnectWaitTime",
                "int"
            ],
            [
                "gyroOffsetWarningTime",
                "int"
            ],
            [
                "gyroNotCheckedWarningTime",
                "int"
            ],
            [
                "waitForInitialGroundContactTime",
                "int"
            ]
        ],
        "FootSupportProviderModule::Params": [
            [
                "outerWeight",
                "float"
            ],
            [
                "innerWeight",
                "float"
            ],
            [
                "currentSupportMaxPressure",
                "float"
            ],
            [
                "currentSwingMinPressure",
                "float"
            ]
        ],
        "RecentWhistle": [
            [
                "confidenceOfLastWhistleDetection",
                "float"
            ],
            [
                "lastTimeWhistleDetected",
                "unsigned int"
            ]
        ],
        "LowerOptionalECImage": [
            [
                "image",
                "ECImage*"
            ]
        ],
        "ColorScanLineRegionsHorizontal::ScanLine": [
            [
                "y",
                "unsigned short"
            ],
            [
                "regions",
                "ScanLineRegion*"
            ]
        ],
        "Eigen::Matrix<float,4,1,0,4,1>": [
            [
                "elems",
                "float[4]"
            ]
        ],
        "SetupPosesProviderModule::Params": [
            [
                "poses",
                "SetupPoses::SetupPose*"
            ]
        ],
        "RefereeGestureDetectionModule::Params::Rule": [
            [
                "gesture",
                "RefereePercept::Gesture"
            ],
            [
                "constraints",
                "RefereeGestureDetectionModule::Params::Constraint*"
            ]
        ],
        "UpperIntersectionsPercept": [
            [
                "intersections",
                "IntersectionsPercept::Intersection*"
            ]
        ],
        "OwnFreeKick": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ],
            [
                "preconditions",
                "FreeKick::Condition"
            ],
            [
                "invariants",
                "FreeKick::Condition"
            ],
            [
                "ballSide",
                "FreeKick::BallSide"
            ]
        ],
        "JointPlayTranslationProviderModule::Params": [
            [
                "factor",
                "float"
            ],
            [
                "fastFactor",
                "float"
            ]
        ],
        "HeadControlImplSkill::Params": [
            [
                "ownBallTimeout",
                "int"
            ],
            [
                "ownBallDisappearedTimeout",
                "int"
            ],
            [
                "minTimeBetweenTargetSwitch",
                "int"
            ],
            [
                "minTimeLookingAtBall",
                "int"
            ],
            [
                "maxHeadYawSpeed",
                "Angle"
            ]
        ],
        "CNSRegionsProviderModule::Params": [
            [
                "dontProcessUpperImageIfProjectedBallIsOutside",
                "bool"
            ],
            [
                "maxDistance",
                "float"
            ],
            [
                "blockSizeX",
                "int"
            ],
            [
                "blockSizeY",
                "int"
            ]
        ],
        "LowerOdometryData": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "ImageRegions": [
            [
                "regions",
                "Boundary<int>*"
            ]
        ],
        "FieldRatingProviderModule::Params": [
            [
                "fieldBorderValue",
                "float"
            ],
            [
                "fieldBorderRange",
                "float"
            ],
            [
                "repelValue",
                "float"
            ],
            [
                "minRepelDifferenceRange",
                "float"
            ],
            [
                "maxRepelDifferenceRange",
                "float"
            ],
            [
                "opponentDistanceToGoal",
                "float"
            ],
            [
                "goalPostMaxRadius",
                "float"
            ],
            [
                "malusForOpponentTurnFactor",
                "float"
            ],
            [
                "selfAndOpponentShiftFactor",
                "float"
            ],
            [
                "opponentBackRangeY",
                "float"
            ],
            [
                "opponentBackShiftY",
                "float"
            ],
            [
                "opponentBackRangeX",
                "float"
            ],
            [
                "opponentBackValue",
                "float"
            ],
            [
                "attractValue",
                "float"
            ],
            [
                "attractRange",
                "float"
            ],
            [
                "teammateValue",
                "float"
            ],
            [
                "teammateAttractRange",
                "float"
            ],
            [
                "bestRelativePose",
                "float"
            ],
            [
                "minTeammatePassDistance",
                "float"
            ],
            [
                "maxTeammatePassDistance",
                "float"
            ],
            [
                "teammateMinDistanceToObstacle",
                "float"
            ],
            [
                "estimateTeamateIntoFuture",
                "int"
            ],
            [
                "interpolationZoneInOwnHalf",
                "float"
            ],
            [
                "passTargetValue",
                "float"
            ],
            [
                "passAttractRange",
                "float"
            ],
            [
                "teammateAttractRangeMin",
                "float"
            ],
            [
                "betterGoalAngleValue",
                "float"
            ],
            [
                "betterGoalAngleRange",
                "float"
            ],
            [
                "bestDistanceForBall",
                "float"
            ],
            [
                "bestDistanceWidth",
                "float"
            ],
            [
                "ballRange",
                "float"
            ],
            [
                "ballRating",
                "float"
            ],
            [
                "ballGoalSectorWidth",
                "Angle"
            ],
            [
                "ballGoalSectorBorderWidth",
                "Angle"
            ],
            [
                "badRatingColor",
                "ColorRGBA"
            ],
            [
                "middleRatingColor",
                "ColorRGBA"
            ],
            [
                "goodRatingColor",
                "ColorRGBA"
            ],
            [
                "drawMinX",
                "float"
            ],
            [
                "drawMaxX",
                "float"
            ],
            [
                "drawMinY",
                "float"
            ],
            [
                "drawMaxY",
                "float"
            ],
            [
                "drawGrid",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "drawGridArrow",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "arrowwidth",
                "int"
            ],
            [
                "arrowlenght",
                "float"
            ]
        ],
        "TeamInfo": [
            [
                "teamNumber",
                "unsigned char"
            ],
            [
                "fieldPlayerColor",
                "unsigned char"
            ],
            [
                "goalkeeperColor",
                "unsigned char"
            ],
            [
                "goalkeeper",
                "unsigned char"
            ],
            [
                "score",
                "unsigned char"
            ],
            [
                "penaltyShot",
                "unsigned char"
            ],
            [
                "singleShots",
                "unsigned short"
            ],
            [
                "messageBudget",
                "unsigned short"
            ],
            [
                "players",
                "RobotInfo[20]"
            ]
        ],
        "JointAnglePredictorModule::Params": [
            [
                "modelName",
                "std::string"
            ]
        ],
        "LEDRequest": [
            [
                "ledStates",
                "EnumIndexedArray<LEDRequest::LEDState,LEDRequest::LED,LEDRequest::LED_Info>"
            ]
        ],
        "RobotDimensions": [
            [
                "yHipOffset",
                "float"
            ],
            [
                "upperLegLength",
                "float"
            ],
            [
                "lowerLegLength",
                "float"
            ],
            [
                "footHeight",
                "float"
            ],
            [
                "footLength",
                "float"
            ],
            [
                "soleToFrontEdgeLength",
                "float"
            ],
            [
                "soleToInnerEdgeLength",
                "float"
            ],
            [
                "soleToOuterEdgeLength",
                "float"
            ],
            [
                "soleToBackEdgeLength",
                "float"
            ],
            [
                "bumperInnerEdge",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "bumperOuterEdge",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "hipToNeckLength",
                "float"
            ],
            [
                "xOffsetNeckToLowerCamera",
                "float"
            ],
            [
                "zOffsetNeckToLowerCamera",
                "float"
            ],
            [
                "tiltNeckToLowerCamera",
                "Angle"
            ],
            [
                "xOffsetNeckToUpperCamera",
                "float"
            ],
            [
                "zOffsetNeckToUpperCamera",
                "float"
            ],
            [
                "tiltNeckToUpperCamera",
                "Angle"
            ],
            [
                "armOffset",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "yOffsetElbowToShoulder",
                "float"
            ],
            [
                "upperArmLength",
                "float"
            ],
            [
                "lowerArmLength",
                "float"
            ],
            [
                "xOffsetElbowToWrist",
                "float"
            ],
            [
                "handOffset",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "handRadius",
                "float"
            ],
            [
                "armRadius",
                "float"
            ],
            [
                "imuOffset",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "leftFsrPositions",
                "EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>"
            ],
            [
                "rightFsrPositions",
                "EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>"
            ]
        ],
        "KickAtGoalImplSkill::Params": [
            [
                "hysteresisNumber",
                "float"
            ],
            [
                "hysteresisKickRangeExtension",
                "float"
            ],
            [
                "hysteresisAngle",
                "Angle"
            ],
            [
                "minOpeningAngle",
                "Angle"
            ],
            [
                "kickInaccuracy",
                "Angle"
            ],
            [
                "hysteresisDecisionPenalty",
                "float"
            ],
            [
                "walkForwardLongMalus",
                "float"
            ],
            [
                "allowedKicks",
                "KickInfo::KickType*"
            ],
            [
                "allowedKickRanges",
                "Range<float>*"
            ]
        ],
        "ComInFootState": [
            [
                "forward",
                "float"
            ],
            [
                "outerSide",
                "float"
            ]
        ],
        "FilteredCurrentProviderModule::Params": [
            [
                "stiffnessThreshold",
                "int"
            ],
            [
                "stiffnessThresholdArms",
                "int"
            ],
            [
                "flagsThreshold",
                "int"
            ],
            [
                "checkWaitTime",
                "int"
            ],
            [
                "motorMalfunctionTime",
                "int"
            ],
            [
                "annotationWaitTime",
                "int"
            ],
            [
                "minJointDiffNormalJoints",
                "Angle"
            ],
            [
                "minJointDiffNormalJointsNoGroundConntact",
                "Angle"
            ],
            [
                "minJointDiffAnkleRoll",
                "Angle"
            ],
            [
                "minJointDiffArms",
                "Angle"
            ],
            [
                "ignoreJoints",
                "Joints::Joint*"
            ],
            [
                "specialMotorCheck",
                "Joints::Joint*"
            ],
            [
                "zeroCheckRange",
                "Angle"
            ]
        ],
        "CommonSpeedParameters": [
            [
                "maxAcceleration",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "maxDeceleration",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "fastFeetAdjustment",
                "float"
            ],
            [
                "slowFeetAdjustment",
                "float"
            ],
            [
                "reduceSwingHeightStartingFactor",
                "float"
            ],
            [
                "soleRotationOffsetSpeed",
                "Range<Angle>"
            ],
            [
                "soleRotationOffsetSpeedAfterKickTime",
                "int"
            ],
            [
                "walkSpeedReductionFactor",
                "float"
            ],
            [
                "reduceWalkingSpeedStepAdjustmentSteps",
                "int"
            ],
            [
                "afterKickFeetHeightAdjustment",
                "float"
            ]
        ],
        "NoParameters": [],
        "KickInfo": [
            [
                "kicks",
                "EnumIndexedArray<KickInfo::Kick,KickInfo::KickType,KickInfo::KickType_Info>"
            ]
        ],
        "OdometryData": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "PenaltyStrikerGoToBallAndKickImplSkill::Params": [
            [
                "prepareKickDistance",
                "float"
            ],
            [
                "prepareKickDuration",
                "int"
            ]
        ],
        "AutoExposureWeightTableProviderModule::Params": [
            [
                "distanceThreshold",
                "float"
            ],
            [
                "ballValidDelay",
                "int"
            ],
            [
                "ballWeightRatio",
                "float"
            ],
            [
                "useStaticTables",
                "EnumIndexedArray<bool,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ],
            [
                "staticTables",
                "Eigen::Matrix<unsigned char,4,4,1,4,4>[2]"
            ]
        ],
        "ScanLineRegionizerModule::Params": [
            [
                "additionalSmoothingPoint",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "edgeThreshold",
                "float"
            ],
            [
                "minHorizontalScanLineDistance",
                "unsigned short"
            ],
            [
                "luminanceSimilarityThreshold",
                "unsigned char"
            ],
            [
                "hueSimilarityThreshold",
                "unsigned char"
            ],
            [
                "saturationSimilarityThreshold",
                "unsigned char"
            ],
            [
                "lowerMinRegionSize",
                "int"
            ],
            [
                "upperMinRegionSize",
                "int"
            ],
            [
                "baseLuminanceReduction",
                "float"
            ],
            [
                "verticalGridScanMinStep",
                "short"
            ],
            [
                "prelabelAsWhite",
                "bool"
            ],
            [
                "maxPrelabelRegionSize",
                "short"
            ],
            [
                "maxRegionSizeForStitching",
                "short"
            ],
            [
                "estimatedFieldColorInvalidationTime",
                "int"
            ]
        ],
        "PathPlannerProviderModule::Params": [
            [
                "goalPostRadius",
                "float"
            ],
            [
                "uprightRobotRadius",
                "float"
            ],
            [
                "fallenRobotRadius",
                "float"
            ],
            [
                "readyRobotRadius",
                "float"
            ],
            [
                "centerCircleRadius",
                "float"
            ],
            [
                "penaltyAreaRadius",
                "float"
            ],
            [
                "ballRadius",
                "float"
            ],
            [
                "freeKickRadius",
                "float"
            ],
            [
                "wrongBallSideCostFactor",
                "float"
            ],
            [
                "wrongBallSideRadius",
                "float"
            ],
            [
                "fieldBorderLimit",
                "float"
            ],
            [
                "radiusControlOffset",
                "float"
            ],
            [
                "radiusAvoidanceTolerance",
                "float"
            ],
            [
                "rotationPenalty",
                "float"
            ],
            [
                "switchPenalty",
                "float"
            ]
        ],
        "WalkingEngineOutput": [
            [
                "maxSpeed",
                "Pose2f"
            ],
            [
                "maxSpeedBackwards",
                "float"
            ],
            [
                "walkStepDuration",
                "float"
            ],
            [
                "maxStepSize",
                "Pose2f"
            ],
            [
                "maxBackwardStepSize",
                "float"
            ],
            [
                "stepDuration",
                "float"
            ],
            [
                "maxPossibleStepSize",
                "Pose2f"
            ],
            [
                "maxPossibleBackwardStepSize",
                "float"
            ]
        ],
        "WalkToPoseEngineModule::Params": [
            [
                "controlAheadAngle",
                "Angle"
            ],
            [
                "startTurningBeforeCircleDistance",
                "float"
            ],
            [
                "reduceForwardStepUpperThreshold",
                "float"
            ],
            [
                "reduceForwardStepLowerThreshold",
                "float"
            ],
            [
                "useReferenceMaxForwardSpeed",
                "float"
            ]
        ],
        "ObstacleHandling": [
            [
                "leftFootEdge",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "rightFootEdge",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "leftFootKickEdge",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "rightFootKickEdge",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "maxObstacleDistanceForWalkStealBallKick",
                "float"
            ],
            [
                "maxObstacleDistanceForSideStealBallKick",
                "float"
            ],
            [
                "obstacleDistanceForBlockingPose",
                "float"
            ],
            [
                "obstacleBlockingRadius",
                "float"
            ],
            [
                "obstacleBlockingRadiusSidewardsIncrease",
                "float"
            ],
            [
                "noKickBlockingPose",
                "float"
            ],
            [
                "obstacleMinDistanceForBackPass",
                "float"
            ],
            [
                "obstacleShiftRange",
                "Range<float>"
            ],
            [
                "maxObstacleDistanceToBallForRiskyKicks",
                "float"
            ],
            [
                "maxObstacleDistanceToForceForwardSteal",
                "float"
            ]
        ],
        "ManualHeadMotionProviderModule::Params": [
            [
                "xImg",
                "int"
            ],
            [
                "yImg",
                "int"
            ],
            [
                "camera",
                "CameraInfo::Camera"
            ]
        ],
        "BallSearchAreasProviderModule::Params": [
            [
                "cellSize",
                "int"
            ],
            [
                "heatmapAlpha",
                "unsigned char"
            ],
            [
                "maxDistanceToCell",
                "float"
            ],
            [
                "obstacleOffset",
                "unsigned int"
            ]
        ],
        "TorsoMatrix": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ],
            [
                "isValid",
                "bool"
            ]
        ],
        "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "Angle"
            ],
            [
                "headPitch",
                "Angle"
            ],
            [
                "lShoulderPitch",
                "Angle"
            ],
            [
                "lShoulderRoll",
                "Angle"
            ],
            [
                "lElbowYaw",
                "Angle"
            ],
            [
                "lElbowRoll",
                "Angle"
            ],
            [
                "lWristYaw",
                "Angle"
            ],
            [
                "lHand",
                "Angle"
            ],
            [
                "rShoulderPitch",
                "Angle"
            ],
            [
                "rShoulderRoll",
                "Angle"
            ],
            [
                "rElbowYaw",
                "Angle"
            ],
            [
                "rElbowRoll",
                "Angle"
            ],
            [
                "rWristYaw",
                "Angle"
            ],
            [
                "rHand",
                "Angle"
            ],
            [
                "lHipYawPitch",
                "Angle"
            ],
            [
                "lHipRoll",
                "Angle"
            ],
            [
                "lHipPitch",
                "Angle"
            ],
            [
                "lKneePitch",
                "Angle"
            ],
            [
                "lAnklePitch",
                "Angle"
            ],
            [
                "lAnkleRoll",
                "Angle"
            ],
            [
                "rHipYawPitch",
                "Angle"
            ],
            [
                "rHipRoll",
                "Angle"
            ],
            [
                "rHipPitch",
                "Angle"
            ],
            [
                "rKneePitch",
                "Angle"
            ],
            [
                "rAnklePitch",
                "Angle"
            ],
            [
                "rAnkleRoll",
                "Angle"
            ]
        ],
        "FieldDimensions": [
            [
                "xPosOpponentFieldBorder",
                "float"
            ],
            [
                "xPosOpponentGoal",
                "float"
            ],
            [
                "xPosOpponentGoalPost",
                "float"
            ],
            [
                "xPosOpponentGroundLine",
                "float"
            ],
            [
                "xPosOpponentPenaltyArea",
                "float"
            ],
            [
                "xPosOpponentPenaltyMark",
                "float"
            ],
            [
                "xPosPenaltyStrikerStartPosition",
                "float"
            ],
            [
                "xPosHalfWayLine",
                "float"
            ],
            [
                "xPosOwnPenaltyArea",
                "float"
            ],
            [
                "xPosOwnPenaltyMark",
                "float"
            ],
            [
                "xPosOwnGroundLine",
                "float"
            ],
            [
                "xPosOwnGoalPost",
                "float"
            ],
            [
                "xPosOwnGoal",
                "float"
            ],
            [
                "xPosOwnFieldBorder",
                "float"
            ],
            [
                "xPosOpponentGoalArea",
                "float"
            ],
            [
                "xPosOwnGoalArea",
                "float"
            ],
            [
                "yPosLeftFieldBorder",
                "float"
            ],
            [
                "yPosLeftSideline",
                "float"
            ],
            [
                "yPosLeftPenaltyArea",
                "float"
            ],
            [
                "yPosLeftGoal",
                "float"
            ],
            [
                "yPosRightGoal",
                "float"
            ],
            [
                "yPosRightPenaltyArea",
                "float"
            ],
            [
                "yPosRightSideline",
                "float"
            ],
            [
                "yPosRightFieldBorder",
                "float"
            ],
            [
                "yPosLeftGoalArea",
                "float"
            ],
            [
                "yPosRightGoalArea",
                "float"
            ],
            [
                "fieldLinesWidth",
                "float"
            ],
            [
                "centerCircleRadius",
                "float"
            ],
            [
                "goalPostRadius",
                "float"
            ],
            [
                "crossBarRadius",
                "float"
            ],
            [
                "goalHeight",
                "float"
            ],
            [
                "penaltyMarkSize",
                "float"
            ],
            [
                "goalFrameLines",
                "FieldDimensions::LinesTable::Line*"
            ],
            [
                "fieldLines",
                "FieldDimensions::LinesTable::Line*"
            ],
            [
                "centerCircle",
                "FieldDimensions::LinesTable::Circle"
            ],
            [
                "corners",
                "EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>*,FieldDimensions::CornerClass,FieldDimensions::CornerClass_Info>"
            ]
        ],
        "OdometryDataPreviewProviderModule::Params": [
            [
                "useMeasuredSwingAfterStepStartedTime",
                "float"
            ],
            [
                "usePlannedIsLeftPhaseAfterThisSwitchTime",
                "unsigned int"
            ],
            [
                "odometryWalkScaling",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "BallInGoalTrackerModule::Params": [
            [
                "changeStatusTriggerTime",
                "int"
            ],
            [
                "extraGoalWidth",
                "float"
            ],
            [
                "minDistance",
                "float"
            ],
            [
                "maxDistanceToGoal",
                "float"
            ],
            [
                "convergingRate",
                "float"
            ]
        ],
        "Image<PixelTypes::YUVPixel>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "KickRequest": [
            [
                "kickMotionType",
                "KickRequest::KickMotionID"
            ],
            [
                "mirror",
                "bool"
            ],
            [
                "armsBackFix",
                "bool"
            ]
        ],
        "ObstaclesPerceptorData::ScanScore": [
            [
                "shortRangeScore",
                "int"
            ],
            [
                "longRangeScore",
                "int"
            ]
        ],
        "RobotStableState": [
            [
                "comInTorso",
                "EnumIndexedArray<ComInFootState,Legs::Leg,Legs::Leg_Info>"
            ],
            [
                "comInFeet",
                "EnumIndexedArray<ComInFootState,Legs::Leg,Legs::Leg_Info>"
            ],
            [
                "predictedTorsoRotation",
                "RotationMatrix"
            ],
            [
                "lightCenterOfMass",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "lastUpdate",
                "unsigned int"
            ]
        ],
        "WalkingEngine": [
            [
                "minPhaseForStopWithWrongGroundContact",
                "float"
            ],
            [
                "standStiffnessDelay",
                "int"
            ],
            [
                "clipForward",
                "Range<float>"
            ],
            [
                "lowStiffnessDelay",
                "int"
            ],
            [
                "clipAtBallDistanceX",
                "float"
            ],
            [
                "clipAtBallDistance",
                "float"
            ],
            [
                "standHighTorsoPitch",
                "Angle"
            ],
            [
                "standInterpolationVelocity",
                "Angle"
            ],
            [
                "standHighInterpolationDuration",
                "float"
            ],
            [
                "lowStiffnessLegs",
                "int"
            ],
            [
                "lowStiffnessAnklePitch",
                "int"
            ],
            [
                "standHighNotMovingTime",
                "int"
            ],
            [
                "highDeltaScale",
                "float"
            ],
            [
                "minTimeForEarlySwitch",
                "float"
            ],
            [
                "maxWalkDirectionForFootPrediction",
                "Angle"
            ],
            [
                "useFootSupportSwitchPrediction",
                "bool"
            ],
            [
                "blockStoppingWithStepAdjustment",
                "bool"
            ],
            [
                "useJointPlayScaling",
                "bool"
            ],
            [
                "commonSpeedParameters",
                "CommonSpeedParameters"
            ],
            [
                "kinematicParameters",
                "KinematicParameters"
            ],
            [
                "emergencyStep",
                "EmergencyStepParameters"
            ],
            [
                "armParameters",
                "ArmParameters"
            ],
            [
                "stepSizeParameters",
                "StepSizeParameters"
            ],
            [
                "balanceParameters",
                "BalanceParameters"
            ],
            [
                "walkStepAdjustmentParams",
                "WalkStepAdjustmentParams"
            ],
            [
                "soleRotationParameter",
                "SoleRotationParameter"
            ],
            [
                "parabolicFootHeightParameters",
                "ParabolicFootHeightParameters"
            ],
            [
                "stiffnessParameters",
                "StiffnessParameters"
            ],
            [
                "speedRegulatorParams",
                "SpeedRegulatorParams"
            ],
            [
                "walkDelayParameters",
                "WalkDelayParameters"
            ],
            [
                "walkSpeedParamsWalkStep",
                "WalkSpeedParams"
            ],
            [
                "sideStabilizeParameters",
                "SideStabilizeParameters"
            ]
        ],
        "RobotInfo": [
            [
                "penalty",
                "unsigned char"
            ],
            [
                "secsTillUnpenalised",
                "unsigned char"
            ]
        ],
        "BodyContour::Line": [
            [
                "p1",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ],
            [
                "p2",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ]
        ],
        "RefereeGestureDetectionNNModule::Params": [
            [
                "bufferPortion",
                "unsigned int"
            ],
            [
                "validXAvrg",
                "Range<float>"
            ],
            [
                "validYAvrg",
                "Range<float>"
            ]
        ],
        "OracledPerceptsProviderModule::Params": [
            [
                "applyBallNoise",
                "bool"
            ],
            [
                "ballCenterInImageStdDev",
                "float"
            ],
            [
                "ballMaxVisibleDistance",
                "float"
            ],
            [
                "ballRecognitionRate",
                "float"
            ],
            [
                "ballFalsePositiveRate",
                "float"
            ],
            [
                "applyCenterCircleNoise",
                "bool"
            ],
            [
                "centerCircleCenterInImageStdDev",
                "float"
            ],
            [
                "centerCircleMaxVisibleDistance",
                "float"
            ],
            [
                "centerCircleRecognitionRate",
                "float"
            ],
            [
                "applyLineNoise",
                "bool"
            ],
            [
                "linePosInImageStdDev",
                "float"
            ],
            [
                "lineMaxVisibleDistance",
                "float"
            ],
            [
                "lineRecognitionRate",
                "float"
            ],
            [
                "applyPlayerNoise",
                "bool"
            ],
            [
                "playerPosInImageStdDev",
                "float"
            ],
            [
                "playerMaxVisibleDistance",
                "float"
            ],
            [
                "playerRecognitionRate",
                "float"
            ],
            [
                "playerFalsePositiveRate",
                "float"
            ],
            [
                "applyPenaltyMarkNoise",
                "bool"
            ],
            [
                "penaltyMarkPosInImageStdDev",
                "float"
            ],
            [
                "penaltyMarkMaxVisibleDistance",
                "float"
            ],
            [
                "penaltyMarkRecognitionRate",
                "float"
            ],
            [
                "penaltyMarkFalsePositiveRate",
                "float"
            ],
            [
                "penaltyMarkFalseDeviationFactor",
                "float"
            ],
            [
                "obstacleCoverageThickness",
                "float"
            ]
        ],
        "EnumIndexedArray<Angle,JointAnglePred::Joint,JointAnglePred::Joint_Info>": [
            [
                "rAnkleRoll",
                "Angle"
            ],
            [
                "rAnklePitch",
                "Angle"
            ],
            [
                "rKneePitch",
                "Angle"
            ],
            [
                "rHipPitch",
                "Angle"
            ],
            [
                "rHipRoll",
                "Angle"
            ],
            [
                "lKneePitch",
                "Angle"
            ],
            [
                "lAnkleRoll",
                "Angle"
            ],
            [
                "lAnklePitch",
                "Angle"
            ],
            [
                "lHipPitch",
                "Angle"
            ],
            [
                "lHipRoll",
                "Angle"
            ],
            [
                "hipYawPitch",
                "Angle"
            ]
        ],
        "LowerObstaclesFieldPercept": [
            [
                "obstacles",
                "ObstaclesFieldPercept::Obstacle*"
            ]
        ],
        "GyroOffset": [
            [
                "offset",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "offsetCheckFinished",
                "bool"
            ],
            [
                "bodyDisconnect",
                "bool"
            ],
            [
                "isIMUBad",
                "bool"
            ]
        ],
        "ActivationGraph": [
            [
                "graph",
                "ActivationGraph::Node*"
            ]
        ],
        "CameraIntrinsics": [
            [
                "cameras",
                "EnumIndexedArray<CameraIntrinsics::Camera,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ]
        ],
        "SelfLocatorModule::Params": [
            [
                "numberOfSamples",
                "int"
            ],
            [
                "defaultPoseDeviation",
                "Pose2f"
            ],
            [
                "walkInPoseDeviation",
                "Pose2f"
            ],
            [
                "returnFromPenaltyPoseDeviation",
                "Pose2f"
            ],
            [
                "manualPlacementPoseDeviation",
                "Pose2f"
            ],
            [
                "penaltyShootoutPoseDeviation",
                "Pose2f"
            ],
            [
                "filterProcessDeviation",
                "Pose2f"
            ],
            [
                "odometryDeviation",
                "Pose2f"
            ],
            [
                "odometryRotationDeviation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "movedDistWeightRotationNoise",
                "float"
            ],
            [
                "movedAngleWeightRotationNoise",
                "float"
            ],
            [
                "movedAngleWeightRotationNoiseNotWalking",
                "float"
            ],
            [
                "majorDirTransWeight",
                "float"
            ],
            [
                "minorDirTransWeight",
                "float"
            ],
            [
                "minValidityForSuperbLocalizationQuality",
                "float"
            ],
            [
                "maxTranslationDeviationForSuperbLocalizationQuality",
                "float"
            ],
            [
                "maxRotationalDeviationForSuperbLocalizationQuality",
                "Angle"
            ],
            [
                "baseValidityWeighting",
                "float"
            ],
            [
                "numberOfConsideredFramesForValidity",
                "int"
            ],
            [
                "considerLinesForValidityComputation",
                "bool"
            ],
            [
                "validityFactorPoseMeasurement",
                "float"
            ],
            [
                "validityFactorLandmarkMeasurement",
                "float"
            ],
            [
                "validityFactorLineMeasurement",
                "float"
            ],
            [
                "positionJumpNotificationDistance",
                "float"
            ],
            [
                "minNumberOfObservationsForResetting",
                "int"
            ],
            [
                "translationalDeviationForResetting",
                "float"
            ],
            [
                "rotationalDeviationForResetting",
                "float"
            ],
            [
                "returnFromPenaltyMaxXOffset",
                "float"
            ],
            [
                "demoUseCustomReturnFromPenaltyPoses",
                "bool"
            ],
            [
                "demoCustomReturnFromPenaltyPoseGoalie",
                "Pose2f"
            ],
            [
                "demoCustomReturnFromPenaltyPoseFieldPlayer",
                "Pose2f"
            ]
        ],
        "ArmMotionRequest": [
            [
                "armMotion",
                "EnumIndexedArray<ArmMotionRequest::ArmRequest,Arms::Arm,Arms::Arm_Info>"
            ],
            [
                "armKeyFrameRequest",
                "ArmKeyFrameRequest"
            ],
            [
                "pointToPointAt",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "KickEngineParameters::BoostAngle": [
            [
                "joint",
                "Joints::Joint"
            ],
            [
                "angle",
                "Angle"
            ],
            [
                "mode",
                "KickEngineParameters::BoostAngle::InterpolationMode"
            ]
        ],
        "LowerFieldBoundary": [
            [
                "boundaryOnField",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "boundaryInImage",
                "Eigen::Matrix<int,2,1,0,2,1>*"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "extrapolated",
                "bool"
            ],
            [
                "odd",
                "bool"
            ]
        ],
        "UpperFieldLines": [
            [
                "lines",
                "FieldLines::Line*"
            ]
        ],
        "JointAnglePred": [
            [
                "modelName",
                "std::string"
            ],
            [
                "angles",
                "EnumIndexedArray<Angle,JointAnglePred::Joint,JointAnglePred::Joint_Info>"
            ]
        ],
        "EnumIndexedArray<float,RefereePercept::Gesture,RefereePercept::Gesture_Info>": [
            [
                "none",
                "float"
            ],
            [
                "kickInBlue",
                "float"
            ],
            [
                "kickInRed",
                "float"
            ],
            [
                "goalKickBlue",
                "float"
            ],
            [
                "goalKickRed",
                "float"
            ],
            [
                "cornerKickBlue",
                "float"
            ],
            [
                "cornerKickRed",
                "float"
            ],
            [
                "goalBlue",
                "float"
            ],
            [
                "goalRed",
                "float"
            ],
            [
                "pushingFreeKickBlue",
                "float"
            ],
            [
                "pushingFreeKickRed",
                "float"
            ],
            [
                "fullTime",
                "float"
            ],
            [
                "substitutionBlue",
                "float"
            ],
            [
                "substitutionRed",
                "float"
            ]
        ],
        "LibDemoProviderModule::Params": [
            [
                "isDemoActive",
                "bool"
            ],
            [
                "isOneVsOneDemoActive",
                "bool"
            ],
            [
                "isMiniFieldActive",
                "bool"
            ],
            [
                "activeDemoGameStates",
                "LibDemo::DemoGameState*"
            ],
            [
                "changeArmToWave",
                "bool"
            ]
        ],
        "EnumIndexedArray<CoordinateSystemProviderModule::CameraTiming,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "CoordinateSystemProviderModule::CameraTiming"
            ],
            [
                "lower",
                "CoordinateSystemProviderModule::CameraTiming"
            ]
        ],
        "FieldDimensions::read(In&)::Dimensions": [
            [
                "field",
                "FieldDimensions::read(In&)::Dimensions::Field"
            ],
            [
                "goal",
                "FieldDimensions::read(In&)::Dimensions::Goal"
            ]
        ],
        "TeamMessageHandlerModule::Params": [
            [
                "minSendInterval",
                "int"
            ],
            [
                "durationOfHalf",
                "int"
            ],
            [
                "overallMessageBudget",
                "unsigned int"
            ],
            [
                "normalMessageReserve",
                "unsigned int"
            ],
            [
                "priorityMessageReserve",
                "unsigned int"
            ],
            [
                "lookahead",
                "int"
            ],
            [
                "positionThreshold",
                "float"
            ],
            [
                "bearingThreshold",
                "Angle"
            ],
            [
                "assumedObservationHeight",
                "float"
            ],
            [
                "teamBallThresholdBase",
                "int"
            ],
            [
                "teamBallThresholdFactor",
                "int"
            ],
            [
                "newBallThreshold",
                "int"
            ],
            [
                "disappearedThreshold",
                "int"
            ],
            [
                "ignoreWhistleBeforeEndOfHalf",
                "int"
            ],
            [
                "maxWhistleSendDelay",
                "int"
            ],
            [
                "minTimeBetween2RejectSounds",
                "int"
            ],
            [
                "sendMirroredRobotPose",
                "bool"
            ],
            [
                "dropUnsynchronizedMessages",
                "bool"
            ],
            [
                "alwaysSend",
                "bool"
            ]
        ],
        "EnumIndexedArray<WalkKickParameters,WalkKicks::Type,WalkKicks::Type_Info>": [
            [
                "none",
                "WalkKickParameters"
            ],
            [
                "forward",
                "WalkKickParameters"
            ],
            [
                "forwardLong",
                "WalkKickParameters"
            ],
            [
                "forwardVeryLong",
                "WalkKickParameters"
            ],
            [
                "sidewardsOuter",
                "WalkKickParameters"
            ],
            [
                "turnOut",
                "WalkKickParameters"
            ],
            [
                "forwardSteal",
                "WalkKickParameters"
            ],
            [
                "forwardAlternative",
                "WalkKickParameters"
            ]
        ],
        "RobotHealth": [
            [
                "motionFrameRate",
                "float"
            ],
            [
                "avgMotionTime",
                "float"
            ],
            [
                "maxMotionTime",
                "float"
            ],
            [
                "minMotionTime",
                "float"
            ],
            [
                "cognitionFrameRate",
                "float"
            ],
            [
                "batteryLevel",
                "unsigned char"
            ],
            [
                "totalCurrent",
                "float"
            ],
            [
                "maxJointTemperatureStatus",
                "JointSensorData::TemperatureStatus"
            ],
            [
                "jointWithMaxTemperature",
                "Joints::Joint"
            ],
            [
                "cpuTemperature",
                "unsigned char"
            ],
            [
                "load",
                "unsigned char[3]"
            ],
            [
                "memoryUsage",
                "unsigned char"
            ],
            [
                "wlan",
                "bool"
            ],
            [
                "robotName",
                "std::string"
            ],
            [
                "configuration",
                "RobotHealth::Configuration"
            ],
            [
                "location",
                "std::string"
            ],
            [
                "scenario",
                "std::string"
            ]
        ],
        "EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>": [
            [
                "fl",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "fr",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "bl",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "br",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "WalkKickStep::LongKickParams": [
            [
                "joint",
                "Joints::Joint"
            ],
            [
                "offset",
                "Angle"
            ],
            [
                "minRatio",
                "float"
            ],
            [
                "middleRatio",
                "float"
            ],
            [
                "maxRatio",
                "float"
            ],
            [
                "minimumRatio",
                "float"
            ],
            [
                "shiftByKeyFrame",
                "int"
            ]
        ],
        "EnumIndexedArray<Eigen::Matrix<Angle,3,1,0,3,1>,CameraInfo::Camera,CameraInfo::Camera_Info>": [
            [
                "upper",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ],
            [
                "lower",
                "Eigen::Matrix<Angle,3,1,0,3,1>"
            ]
        ],
        "ColorScanLineRegionsVerticalClipped": [
            [
                "scanLines",
                "ColorScanLineRegionsVertical::ScanLine*"
            ],
            [
                "lowResStart",
                "unsigned int"
            ],
            [
                "lowResStep",
                "unsigned int"
            ]
        ],
        "Logger": [
            [
                "enabled",
                "bool"
            ],
            [
                "path",
                "std::string"
            ],
            [
                "numOfBuffers",
                "unsigned int"
            ],
            [
                "sizeOfBuffer",
                "unsigned int"
            ],
            [
                "writePriority",
                "int"
            ],
            [
                "minFreeDriveSpace",
                "unsigned int"
            ],
            [
                "representationsPerThread",
                "Logger::RepresentationsPerThread*"
            ]
        ],
        "AutomaticCameraCalibratorModule::Params": [
            [
                "resRequest",
                "EnumIndexedArray<CameraResolutionRequest::Resolutions,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ],
            [
                "terminationCriterion",
                "float"
            ],
            [
                "minSuccessiveConvergences",
                "unsigned int"
            ],
            [
                "notValidError",
                "float"
            ],
            [
                "numOfAngles",
                "int"
            ],
            [
                "minDisImage",
                "int"
            ],
            [
                "sobelThreshValue",
                "float"
            ],
            [
                "distanceErrorDivisor",
                "float"
            ],
            [
                "angleErrorDivisor",
                "Angle"
            ],
            [
                "discardsUntilIncrease",
                "int"
            ],
            [
                "increase",
                "float"
            ],
            [
                "validationRobotPose",
                "Pose2f"
            ],
            [
                "pixelInaccuracyPerMeter",
                "float"
            ]
        ],
        "DummyRepresentationOnlineBallFriction": [
            [
                "dummy",
                "int"
            ]
        ],
        "WalkKickParameters": [
            [
                "maxXDeviation",
                "Range<float>"
            ],
            [
                "maxYDeviation",
                "Range<float>"
            ],
            [
                "additionalXDeviation",
                "Range<float>"
            ],
            [
                "additionalYDeviation",
                "Range<float>"
            ],
            [
                "additionalXDeviationJustHitTheBall",
                "Range<float>"
            ],
            [
                "additionalYDeviationJustHitTheBall",
                "Range<float>"
            ],
            [
                "maxAngleDeviation",
                "Angle"
            ],
            [
                "maxClipBeforeAbortX",
                "Range<float>"
            ],
            [
                "maxClipBeforeAbortY",
                "Range<float>"
            ],
            [
                "maxClipBeforeAbortRot",
                "Range<Angle>"
            ],
            [
                "maxClipBeforeAbortJustHitTheBallX",
                "Range<float>"
            ],
            [
                "maxClipBeforeAbortJustHitTheBallY",
                "Range<float>"
            ],
            [
                "maxClipBeforeAbortJustHitTheBallRot",
                "Range<Angle>"
            ],
            [
                "sideDeviationScalingBasedOnLastStep",
                "Range<float>"
            ],
            [
                "kickKeyFrame",
                "KickKeyframe*"
            ]
        ],
        "LibTeammates": [
            [
                "nonKeeperTeammatesInOwnGoalArea",
                "int"
            ]
        ],
        "FieldFeatureOverview::FieldFeatureStatus": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "isValid",
                "bool"
            ],
            [
                "lastSeen",
                "unsigned int"
            ]
        ],
        "KickEngineParameters": [
            [
                "offsetList",
                "KickEngineParameters::JointOffset*"
            ],
            [
                "armBalancing",
                "KickEngineParameters::ArmBalancing"
            ],
            [
                "footOrigin",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "footRotOrigin",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "armOrigin",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "handRotOrigin",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "comOrigin",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "headOrigin",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "kpx",
                "float"
            ],
            [
                "kix",
                "float"
            ],
            [
                "kpy",
                "float"
            ],
            [
                "kiy",
                "float"
            ],
            [
                "loop",
                "bool"
            ],
            [
                "standLeft",
                "bool"
            ],
            [
                "ignoreHead",
                "bool"
            ],
            [
                "keyframeEarlyExitAllowedSafe",
                "int"
            ],
            [
                "keyframeEarlyExitAllowedRisky",
                "int"
            ],
            [
                "phaseParameters",
                "Phase*"
            ]
        ],
        "SegmentedObstacleImage": [
            [
                "obstacle",
                "Image<unsigned char>"
            ]
        ],
        "EnumIndexedArray<unsigned int,KeyStates::Key,KeyStates::Key_Info>": [
            [
                "headFront",
                "unsigned int"
            ],
            [
                "headMiddle",
                "unsigned int"
            ],
            [
                "headRear",
                "unsigned int"
            ],
            [
                "lHandBack",
                "unsigned int"
            ],
            [
                "lHandLeft",
                "unsigned int"
            ],
            [
                "lHandRight",
                "unsigned int"
            ],
            [
                "rHandBack",
                "unsigned int"
            ],
            [
                "rHandLeft",
                "unsigned int"
            ],
            [
                "rHandRight",
                "unsigned int"
            ],
            [
                "lFootLeft",
                "unsigned int"
            ],
            [
                "lFootRight",
                "unsigned int"
            ],
            [
                "rFootLeft",
                "unsigned int"
            ],
            [
                "rFootRight",
                "unsigned int"
            ],
            [
                "chest",
                "unsigned int"
            ]
        ],
        "RefereeGestureDetection::update(RefereePercept&)::Helper": [
            [
                "history",
                "RefereePercept::Gesture*"
            ]
        ],
        "OptionalECImage": [
            [
                "image",
                "ECImage*"
            ]
        ],
        "EnumIndexedArray<EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>,StaticJointPoses::StaticJointPoseName,StaticJointPoses::StaticJointPoseName_Info>": [
            [
                "sit",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "sitBack",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "sitFront",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "sitFrontGetUp",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "sitBackAfterFall",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "sitFrontAfterFall",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "Range<unsigned int>": [
            [
                "min",
                "unsigned int"
            ],
            [
                "max",
                "unsigned int"
            ]
        ],
        "WalkToBallAndKickGenerator": [],
        "PointAtGenerator": [],
        "PotentialValue": [
            [
                "value",
                "float"
            ],
            [
                "direction",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "FieldDimensions::read(In&)::DimensionsOpt::Field": [
            [
                "goalBoxAreaLength",
                "float"
            ],
            [
                "goalBoxAreaWidth",
                "float"
            ]
        ],
        "GoToBallHeadControlImplSkill::Params": [
            [
                "lookAtBallDistanceLow",
                "float"
            ],
            [
                "lookAtBallDistanceHigh",
                "float"
            ],
            [
                "mayLookAtKickTargetDistanceLow",
                "float"
            ],
            [
                "mayLookAtKickTargetDistanceHigh",
                "float"
            ],
            [
                "areaAroundBallRadiusLow",
                "float"
            ],
            [
                "areaAroundBallRadiusHigh",
                "float"
            ]
        ],
        "LowerCameraMatrix": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ],
            [
                "isValid",
                "bool"
            ]
        ],
        "LibCheckProviderModule::Params": [
            [
                "notSetReaction",
                "EnumIndexedArray<LibCheckProviderModule::Params::Reaction,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>"
            ],
            [
                "multipleSetReaction",
                "EnumIndexedArray<LibCheckProviderModule::Params::Reaction,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>"
            ]
        ],
        "Eigen::AngleAxis<float>": [
            [
                "angle",
                "float"
            ],
            [
                "axis",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "WalkKickStep::StepKeyframe": [
            [
                "stepTarget",
                "Pose2f"
            ],
            [
                "stepTargetSwing",
                "Pose2f"
            ],
            [
                "stepTargetConverted",
                "Pose2f"
            ],
            [
                "stepTargetSwingConverted",
                "Pose2f"
            ],
            [
                "stepRatio",
                "float"
            ],
            [
                "speedUpSwing",
                "float"
            ],
            [
                "holdXSwingTarget",
                "bool"
            ],
            [
                "holdXSupportTarget",
                "bool"
            ],
            [
                "reachedWaitPosition",
                "bool"
            ],
            [
                "interpolationType",
                "WalkKickStep::InterpolationType"
            ]
        ],
        "RefereeGestureDetectionModule::Params": [
            [
                "bufferSize",
                "unsigned int"
            ],
            [
                "minDetectionRatio",
                "float"
            ],
            [
                "rules",
                "RefereeGestureDetectionModule::Params::Rule*"
            ]
        ],
        "KeyframeMotionRequest": [
            [
                "keyframeMotion",
                "KeyframeMotionRequest::KeyframeMotionID"
            ],
            [
                "mirror",
                "bool"
            ]
        ],
        "CirclePercept": [
            [
                "pos",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "cov",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "wasSeen",
                "bool"
            ]
        ],
        "EnumIndexedArray<bool,ArmContactModel::PushDirection,ArmContactModel::PushDirection_Info>": [
            [
                "forward",
                "bool"
            ],
            [
                "backward",
                "bool"
            ],
            [
                "left",
                "bool"
            ],
            [
                "right",
                "bool"
            ],
            [
                "none",
                "bool"
            ]
        ],
        "FieldLinesProviderModule::Params": [
            [
                "bigLineThreshold",
                "float"
            ],
            [
                "maxTimeOffset",
                "int"
            ],
            [
                "maxLineDeviationFromAssumedCenterCircle",
                "float"
            ],
            [
                "centerWeighting",
                "float"
            ]
        ],
        "Range<Angle>": [
            [
                "min",
                "Angle"
            ],
            [
                "max",
                "Angle"
            ]
        ],
        "WorldModelPrediction": [
            [
                "ballPosition",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "ballVelocity",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "timeWhenBallLastSeen",
                "unsigned int"
            ],
            [
                "ballIsPredictedByRule",
                "bool"
            ],
            [
                "robotPose",
                "Pose2f"
            ]
        ],
        "EnumIndexedArray<ArmMotionRequest::ArmRequest,Arms::Arm,Arms::Arm_Info>": [
            [
                "left",
                "ArmMotionRequest::ArmRequest"
            ],
            [
                "right",
                "ArmMotionRequest::ArmRequest"
            ]
        ],
        "GameControllerData": [
            [
                "packetNumber",
                "unsigned char"
            ],
            [
                "playersPerTeam",
                "unsigned char"
            ],
            [
                "competitionPhase",
                "unsigned char"
            ],
            [
                "competitionType",
                "unsigned char"
            ],
            [
                "gamePhase",
                "unsigned char"
            ],
            [
                "state",
                "unsigned char"
            ],
            [
                "setPlay",
                "unsigned char"
            ],
            [
                "firstHalf",
                "unsigned char"
            ],
            [
                "kickingTeam",
                "unsigned char"
            ],
            [
                "secsRemaining",
                "short"
            ],
            [
                "secondaryTime",
                "short"
            ],
            [
                "teams",
                "TeamInfo[2]"
            ],
            [
                "timeLastPacketReceived",
                "unsigned int"
            ],
            [
                "isTrueData",
                "bool"
            ]
        ],
        "EigenMatrixRow<float,2>": [
            [
                "elems",
                "float[2]"
            ]
        ],
        "NetworkParameters": [
            [
                "inputHeight",
                "unsigned int"
            ],
            [
                "inputWidth",
                "unsigned int"
            ],
            [
                "inputChannels",
                "unsigned int"
            ],
            [
                "outputHeight",
                "unsigned int"
            ],
            [
                "outputWidth",
                "unsigned int"
            ],
            [
                "outputAnchors",
                "unsigned int"
            ],
            [
                "paramsPerAnchor",
                "unsigned int"
            ],
            [
                "confidenceIndex",
                "int"
            ],
            [
                "yMidIndex",
                "int"
            ],
            [
                "xMidIndex",
                "int"
            ],
            [
                "heightIndex",
                "int"
            ],
            [
                "widthIndex",
                "int"
            ],
            [
                "anchors",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "sizeConversionFactor",
                "float"
            ]
        ],
        "HeadOrientation": [
            [
                "pan",
                "Angle"
            ],
            [
                "tilt",
                "Angle"
            ]
        ],
        "GuardGoalHeadControlImplSkill::Params": [
            [
                "lookAtGlobalThreshold",
                "int"
            ],
            [
                "maxLookActiveTime",
                "int"
            ],
            [
                "minLookAtBallTime",
                "int"
            ],
            [
                "ballIsFarHighThreshold",
                "float"
            ],
            [
                "ballIsFarLowThreshold",
                "float"
            ],
            [
                "approachingDistance",
                "float"
            ]
        ],
        "BodyContour": [
            [
                "lines",
                "BodyContour::Line*"
            ],
            [
                "cameraResolution",
                "Eigen::Matrix<int,2,1,0,2,1>"
            ]
        ],
        "Whistle": [
            [
                "confidenceOfLastWhistleDetection",
                "float"
            ],
            [
                "channelsUsedForWhistleDetection",
                "unsigned char"
            ],
            [
                "lastTimeWhistleDetected",
                "unsigned int"
            ]
        ],
        "SideInformationProviderModule::Params": [
            [
                "distanceUncertaintyOffset",
                "float"
            ],
            [
                "distanceUncertaintyFactor",
                "float"
            ],
            [
                "awayFromLineDistance",
                "float"
            ],
            [
                "forceOwnHalf",
                "bool"
            ],
            [
                "forceOpponentHalf",
                "bool"
            ]
        ],
        "CompressedColorScanLineRegionsVertical": [
            [
                "scanLines",
                "ColorScanLineRegionsVertical::ScanLine*"
            ],
            [
                "lowResStart",
                "unsigned int"
            ],
            [
                "lowResStep",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<FieldFeatureOverview::FieldFeatureStatus,FieldFeatureOverview::Feature,FieldFeatureOverview::Feature_Info>": [
            [
                "centerCircleWithLine",
                "FieldFeatureOverview::FieldFeatureStatus"
            ],
            [
                "penaltyMarkWithPenaltyAreaLine",
                "FieldFeatureOverview::FieldFeatureStatus"
            ]
        ],
        "KickKeyframe": [
            [
                "reduceSwingFootHeight",
                "float"
            ],
            [
                "increaseSwingHeightFactor",
                "float"
            ],
            [
                "useSlowSupportFootHeightAfterKickInterpolation",
                "bool"
            ],
            [
                "useSlowSwingFootHeightInterpolation",
                "float"
            ],
            [
                "overrideOldSwingFoot",
                "WalkKickStep::OverrideFoot"
            ],
            [
                "overrideOldSupportFoot",
                "WalkKickStep::OverrideFoot"
            ],
            [
                "numOfBalanceSteps",
                "int"
            ],
            [
                "useLastKeyframeForSupportFootXTranslation",
                "bool"
            ],
            [
                "keyframes",
                "KickKeyframePart*"
            ],
            [
                "jointOffsets",
                "WalkKickStep::LongKickParams*"
            ]
        ],
        "PathPlanner": [],
        "Teammate": [
            [
                "number",
                "int"
            ],
            [
                "isGoalkeeper",
                "bool"
            ],
            [
                "theRobotStatus",
                "RobotStatus"
            ],
            [
                "theRobotPose",
                "RobotPose"
            ],
            [
                "theBallModel",
                "BallModel"
            ],
            [
                "theFrameInfo",
                "FrameInfo"
            ],
            [
                "theBehaviorStatus",
                "BehaviorStatus"
            ],
            [
                "theWhistle",
                "Whistle"
            ],
            [
                "theStrategyStatus",
                "StrategyStatus"
            ]
        ],
        "BodyContourProviderModule::Params": [
            [
                "torso",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "shoulder",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "upperArm",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "lowerArm",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "lowerArm2",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "upperLeg1",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "upperLeg2",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ],
            [
                "foot",
                "Eigen::Matrix<float,3,1,0,3,1>*"
            ]
        ],
        "PlayBall::Parameters": [
            [
                "alwaysShoot",
                "bool"
            ],
            [
                "ignoreObstacles",
                "bool"
            ],
            [
                "shootThreshold",
                "float"
            ],
            [
                "passImprovement",
                "float"
            ],
            [
                "minPassDistance",
                "float"
            ],
            [
                "maxPassDistance",
                "float"
            ],
            [
                "maxFreeKickDistance",
                "float"
            ],
            [
                "maxGoalKickDistance",
                "float"
            ],
            [
                "minPenalty",
                "float"
            ],
            [
                "maxPenalty",
                "float"
            ],
            [
                "ballDistMinPenalty",
                "float"
            ],
            [
                "ballDistMaxPenalty",
                "float"
            ],
            [
                "minRating",
                "float"
            ],
            [
                "lookAhead",
                "bool"
            ],
            [
                "lookAheadTime",
                "int"
            ],
            [
                "sampleDistance",
                "float"
            ],
            [
                "sampleSteps",
                "Range<int>"
            ]
        ],
        "StealBallParameters": [
            [
                "stealBallTypeTooMuchRotationMinValue",
                "Angle"
            ],
            [
                "bonusForStealBallMinMaxAngle",
                "Angle"
            ],
            [
                "stealBallRange",
                "Range<Angle>"
            ],
            [
                "stealBallMinRobotRotation",
                "Angle"
            ],
            [
                "stealBallMinPositionRotation",
                "Angle"
            ],
            [
                "forwardStealBallOpponentPositionNormal",
                "Range<Angle>"
            ],
            [
                "forwardStealBallOpponentPositionMalus",
                "Angle"
            ]
        ],
        "GroundTruthWorldState::GroundTruthBall": [
            [
                "position",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "velocity",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "EnumIndexedArray<LibCheckProviderModule::Params::Reaction,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>": [
            [
                "motionRequest",
                "LibCheckProviderModule::Params::Reaction"
            ],
            [
                "headMotionRequest",
                "LibCheckProviderModule::Params::Reaction"
            ],
            [
                "calibrationFinished",
                "LibCheckProviderModule::Params::Reaction"
            ],
            [
                "passTarget",
                "LibCheckProviderModule::Params::Reaction"
            ]
        ],
        "DemoSearchForBallImplSkill::Params": [
            [
                "maxTurnSpeed",
                "Angle"
            ],
            [
                "maxTurnStep",
                "Angle"
            ],
            [
                "targetRotationDeviation",
                "Angle"
            ],
            [
                "maxHeadSideSearch",
                "int"
            ],
            [
                "maxHeadForwardSearch",
                "int"
            ],
            [
                "maxTurnDuration",
                "int"
            ],
            [
                "panAngle",
                "Angle"
            ],
            [
                "tiltAngle",
                "Angle"
            ]
        ],
        "SetupPoses": [
            [
                "poses",
                "SetupPoses::SetupPose*"
            ]
        ],
        "BalanceParameters": [
            [
                "gyroLowPassRatio",
                "float"
            ],
            [
                "gyroForwardBalanceFactor",
                "float"
            ],
            [
                "gyroBackwardBalanceFactor",
                "float"
            ],
            [
                "gyroSidewaysBalanceFactor",
                "float"
            ],
            [
                "gyroBalanceKneeBalanceFactor",
                "float"
            ],
            [
                "gyroBalanceKneeNegativeGyroAbort",
                "Angle"
            ],
            [
                "gyroForwardBalanceFactorHipPitch",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "slowdownTorsoOffset",
                "Angle"
            ],
            [
                "slowdownFactor",
                "float"
            ],
            [
                "minTorsoRotation",
                "Angle"
            ]
        ],
        "SoleRotationParameter": [
            [
                "minTorsoRotation",
                "Angle"
            ],
            [
                "maxTorsoRotation",
                "Angle"
            ],
            [
                "soleCompensationBackwardReduction",
                "float"
            ],
            [
                "soleCompensationSpeed",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ],
            [
                "maxRollAdjustment",
                "Angle"
            ],
            [
                "measuredErrorFactor",
                "float"
            ],
            [
                "reductionTimeFactor",
                "float"
            ],
            [
                "measuredErrorTimeScaling",
                "Range<float>"
            ],
            [
                "timeScaling",
                "Range<float>"
            ],
            [
                "timeScalingRoll",
                "Range<float>"
            ],
            [
                "sideSizeXRotationScaling",
                "Range<float>"
            ],
            [
                "tiltErrorDiffOffset",
                "Range<Angle>"
            ],
            [
                "tiltErrorDiffScaling",
                "float"
            ],
            [
                "gyroScaling",
                "Range<Angle>"
            ],
            [
                "torsoRange",
                "Range<Angle>"
            ],
            [
                "deltaRange",
                "Range<float>"
            ],
            [
                "maxStepRatioToStart",
                "Range<float>"
            ],
            [
                "minGyro",
                "Angle"
            ],
            [
                "minSideStepSize",
                "float"
            ],
            [
                "gyroScalingSecondStep",
                "Range<Angle>"
            ],
            [
                "deltaRangeSecondStep",
                "Range<float>"
            ]
        ],
        "FootBumperStateProviderModule::Params": [
            [
                "debug",
                "bool"
            ],
            [
                "contactThreshold",
                "float"
            ],
            [
                "malfunctionThreshold",
                "int"
            ],
            [
                "soundDelay",
                "unsigned int"
            ],
            [
                "distanceBetweenFootBumpers",
                "float"
            ],
            [
                "lowerShift",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "additionalLowerShift",
                "float"
            ],
            [
                "upperShift",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "Eigen::Matrix<Angle,1,3,0,1,3>": [
            [
                "x",
                "Angle"
            ],
            [
                "y",
                "Angle"
            ],
            [
                "z",
                "Angle"
            ]
        ],
        "ZweikampfImplSkill::Params": [
            [
                "searchParameters",
                "SearchParameters"
            ],
            [
                "duelRatings",
                "DuelRatings"
            ],
            [
                "duelTimings",
                "DuelTimings"
            ],
            [
                "obstacleHandling",
                "ObstacleHandling"
            ],
            [
                "stealBallParameters",
                "StealBallParameters"
            ],
            [
                "lastKickHysterese",
                "LastKickHysterese"
            ],
            [
                "smallerKickAnglePreference",
                "Angle"
            ],
            [
                "forwardStealPreferenceRange",
                "Angle"
            ],
            [
                "replaceNormalToLongKickGoalShot",
                "Angle"
            ],
            [
                "sectorWheelObstacleBallRadiusFactor",
                "float"
            ],
            [
                "allowPassAngle",
                "Range<Angle>"
            ],
            [
                "fieldBorderSafeDistance",
                "float"
            ],
            [
                "minForwardTurnRange",
                "float"
            ],
            [
                "sidewardsRotationCorrectionBonus",
                "Angle"
            ],
            [
                "ballPositionInterpolationRange",
                "Range<float>"
            ],
            [
                "lookActiveMinBallDistance",
                "float"
            ],
            [
                "replaceForwardWithLongGoalShot",
                "bool"
            ],
            [
                "allowedKicks",
                "KickInfo::KickType*"
            ]
        ],
        "CoordinateSystemProviderModule::Params": [
            [
                "cameraTimings",
                "EnumIndexedArray<CoordinateSystemProviderModule::CameraTiming,CameraInfo::Camera,CameraInfo::Camera_Info>"
            ]
        ],
        "EnumIndexedArray<JointPlayTranslation::JointPlayState,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "headPitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lShoulderPitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lShoulderRoll",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lElbowYaw",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lElbowRoll",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lWristYaw",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lHand",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rShoulderPitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rShoulderRoll",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rElbowYaw",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rElbowRoll",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rWristYaw",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rHand",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lHipYawPitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lHipRoll",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lHipPitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lKneePitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lAnklePitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "lAnkleRoll",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rHipYawPitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rHipRoll",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rHipPitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rKneePitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rAnklePitch",
                "JointPlayTranslation::JointPlayState"
            ],
            [
                "rAnkleRoll",
                "JointPlayTranslation::JointPlayState"
            ]
        ],
        "HeadAngleRequest": [
            [
                "pan",
                "Angle"
            ],
            [
                "tilt",
                "Angle"
            ],
            [
                "speed",
                "Angle"
            ],
            [
                "stopAndGoMode",
                "bool"
            ],
            [
                "disableClippingAndInterpolation",
                "bool"
            ]
        ],
        "ReplayRequest": [
            [
                "walkKickStep",
                "WalkKickStep"
            ],
            [
                "isWalkKickPhase",
                "bool"
            ],
            [
                "step",
                "Pose2f"
            ],
            [
                "delay",
                "float"
            ]
        ],
        "BallPerceptFilterModule::Params": [
            [
                "fieldBorderExclusionDistance",
                "float"
            ],
            [
                "robotBanRadius",
                "float"
            ],
            [
                "fieldFeatureTimeout",
                "int"
            ],
            [
                "farBallIgnoreTimeout",
                "int"
            ],
            [
                "farBallIgnoreDistance",
                "float"
            ],
            [
                "bufferedSeenBallTimeout",
                "int"
            ],
            [
                "bufferedBallTimeout",
                "int"
            ],
            [
                "requiredPerceptionCountNear",
                "unsigned int"
            ],
            [
                "requiredPerceptionCountFar",
                "unsigned int"
            ],
            [
                "requiredPerceptionDistanceNear",
                "float"
            ],
            [
                "requiredPerceptionDistanceFar",
                "float"
            ],
            [
                "beginningOfFar",
                "float"
            ],
            [
                "neededSeenBallsForAcceptingGuessedOne",
                "unsigned int"
            ],
            [
                "maximumAngleBetweenSeenAndGuessed",
                "Angle"
            ],
            [
                "maximumDistanceBetweenSeenAndGuessed",
                "float"
            ],
            [
                "timeSpanForAcceptingKickedGuessedBalls",
                "int"
            ],
            [
                "requiredNumberOfGuessBallsForKickDetection",
                "int"
            ],
            [
                "timeSpanForGuessedBallsMotionDetection",
                "int"
            ],
            [
                "requiredNumberOfGuessBallsForMotionDetection",
                "int"
            ],
            [
                "minimumVelocityForMotionDetection",
                "float"
            ],
            [
                "maxStandardDeviationMotionDetection",
                "float"
            ],
            [
                "disableBallInOtherHalfForTesting",
                "bool"
            ],
            [
                "toleranceForDisablingBallInOtherHalf",
                "float"
            ]
        ],
        "FootBumperState": [
            [
                "status",
                "FootBumperState::State[2]"
            ]
        ],
        "HandleBallAtOwnGoalPostImplSkill::Params": [
            [
                "radiusHandlingArea",
                "float"
            ],
            [
                "hysteresisMultiplierHandlingArea",
                "float"
            ],
            [
                "ballGoalPostTangentOffset",
                "float"
            ],
            [
                "robotGoalPostTangentOffset",
                "float"
            ],
            [
                "hysteresisDecisionPenalty",
                "float"
            ],
            [
                "availableKicks",
                "KickInfo::KickType*"
            ]
        ],
        "LibDemo": [
            [
                "isDemoActive",
                "bool"
            ],
            [
                "changeArmToWave",
                "bool"
            ],
            [
                "isOneVsOneDemoActive",
                "bool"
            ],
            [
                "isMiniFieldActive",
                "bool"
            ],
            [
                "demoGameState",
                "LibDemo::DemoGameState"
            ]
        ],
        "Eigen::Quaternion<float,0>": [
            [
                "x",
                "float"
            ],
            [
                "y",
                "float"
            ],
            [
                "z",
                "float"
            ],
            [
                "w",
                "float"
            ]
        ],
        "KeyframeBlock": [
            [
                "baseLimbStiffness",
                "int[5]"
            ],
            [
                "keyframes",
                "Keyframe*"
            ],
            [
                "interpolationType",
                "InterpolationType"
            ]
        ],
        "ObstaclesFieldPercept": [
            [
                "obstacles",
                "ObstaclesFieldPercept::Obstacle*"
            ]
        ],
        "ObstacleScan": [
            [
                "xOffsetInImage",
                "unsigned int"
            ],
            [
                "xStepInImage",
                "unsigned int"
            ],
            [
                "yLowerInImage",
                "int*"
            ],
            [
                "pointsOnField",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ]
        ],
        "BalanceOptionJoints": [
            [
                "jointY",
                "JointPair*"
            ],
            [
                "jointX",
                "JointPair*"
            ]
        ],
        "EnumIndexedArray<SE3WithCov,Limbs::Limb,Limbs::Limb_Info>": [
            [
                "neck",
                "SE3WithCov"
            ],
            [
                "head",
                "SE3WithCov"
            ],
            [
                "shoulderLeft",
                "SE3WithCov"
            ],
            [
                "bicepsLeft",
                "SE3WithCov"
            ],
            [
                "elbowLeft",
                "SE3WithCov"
            ],
            [
                "foreArmLeft",
                "SE3WithCov"
            ],
            [
                "wristLeft",
                "SE3WithCov"
            ],
            [
                "shoulderRight",
                "SE3WithCov"
            ],
            [
                "bicepsRight",
                "SE3WithCov"
            ],
            [
                "elbowRight",
                "SE3WithCov"
            ],
            [
                "foreArmRight",
                "SE3WithCov"
            ],
            [
                "wristRight",
                "SE3WithCov"
            ],
            [
                "pelvisLeft",
                "SE3WithCov"
            ],
            [
                "hipLeft",
                "SE3WithCov"
            ],
            [
                "thighLeft",
                "SE3WithCov"
            ],
            [
                "tibiaLeft",
                "SE3WithCov"
            ],
            [
                "ankleLeft",
                "SE3WithCov"
            ],
            [
                "footLeft",
                "SE3WithCov"
            ],
            [
                "pelvisRight",
                "SE3WithCov"
            ],
            [
                "hipRight",
                "SE3WithCov"
            ],
            [
                "thighRight",
                "SE3WithCov"
            ],
            [
                "tibiaRight",
                "SE3WithCov"
            ],
            [
                "ankleRight",
                "SE3WithCov"
            ],
            [
                "footRight",
                "SE3WithCov"
            ],
            [
                "torso",
                "SE3WithCov"
            ]
        ],
        "ArmKeyFrameRequest::Arm": [
            [
                "motion",
                "ArmKeyFrameRequest::ArmKeyFrameId"
            ],
            [
                "fast",
                "bool"
            ]
        ],
        "Next<CameraCalibration>": [
            [
                "next",
                "CameraCalibration"
            ],
            [
                "updated",
                "bool"
            ]
        ],
        "LowerFrameInfo": [
            [
                "time",
                "unsigned int"
            ]
        ],
        "Configuration::Thread": [
            [
                "name",
                "std::string"
            ],
            [
                "priority",
                "int"
            ],
            [
                "debugReceiverSize",
                "unsigned int"
            ],
            [
                "debugSenderSize",
                "unsigned int"
            ],
            [
                "debugSenderInfrastructureSize",
                "unsigned int"
            ],
            [
                "executionUnit",
                "std::string"
            ],
            [
                "representationProviders",
                "Configuration::RepresentationProvider*"
            ]
        ],
        "ExpectedGoals": [],
        "JointPlayTranslation": [
            [
                "jointOffset",
                "EnumIndexedArray<Range<Angle>,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "jointPlayState",
                "EnumIndexedArray<JointPlayTranslation::JointPlayState,Joints::Joint,Joints::Joint_Info>"
            ]
        ],
        "Tactic": [
            [
                "positions",
                "Tactic::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ]
        ],
        "MotionEngineModule::Params": [
            [
                "emergencySitDownDelay",
                "int"
            ],
            [
                "brokenJointAutomaticStiffness",
                "int"
            ],
            [
                "brokenJointsReducesStiffnessList",
                "Joints::Joint*"
            ],
            [
                "uprightAngle",
                "Eigen::Matrix<Angle,2,1,0,2,1>"
            ],
            [
                "uprightWarningTime",
                "int"
            ]
        ],
        "FieldDimensions::LinesTable::Circle": [
            [
                "center",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "radius",
                "float"
            ],
            [
                "numOfSegments",
                "int"
            ]
        ],
        "UpperFieldLineIntersections": [
            [
                "intersections",
                "FieldLineIntersections::Intersection*"
            ]
        ],
        "MassCalibration::MassInfo": [
            [
                "mass",
                "float"
            ],
            [
                "offset",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "RegisteredLandmark": [
            [
                "percept",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "covPercept",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "model",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "SetPlay::Position": [
            [
                "position",
                "Tactic::Position::Type"
            ],
            [
                "pose",
                "Pose2f"
            ],
            [
                "actions",
                "SetPlay::Action*"
            ]
        ],
        "Pose2f": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "CameraInfo": [
            [
                "camera",
                "CameraInfo::Camera"
            ],
            [
                "width",
                "int"
            ],
            [
                "height",
                "int"
            ],
            [
                "openingAngleWidth",
                "Angle"
            ],
            [
                "openingAngleHeight",
                "Angle"
            ],
            [
                "opticalCenter",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "GlobalTeammatesModel": [
            [
                "teammates",
                "GlobalTeammatesModel::TeammateEstimate*"
            ]
        ],
        "CameraProviderModule::Params": [
            [
                "maxWaitForImage",
                "unsigned int"
            ],
            [
                "resetDelay",
                "int"
            ]
        ],
        "FrictionLearnerModule::Params": [
            [
                "timeout",
                "int"
            ],
            [
                "minObservations",
                "unsigned int"
            ],
            [
                "offset",
                "unsigned int"
            ],
            [
                "acceptGuessedBalls",
                "bool"
            ]
        ],
        "CameraIntrinsics::Camera": [
            [
                "openingAngleWidth",
                "Angle"
            ],
            [
                "openingAngleHeight",
                "Angle"
            ],
            [
                "opticalCenter",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "GroundContactState": [
            [
                "contact",
                "bool"
            ]
        ],
        "FallDownState": [
            [
                "state",
                "FallDownState::State"
            ],
            [
                "direction",
                "FallDownState::Direction"
            ],
            [
                "odometryRotationOffset",
                "float"
            ]
        ],
        "Pose3f": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "Configuration::RepresentationProvider": [
            [
                "representation",
                "std::string"
            ],
            [
                "provider",
                "std::string"
            ]
        ],
        "LibWalk": [],
        "Geometry::Line": [
            [
                "base",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "direction",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "ColorRGBA": [
            [
                "r",
                "unsigned char"
            ],
            [
                "g",
                "unsigned char"
            ],
            [
                "b",
                "unsigned char"
            ],
            [
                "a",
                "unsigned char"
            ]
        ],
        "Eigen::Matrix<short,2,2,0,2,2>": [
            [
                "cols",
                "EigenMatrixRow<short,2>[2]"
            ]
        ],
        "GroundTruthOdometryData": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "EnumIndexedArray<JointPlay::JointState,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "JointPlay::JointState"
            ],
            [
                "headPitch",
                "JointPlay::JointState"
            ],
            [
                "lShoulderPitch",
                "JointPlay::JointState"
            ],
            [
                "lShoulderRoll",
                "JointPlay::JointState"
            ],
            [
                "lElbowYaw",
                "JointPlay::JointState"
            ],
            [
                "lElbowRoll",
                "JointPlay::JointState"
            ],
            [
                "lWristYaw",
                "JointPlay::JointState"
            ],
            [
                "lHand",
                "JointPlay::JointState"
            ],
            [
                "rShoulderPitch",
                "JointPlay::JointState"
            ],
            [
                "rShoulderRoll",
                "JointPlay::JointState"
            ],
            [
                "rElbowYaw",
                "JointPlay::JointState"
            ],
            [
                "rElbowRoll",
                "JointPlay::JointState"
            ],
            [
                "rWristYaw",
                "JointPlay::JointState"
            ],
            [
                "rHand",
                "JointPlay::JointState"
            ],
            [
                "lHipYawPitch",
                "JointPlay::JointState"
            ],
            [
                "lHipRoll",
                "JointPlay::JointState"
            ],
            [
                "lHipPitch",
                "JointPlay::JointState"
            ],
            [
                "lKneePitch",
                "JointPlay::JointState"
            ],
            [
                "lAnklePitch",
                "JointPlay::JointState"
            ],
            [
                "lAnkleRoll",
                "JointPlay::JointState"
            ],
            [
                "rHipYawPitch",
                "JointPlay::JointState"
            ],
            [
                "rHipRoll",
                "JointPlay::JointState"
            ],
            [
                "rHipPitch",
                "JointPlay::JointState"
            ],
            [
                "rKneePitch",
                "JointPlay::JointState"
            ],
            [
                "rAnklePitch",
                "JointPlay::JointState"
            ],
            [
                "rAnkleRoll",
                "JointPlay::JointState"
            ]
        ],
        "UpperObstaclesPerceptorData": [
            [
                "cameraInfo",
                "CameraInfo"
            ],
            [
                "cameraMatrix",
                "CameraMatrix"
            ],
            [
                "imageCoordinateSystem",
                "ImageCoordinateSystem"
            ],
            [
                "scanScores",
                "ObstaclesPerceptorData::ScanScore*"
            ],
            [
                "incompleteObstacles",
                "ObstaclesFieldPercept::Obstacle*"
            ]
        ],
        "StaticInitialPose": [
            [
                "isActive",
                "bool"
            ],
            [
                "jump",
                "bool"
            ],
            [
                "staticPoseOnField",
                "Pose2f"
            ]
        ],
        "UpperCameraMatrix": [
            [
                "rotation",
                "RotationMatrix"
            ],
            [
                "translation",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "covariance",
                "Eigen::Matrix<float,6,6,0,6,6>"
            ],
            [
                "isValid",
                "bool"
            ]
        ],
        "NaoQiImageInfo": [
            [
                "isCorrectImage",
                "bool"
            ]
        ],
        "ArmKeyFrameMotion::ArmKeyFrameState": [
            [
                "angles",
                "Angle[6]"
            ],
            [
                "stiffness",
                "int[6]"
            ],
            [
                "duration",
                "float"
            ],
            [
                "interpolation",
                "ArmKeyFrameMotion::ArmInterpolation"
            ]
        ],
        "GroundTruthBallModel": [
            [
                "lastPerception",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "estimate",
                "BallState"
            ],
            [
                "timeWhenLastSeen",
                "unsigned int"
            ],
            [
                "timeWhenDisappeared",
                "unsigned int"
            ],
            [
                "seenPercentage",
                "unsigned char"
            ],
            [
                "riskyMovingEstimate",
                "BallState"
            ],
            [
                "riskyMovingEstimateIsValid",
                "bool"
            ]
        ],
        "Image<unsigned char>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "Eigen::Matrix<float,3,1,0,3,1>": [
            [
                "x",
                "float"
            ],
            [
                "y",
                "float"
            ],
            [
                "z",
                "float"
            ]
        ],
        "IllegalAreas": [
            [
                "illegal",
                "unsigned int"
            ],
            [
                "anticipatedIllegal",
                "unsigned int"
            ],
            [
                "anticipatedTimestamp",
                "unsigned int"
            ]
        ],
        "EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>*,FieldDimensions::CornerClass,FieldDimensions::CornerClass_Info>": [
            [
                "xCorner",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "tCorner0",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "tCorner90",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "tCorner180",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "tCorner270",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "lCorner0",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "lCorner90",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "lCorner180",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ],
            [
                "lCorner270",
                "Eigen::Matrix<float,2,1,0,2,1>*"
            ]
        ],
        "MotionRequest::ObstacleAvoidance::PathSegment": [
            [
                "obstacle",
                "Geometry::Circle"
            ],
            [
                "clockwise",
                "bool"
            ]
        ],
        "NaoQiImageDetectorModule::Params": [
            [
                "startTime",
                "unsigned int"
            ],
            [
                "wrongImageTime",
                "int"
            ],
            [
                "valueRange",
                "Range<float>"
            ]
        ],
        "RobotModel": [
            [
                "limbs",
                "EnumIndexedArray<SE3WithCov,Limbs::Limb,Limbs::Limb_Info>"
            ],
            [
                "soleLeft",
                "SE3WithCov"
            ],
            [
                "soleRight",
                "SE3WithCov"
            ],
            [
                "centerOfMass",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ]
        ],
        "EigenMatrixRow<float,3>": [
            [
                "elems",
                "float[3]"
            ]
        ],
        "UpperCameraInfo": [
            [
                "camera",
                "CameraInfo::Camera"
            ],
            [
                "width",
                "int"
            ],
            [
                "height",
                "int"
            ],
            [
                "openingAngleWidth",
                "Angle"
            ],
            [
                "openingAngleHeight",
                "Angle"
            ],
            [
                "opticalCenter",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "ReceivedTeamMessages": [
            [
                "messages",
                "ReceivedTeamMessage*"
            ],
            [
                "unsynchronizedMessages",
                "unsigned int"
            ]
        ],
        "BlockImplSkill::Params": [
            [
                "distanceToTarget",
                "float"
            ],
            [
                "overrideArmsDistance",
                "float"
            ],
            [
                "ignoreObstaclesDistance",
                "float"
            ],
            [
                "halfRobotWidth",
                "float"
            ],
            [
                "angleDifferenceThreshold",
                "Angle"
            ]
        ],
        "FieldFeature::RobotPoseToFF": [
            [
                "pos1",
                "Pose2f"
            ],
            [
                "pos2",
                "Pose2f"
            ]
        ],
        "ReplayWalkRequestGenerator": [],
        "EmergencyStepParameters": [
            [
                "emergencyStepSize",
                "float"
            ],
            [
                "emergencyStepHeightFactor",
                "float"
            ],
            [
                "emergencyMaxGyroMean",
                "Angle"
            ],
            [
                "emergencyMaxGyroDeviation",
                "Angle"
            ],
            [
                "emergencyMaxZGyroDeviation",
                "Angle"
            ],
            [
                "emergencyAfterStepDuration",
                "int"
            ]
        ],
        "OtherOdometryData": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "Configuration": [
            [
                "defaultRepresentations",
                "std::string*"
            ],
            [
                "threads",
                "Configuration::Thread*"
            ]
        ],
        "KickInfo::Kick": [
            [
                "kickType",
                "KickInfo::KickType"
            ],
            [
                "rotationOffset",
                "Angle"
            ],
            [
                "ballOffset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "range",
                "Range<float>"
            ],
            [
                "ballVelocity",
                "Range<float>"
            ],
            [
                "exclusionRange",
                "Range<float>"
            ],
            [
                "executionTime",
                "unsigned int"
            ],
            [
                "postRotationOffset",
                "Angle"
            ],
            [
                "motion",
                "MotionPhase::Type"
            ],
            [
                "kickMotionType",
                "KickRequest::KickMotionID"
            ],
            [
                "walkKickType",
                "WalkKicks::Type"
            ],
            [
                "kickLeg",
                "Legs::Leg"
            ],
            [
                "mirror",
                "bool"
            ]
        ],
        "PerceptRegistrationProviderModule::Params": [
            [
                "goalFrameIsPerceivedAsLines",
                "bool"
            ],
            [
                "registerLinesOnCenterCircle",
                "bool"
            ],
            [
                "maxPenaltyMarkDeviation",
                "float"
            ],
            [
                "maxIntersectionDeviation",
                "float"
            ],
            [
                "lineAssociationCorridor",
                "float"
            ],
            [
                "globalPoseAssociationMaxDistanceDeviation",
                "float"
            ],
            [
                "globalPoseAssociationMaxAngularDeviation",
                "Angle"
            ],
            [
                "useIntersectionDirections",
                "bool"
            ]
        ],
        "SideInformation": [
            [
                "robotMustBeInOwnHalf",
                "bool"
            ],
            [
                "robotMustBeInOpponentHalf",
                "bool"
            ],
            [
                "largestXCoordinatePossible",
                "float"
            ]
        ],
        "ArmKeyFrameMotion::ArmAngles": [
            [
                "angles",
                "Angle[6]"
            ],
            [
                "stiffness",
                "int[6]"
            ]
        ],
        "Geometry::Rect": [
            [
                "a",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "b",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "EigenMatrixRow<short,2>": [
            [
                "elems",
                "short[2]"
            ]
        ],
        "UpperOptionalECImage": [
            [
                "image",
                "ECImage*"
            ]
        ],
        "LastKickHysterese": [
            [
                "kickLengthHysterese",
                "float"
            ],
            [
                "kickDirectionHysterese",
                "Angle"
            ]
        ],
        "MassCalibration": [
            [
                "masses",
                "EnumIndexedArray<MassCalibration::MassInfo,Limbs::Limb,Limbs::Limb_Info>"
            ]
        ],
        "FieldBall": [
            [
                "positionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "positionRelative",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "positionOnFieldClipped",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "positionRelativeClipped",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "endPositionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "endPositionRelative",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "teamPositionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "teamPositionRelative",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "teamEndPositionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "teamEndPositionRelative",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "interceptedEndPositionOnField",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "interceptedEndPositionRelative",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "interceptBall",
                "bool"
            ],
            [
                "timeSinceBallWasSeen",
                "int"
            ],
            [
                "timeSinceBallDisappeared",
                "int"
            ],
            [
                "teammatesBallIsValid",
                "bool"
            ],
            [
                "isRollingTowardsOpponentGoal",
                "bool"
            ],
            [
                "isRollingTowardsOwnGoal",
                "bool"
            ],
            [
                "isInsideOwnPenaltyArea",
                "bool"
            ],
            [
                "distanceToOwnPenaltyArea",
                "float"
            ],
            [
                "intersectionPositionWithOwnYAxis",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "intersectionPositionWithOwnXAxis",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "timeUntilIntersectsOwnYAxis",
                "float"
            ],
            [
                "timeUntilIntersectsOwnXAxis",
                "float"
            ],
            [
                "teammatesBallNewerThanOwnBall",
                "bool"
            ],
            [
                "ballPositionConsistentWithGameState",
                "bool"
            ],
            [
                "teamBallPositionConsistentWithGameState",
                "bool"
            ],
            [
                "lastInterceptBall",
                "unsigned int"
            ]
        ],
        "BHumanMessageOutputGenerator": [
            [
                "playerNumber",
                "unsigned char"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "referenceGameControllerPacketTimestampOffset",
                "unsigned short"
            ],
            [
                "referenceGameControllerPacketNumber",
                "unsigned char"
            ],
            [
                "compressedContainer",
                "unsigned char*"
            ],
            [
                "sentMessages",
                "unsigned int"
            ]
        ],
        "LibPosition": [],
        "EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>": [
            [
                "fl",
                "float"
            ],
            [
                "fr",
                "float"
            ],
            [
                "bl",
                "float"
            ],
            [
                "br",
                "float"
            ]
        ],
        "CameraSettings::Collection": [
            [
                "autoExposure",
                "bool"
            ],
            [
                "autoExposureBrightness",
                "int"
            ],
            [
                "exposure",
                "int"
            ],
            [
                "gain",
                "int"
            ],
            [
                "autoWhiteBalance",
                "bool"
            ],
            [
                "autoFocus",
                "bool"
            ],
            [
                "focus",
                "int"
            ],
            [
                "autoHue",
                "bool"
            ],
            [
                "hue",
                "int"
            ],
            [
                "saturation",
                "int"
            ],
            [
                "contrast",
                "int"
            ],
            [
                "sharpness",
                "int"
            ],
            [
                "redGain",
                "int"
            ],
            [
                "greenGain",
                "int"
            ],
            [
                "blueGain",
                "int"
            ]
        ],
        "BehaviorParameters": [
            [
                "keeperJumpingOn",
                "bool"
            ],
            [
                "penaltyStrikerWalkSpeed",
                "float"
            ],
            [
                "penaltyStrikerAngleToLeftPostOffset",
                "Angle"
            ],
            [
                "penaltyStrikerAngleToRightPostOffset",
                "Angle"
            ],
            [
                "penaltyStrikerUseObstacles",
                "bool"
            ],
            [
                "ballCatchMaxWalkDistance",
                "float"
            ],
            [
                "standRadius",
                "float"
            ],
            [
                "walkRadius",
                "float"
            ],
            [
                "genuflectRadius",
                "float"
            ],
            [
                "genuflectStandRadius",
                "float"
            ],
            [
                "jumpRadius",
                "float"
            ]
        ],
        "OwnPenaltyKick": [
            [
                "tactic",
                "Tactic::Type"
            ],
            [
                "positions",
                "SetPlay::Position*"
            ],
            [
                "priorityGroups",
                "Tactic::PriorityGroup*"
            ],
            [
                "startPosition",
                "Tactic::Position::Type"
            ],
            [
                "lowestRequiredPriority",
                "unsigned int"
            ]
        ],
        "KeyframeJointAngles": [
            [
                "head",
                "Angle[2]"
            ],
            [
                "positions",
                "EnumIndexedArray<Angle[6],KeyframeLimb,KeyframeLimb_Info>"
            ]
        ],
        "FootSupport": [
            [
                "support",
                "float"
            ],
            [
                "trustedSupport",
                "bool"
            ],
            [
                "switched",
                "bool"
            ],
            [
                "predictedSwitched",
                "bool"
            ],
            [
                "lastSwitch",
                "unsigned int"
            ]
        ],
        "RefereePercept": [
            [
                "gesture",
                "RefereePercept::Gesture"
            ]
        ],
        "KeyframeMotionGenerator": [
            [
                "ratio",
                "float"
            ],
            [
                "motion",
                "KeyframeMotionRequest::KeyframeMotionID"
            ]
        ],
        "JointCompensationParams": [
            [
                "jointDelta",
                "Joints::Joint"
            ],
            [
                "hipPitchDifferenceCompensation",
                "bool"
            ],
            [
                "range",
                "Range<Angle>"
            ],
            [
                "jointPairs",
                "JointPair*"
            ],
            [
                "predictJointDiff",
                "bool"
            ]
        ],
        "FootValues": [
            [
                "left",
                "float"
            ],
            [
                "right",
                "float"
            ]
        ],
        "KeyframeMotionEngineModule::Params": [
            [
                "maxTryCounter",
                "int"
            ],
            [
                "motorMalfunctionBreakUp",
                "bool"
            ],
            [
                "maxStiffnessDebugMode",
                "int"
            ],
            [
                "motions",
                "EnumIndexedArray<KeyframeMotionList,KeyframeMotionListID::KeyframeMotionListID,KeyframeMotionListID::KeyframeMotionListID_Info>"
            ],
            [
                "keyframeBlock",
                "EnumIndexedArray<KeyframeBlock,KeyframeMotionBlockID::KeyframeMotionBlockID,KeyframeMotionBlockID::KeyframeMotionBlockID_Info>"
            ],
            [
                "minJointCompensationReduceAngleDiff",
                "Angle"
            ],
            [
                "balanceOutParams",
                "BalanceOutParams"
            ],
            [
                "supportPolygonOffsets",
                "Eigen::Matrix<float,3,1,0,3,1>"
            ],
            [
                "safeFallParameters",
                "SafeFallParameters"
            ],
            [
                "safeUprightParameters",
                "DirectionValue"
            ]
        ],
        "StiffnessParameters": [
            [
                "walkStiffness",
                "int"
            ],
            [
                "pickedUpStiffness",
                "int"
            ]
        ],
        "ModuleGraphCreator::ExecutionValues::StringVector": [
            [
                "vector",
                "std::string*"
            ]
        ],
        "CoordinateSystemProviderModule::CameraTiming": [
            [
                "imageRecordingTime",
                "float"
            ],
            [
                "imageRecordingDelay",
                "float"
            ]
        ],
        "LibCheck": [],
        "Keyframe": [
            [
                "phase",
                "KeyframeMotionPhases::KeyframeMotionPhase"
            ],
            [
                "duration",
                "float"
            ],
            [
                "goalCom",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "setLastCom",
                "bool"
            ],
            [
                "forbidWaitBreak",
                "bool"
            ],
            [
                "interpolationType",
                "InterpolationType"
            ],
            [
                "jointCompensation",
                "JointCompensation*"
            ],
            [
                "waitConditions",
                "WaitCondition*"
            ],
            [
                "keyframeBranches",
                "KeyframeBlockBranch*"
            ],
            [
                "balanceWithJoints",
                "BalanceOptionJoints"
            ],
            [
                "singleMotorStiffnessChange",
                "StiffnessPair*"
            ],
            [
                "angles",
                "KeyframeJointAngles"
            ],
            [
                "robotPoses",
                "Keyframe3DPoseArray*"
            ],
            [
                "torsoAngleBreakUpEnd",
                "DirectionValue"
            ],
            [
                "torsoAngleBreakUpStart",
                "DirectionValue*"
            ]
        ],
        "PassEvaluationProviderModule::Params": [
            [
                "minValue",
                "float"
            ],
            [
                "opponentDistToTargetThreshold",
                "float"
            ],
            [
                "opponentDistToLineThreshold",
                "float"
            ],
            [
                "distancePenaltyThresholdPlaying",
                "float"
            ],
            [
                "distancePenaltyThresholdFreeKick",
                "float"
            ],
            [
                "distancePenaltyDeviation",
                "float"
            ],
            [
                "distToBoundaryThreshold",
                "float"
            ],
            [
                "opponentShiftToBall",
                "float"
            ],
            [
                "obstacleBlockingRadius",
                "float"
            ],
            [
                "cellSize",
                "float"
            ],
            [
                "goalPostShift",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "heatmapAlpha",
                "unsigned char"
            ],
            [
                "worstRatingColor",
                "ColorRGBA"
            ],
            [
                "bestRatingColor",
                "ColorRGBA"
            ]
        ],
        "JointPlayPair": [
            [
                "joint",
                "Joints::Joint"
            ],
            [
                "ref",
                "Angle"
            ],
            [
                "ratio",
                "float"
            ]
        ],
        "EnumIndexedArray<KickInfo::Kick,KickInfo::KickType,KickInfo::KickType_Info>": [
            [
                "forwardFastRight",
                "KickInfo::Kick"
            ],
            [
                "forwardFastLeft",
                "KickInfo::Kick"
            ],
            [
                "forwardFastRightPass",
                "KickInfo::Kick"
            ],
            [
                "forwardFastLeftPass",
                "KickInfo::Kick"
            ],
            [
                "forwardFastRightLong",
                "KickInfo::Kick"
            ],
            [
                "forwardFastLeftLong",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsRight",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsLeft",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsRightLong",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsLeftLong",
                "KickInfo::Kick"
            ],
            [
                "walkSidewardsRightFootToRight",
                "KickInfo::Kick"
            ],
            [
                "walkSidewardsLeftFootToLeft",
                "KickInfo::Kick"
            ],
            [
                "walkTurnRightFootToLeft",
                "KickInfo::Kick"
            ],
            [
                "walkTurnLeftFootToRight",
                "KickInfo::Kick"
            ],
            [
                "walkTurnRightFootToLeftShifted",
                "KickInfo::Kick"
            ],
            [
                "walkTurnLeftFootToRightShifted",
                "KickInfo::Kick"
            ],
            [
                "walkForwardStealBallLeft",
                "KickInfo::Kick"
            ],
            [
                "walkForwardStealBallRight",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsRightAlternative",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsLeftAlternative",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsRightVeryLong",
                "KickInfo::Kick"
            ],
            [
                "walkForwardsLeftVeryLong",
                "KickInfo::Kick"
            ],
            [
                "newKick",
                "KickInfo::Kick"
            ]
        ],
        "JointRequest": [
            [
                "angles",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "variance",
                "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>"
            ],
            [
                "timestamp",
                "unsigned int"
            ],
            [
                "stiffnessData",
                "StiffnessData"
            ]
        ],
        "Keypoints::Point": [
            [
                "position",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "valid",
                "bool"
            ]
        ],
        "ArmKeyFrameMotion": [
            [
                "id",
                "ArmKeyFrameRequest::ArmKeyFrameId"
            ],
            [
                "states",
                "ArmKeyFrameMotion::ArmKeyFrameState*"
            ]
        ],
        "FsrDataProviderModule::Params": [
            [
                "minPressure",
                "float"
            ],
            [
                "minPressurePercent",
                "float"
            ],
            [
                "maxPressure",
                "float"
            ],
            [
                "minPressureRange",
                "Range<float>"
            ],
            [
                "minPressureInterpolationValues",
                "Range<float>"
            ],
            [
                "numOfSupportSwitches",
                "int"
            ],
            [
                "maxTimeBetweenSupportSwitches",
                "float"
            ],
            [
                "minTimeBetweenSupportSwitches",
                "float"
            ],
            [
                "maxTimeLegNoPressureForCalibration",
                "float"
            ],
            [
                "highestPressureUpdateTime",
                "int"
            ],
            [
                "minSingleFSRPressureForPredictedSwitchFactor",
                "float"
            ],
            [
                "lowestPressure",
                "EnumIndexedArray<EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>,Legs::Leg,Legs::Leg_Info>"
            ],
            [
                "isCalibrated",
                "bool"
            ]
        ],
        "Image<float>": [
            [
                "width",
                "unsigned int"
            ],
            [
                "height",
                "unsigned int"
            ]
        ],
        "DeviationValues": [
            [
                "maxXDeviation",
                "Range<float>"
            ],
            [
                "maxYDeviation",
                "Range<float>"
            ],
            [
                "maxAngleDeviation",
                "Angle"
            ]
        ],
        "WhistleRecognizer::Signature": [
            [
                "name",
                "std::string"
            ],
            [
                "selfCorrelation",
                "float"
            ],
            [
                "spectrum",
                "Eigen::Matrix<double,2,1,0,2,1>*"
            ]
        ],
        "StaticInitialPoseProviderModule::Params": [
            [
                "isActive",
                "bool"
            ],
            [
                "loadVariation",
                "int"
            ],
            [
                "poseVariations",
                "PoseVariation*"
            ]
        ],
        "NaoProviderModule::Params": [
            [
                "timeChestButtonPressedUntilShutdown",
                "int"
            ],
            [
                "timeBetweenBatteryLevelUpdates",
                "int"
            ],
            [
                "timeBetweenCPUTemperatureUpdates",
                "int"
            ],
            [
                "retries",
                "unsigned int"
            ],
            [
                "retryDelay",
                "unsigned int"
            ],
            [
                "jointVariance",
                "Angle"
            ],
            [
                "gyroVariance",
                "Angle"
            ],
            [
                "accVariance",
                "float"
            ]
        ],
        "EnumIndexedArray<unsigned char,Joints::Joint,Joints::Joint_Info>": [
            [
                "headYaw",
                "unsigned char"
            ],
            [
                "headPitch",
                "unsigned char"
            ],
            [
                "lShoulderPitch",
                "unsigned char"
            ],
            [
                "lShoulderRoll",
                "unsigned char"
            ],
            [
                "lElbowYaw",
                "unsigned char"
            ],
            [
                "lElbowRoll",
                "unsigned char"
            ],
            [
                "lWristYaw",
                "unsigned char"
            ],
            [
                "lHand",
                "unsigned char"
            ],
            [
                "rShoulderPitch",
                "unsigned char"
            ],
            [
                "rShoulderRoll",
                "unsigned char"
            ],
            [
                "rElbowYaw",
                "unsigned char"
            ],
            [
                "rElbowRoll",
                "unsigned char"
            ],
            [
                "rWristYaw",
                "unsigned char"
            ],
            [
                "rHand",
                "unsigned char"
            ],
            [
                "lHipYawPitch",
                "unsigned char"
            ],
            [
                "lHipRoll",
                "unsigned char"
            ],
            [
                "lHipPitch",
                "unsigned char"
            ],
            [
                "lKneePitch",
                "unsigned char"
            ],
            [
                "lAnklePitch",
                "unsigned char"
            ],
            [
                "lAnkleRoll",
                "unsigned char"
            ],
            [
                "rHipYawPitch",
                "unsigned char"
            ],
            [
                "rHipRoll",
                "unsigned char"
            ],
            [
                "rHipPitch",
                "unsigned char"
            ],
            [
                "rKneePitch",
                "unsigned char"
            ],
            [
                "rAnklePitch",
                "unsigned char"
            ],
            [
                "rAnkleRoll",
                "unsigned char"
            ]
        ],
        "EnhancedKeyStates": [
            [
                "pressed",
                "EnumIndexedArray<bool,KeyStates::Key,KeyStates::Key_Info>"
            ],
            [
                "hitStreak",
                "EnumIndexedArray<unsigned int,KeyStates::Key,KeyStates::Key_Info>"
            ],
            [
                "pressedDuration",
                "EnumIndexedArray<unsigned int,KeyStates::Key,KeyStates::Key_Info>"
            ]
        ],
        "OdometryDataPreview": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "odometryChange",
                "Pose2f"
            ]
        ],
        "MotionOdometryData": [
            [
                "rotation",
                "Angle"
            ],
            [
                "translation",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ]
        ],
        "WalkKickEngineModule::Params": [
            [
                "playKickSounds",
                "bool"
            ],
            [
                "allowDiagonalKicks",
                "bool"
            ],
            [
                "maxTurnLeftFoot",
                "Range<Angle>"
            ],
            [
                "maxForward",
                "Range<float>"
            ],
            [
                "maxSide",
                "Range<float>"
            ],
            [
                "maxSpeed",
                "Pose2f"
            ],
            [
                "maxForwardAcceleration",
                "float"
            ],
            [
                "walkKicksWithRestrictedStart",
                "WalkKicks::Type*"
            ],
            [
                "restrictedYTranslationOfPreStep",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "sidewardsOuterForwardRestriction",
                "float"
            ],
            [
                "forwardLongFirstStepAnkleCompensationRange",
                "Range<float>"
            ],
            [
                "forwardLongFirstStepAnkleCompensationAngle",
                "Angle"
            ],
            [
                "forwardLongMaxStepSize",
                "float"
            ],
            [
                "forwardTurnPreciseMaxStepSize",
                "float"
            ],
            [
                "turnKickPreviousMaxXStepSize",
                "float"
            ],
            [
                "forwardStealVFeetAngle",
                "Angle"
            ],
            [
                "forwardStealWaitingKickPose",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "forwardStealVFeetAngleFactor",
                "float"
            ],
            [
                "forwardPreStepSkipMaxKickAngle",
                "Angle"
            ],
            [
                "forwardStealMinXAbortThreshold",
                "float"
            ],
            [
                "timeSinceBallLastSeenThreshold",
                "float"
            ],
            [
                "maxClipBeforeAbortForwardSteal",
                "Pose2f"
            ],
            [
                "forwardStealMaxPreviousYTranslation",
                "float"
            ],
            [
                "stepDuration",
                "float"
            ],
            [
                "walkKicksList",
                "EnumIndexedArray<WalkKickParameters,WalkKicks::Type,WalkKicks::Type_Info>"
            ]
        ],
        "MotionInfo": [
            [
                "executedPhase",
                "MotionPhase::Type"
            ],
            [
                "isMotionStable",
                "bool"
            ],
            [
                "speed",
                "Pose2f"
            ],
            [
                "isWalkPhaseInWalkKick",
                "bool"
            ],
            [
                "lastStandTimeStamp",
                "unsigned int"
            ],
            [
                "lastMotionPhaseStarted",
                "unsigned int"
            ],
            [
                "walkPhaseIsLeftPhase",
                "bool"
            ],
            [
                "lastKickTimestamp",
                "unsigned int"
            ],
            [
                "lastKickType",
                "KickInfo::KickType"
            ],
            [
                "getUpTryCounter",
                "unsigned int"
            ],
            [
                "executedKeyframeMotion",
                "KeyframeMotionRequest"
            ],
            [
                "odometryAtLastPhaseSwitch",
                "OdometryData"
            ],
            [
                "odometryRequestAtLastPhaseSwitch",
                "OdometryTranslationRequest"
            ]
        ],
        "WalkAtRelativeSpeedGenerator": [],
        "LowerImageCoordinateSystem": [
            [
                "rotation",
                "Eigen::Matrix<float,2,2,0,2,2>"
            ],
            [
                "origin",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "offset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "robotOffset",
                "Eigen::Matrix<float,2,1,0,2,1>"
            ],
            [
                "a",
                "float"
            ],
            [
                "b",
                "float"
            ]
        ],
        "AudioData": [
            [
                "channels",
                "unsigned int"
            ],
            [
                "sampleRate",
                "unsigned int"
            ],
            [
                "samples",
                "float*"
            ]
        ],
        "LibTeammatesProviderModule::Params": [
            [
                "outsideDistanceThreshold",
                "float"
            ],
            [
                "insideDistanceThreshold",
                "float"
            ]
        ],
        "Eigen::Matrix<float,2,2,0,2,2>": [
            [
                "cols",
                "EigenMatrixRow<float,2>[2]"
            ]
        ],
        "IMUCalibrationProviderModule::Params": [
            [
                "minStandStillTime",
                "int"
            ],
            [
                "waitTimeTillNewCalibrationAccepted",
                "int"
            ],
            [
                "minTimeBetweenCalibration",
                "int"
            ],
            [
                "isAutoCalibrationActive",
                "bool"
            ]
        ]
    },
    "dataClasses": {
        "UpperRobotCameraMatrix": "Class Type: UpperRobotCameraMatrix",
        "RobotStableStateProviderModule::Params": "Class Type: RobotStableStateProviderModule::Params",
        "EnumIndexedArray<Range<Angle>,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<Range<Angle>,Joints::Joint,Joints::Joint_Info>",
        "LowerCameraInfo": "Class Type: LowerCameraInfo",
        "LowerBodyContour": "Class Type: LowerBodyContour",
        "FieldLineIntersections": "Class Type: FieldLineIntersections",
        "IntersectionsPercept": "Class Type: IntersectionsPercept",
        "WalkToPointReadyImplSkill::Params": "Class Type: WalkToPointReadyImplSkill::Params",
        "UpperImageCoordinateSystem": "Class Type: UpperImageCoordinateSystem",
        "CameraCalibration": "Class Type: CameraCalibration",
        "BOPPerceptorModule::Params": "Class Type: BOPPerceptorModule::Params",
        "ObstaclesPerceptorData": "Class Type: ObstaclesPerceptorData",
        "EnumIndexedArray<DamageConfigurationBody::Side,Legs::Leg,Legs::Leg_Info>": "Class Type: EnumIndexedArray<DamageConfigurationBody::Side,Legs::Leg,Legs::Leg_Info>",
        "GameStateProviderModule::Params": "Class Type: GameStateProviderModule::Params",
        "PlayersDeeptectorFeatBOPLowerModule::Params": "Class Type: PlayersDeeptectorFeatBOPLowerModule::Params",
        "SkillBehaviorControlModule::Params": "Class Type: SkillBehaviorControlModule::Params",
        "OpponentFreeKick": "Class Type: OpponentFreeKick",
        "BallInGoal": "Class Type: BallInGoal",
        "PowerKickPair": "Class Type: PowerKickPair",
        "RefereeGestureDetectionModule::Params::Constraint": "Class Type: RefereeGestureDetectionModule::Params::Constraint",
        "CameraImage": "Class Type: CameraImage",
        "UpperPenaltyMarkPercept": "Class Type: UpperPenaltyMarkPercept",
        "PoseVariation": "Class Type: PoseVariation",
        "Range<unsigned char>": "Class Type: Range<unsigned char>",
        "PlayBallImplSkill::Params": "Class Type: PlayBallImplSkill::Params",
        "WhistleCompact": "Class Type: WhistleCompact",
        "FieldLines::Line": "Class Type: FieldLines::Line",
        "FollowUpMotionPair": "Class Type: FollowUpMotionPair",
        "ArmKeyFrameGenerator": "Class Type: ArmKeyFrameGenerator",
        "BHumanMessage": "Class Type: BHumanMessage",
        "FsrSensorData": "Class Type: FsrSensorData",
        "Keypoints": "Class Type: Keypoints",
        "EnumIndexedArray<CameraSettings::Collection,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<CameraSettings::Collection,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "FilteredBallPercepts": "Class Type: FilteredBallPercepts",
        "EnumIndexedArray<CameraIntrinsics::Camera,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<CameraIntrinsics::Camera,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "WalkModifier": "Class Type: WalkModifier",
        "KeyframeMotionParameters::BalancingParameter": "Class Type: KeyframeMotionParameters::BalancingParameter",
        "StiffnessSettings": "Class Type: StiffnessSettings",
        "RelativeFieldColors": "Class Type: RelativeFieldColors",
        "KeyframeMotionParameters::BalanceFactors": "Class Type: KeyframeMotionParameters::BalanceFactors",
        "BallPercept": "Class Type: BallPercept",
        "KeyframeEndRequest": "Class Type: KeyframeEndRequest",
        "KeyframeMotionParameters::PIDParameter": "Class Type: KeyframeMotionParameters::PIDParameter",
        "BHLoggingController::TeamList": "Class Type: BHLoggingController::TeamList",
        "WalkingEngineModule::Params": "Class Type: WalkingEngineModule::Params",
        "StaticJointPoses": "Class Type: StaticJointPoses",
        "Tactic::PriorityGroup": "Class Type: Tactic::PriorityGroup",
        "SelfLocalizationHypotheses::Hypothesis": "Class Type: SelfLocalizationHypotheses::Hypothesis",
        "RelativeFieldColorsParameters": "Class Type: RelativeFieldColorsParameters",
        "JointCalibration": "Class Type: JointCalibration",
        "OwnKickOff": "Class Type: OwnKickOff",
        "Condition": "Class Type: Condition",
        "StiffnessData": "Class Type: StiffnessData",
        "CameraSettings": "Class Type: CameraSettings",
        "ArmObstacleAvoidanceImplSkill::Params": "Class Type: ArmObstacleAvoidanceImplSkill::Params",
        "BallModel": "Class Type: BallModel",
        "PerceptRegistration": "Class Type: PerceptRegistration",
        "Image<PixelTypes::BGRAPixel>": "Class Type: Image<PixelTypes::BGRAPixel>",
        "ECImage": "Class Type: ECImage",
        "LowerBallPercept": "Class Type: LowerBallPercept",
        "LinesPercept": "Class Type: LinesPercept",
        "LinesPercept::Line": "Class Type: LinesPercept::Line",
        "Boundary<int>": "Class Type: Boundary<int>",
        "LibLookActive": "Class Type: LibLookActive",
        "CognitionFrameInfo": "Class Type: CognitionFrameInfo",
        "Eigen::Matrix<int,2,1,0,2,1>": "Class Type: Eigen::Matrix<int,2,1,0,2,1>",
        "AutoExposureWeightTable": "Class Type: AutoExposureWeightTable",
        "ScanGridProviderModule::Params": "Class Type: ScanGridProviderModule::Params",
        "TeamMessageHandler::Statistics": "Class Type: TeamMessageHandler::Statistics",
        "GroundContactDetectorModule::Params": "Class Type: GroundContactDetectorModule::Params",
        "TeamMessageHandler::Statistics::Counter": "Class Type: TeamMessageHandler::Statistics::Counter",
        "ColorScanLineRegionsVertical::ScanLine": "Class Type: ColorScanLineRegionsVertical::ScanLine",
        "KickOff": "Class Type: KickOff",
        "SafeFallParameters": "Class Type: SafeFallParameters",
        "DuelRatings": "Class Type: DuelRatings",
        "BallStateEstimatorModule::Params": "Class Type: BallStateEstimatorModule::Params",
        "EnumIndexedArray<KeyframeBlock,KeyframeMotionBlockID::KeyframeMotionBlockID,KeyframeMotionBlockID::KeyframeMotionBlockID_Info>": "Class Type: EnumIndexedArray<KeyframeBlock,KeyframeMotionBlockID::KeyframeMotionBlockID,KeyframeMotionBlockID::KeyframeMotionBlockID_Info>",
        "KickEngineParameters::JointOffset": "Class Type: KickEngineParameters::JointOffset",
        "DummyRepresentation": "Class Type: DummyRepresentation",
        "JointLimits": "Class Type: JointLimits",
        "SetupPoses::SetupPose": "Class Type: SetupPoses::SetupPose",
        "IllegalAreaProviderModule::Params": "Class Type: IllegalAreaProviderModule::Params",
        "Range<int>": "Class Type: Range<int>",
        "EnumIndexedArray<short,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<short,Joints::Joint,Joints::Joint_Info>",
        "KickGenerator": "Class Type: KickGenerator",
        "Forward::Parameters": "Class Type: Forward::Parameters",
        "CNSRegions": "Class Type: CNSRegions",
        "BalanceOutParams": "Class Type: BalanceOutParams",
        "RatingRole::Parameters": "Class Type: RatingRole::Parameters",
        "LowerFieldLineIntersections": "Class Type: LowerFieldLineIntersections",
        "EnumIndexedArray<ComInFootState,Legs::Leg,Legs::Leg_Info>": "Class Type: EnumIndexedArray<ComInFootState,Legs::Leg,Legs::Leg_Info>",
        "Eigen::Matrix<double,2,1,0,2,1>": "Class Type: Eigen::Matrix<double,2,1,0,2,1>",
        "FieldFeatureOverview": "Class Type: FieldFeatureOverview",
        "DamageConfigurationHead": "Class Type: DamageConfigurationHead",
        "Strategy::TacticState::Transition::Condition": "Class Type: Strategy::TacticState::Transition::Condition",
        "FootOffset": "Class Type: FootOffset",
        "RefereeGestureDetection::detectGesture() const::Checks": "Class Type: RefereeGestureDetection::detectGesture() const::Checks",
        "UpperCirclePercept": "Class Type: UpperCirclePercept",
        "UpperBodyContour": "Class Type: UpperBodyContour",
        "HeadMotionInfo": "Class Type: HeadMotionInfo",
        "JointAngles": "Class Type: JointAngles",
        "SearchParameters": "Class Type: SearchParameters",
        "ObstaclesImagePercept::Obstacle": "Class Type: ObstaclesImagePercept::Obstacle",
        "AlternativeRobotPoseHypothesis": "Class Type: AlternativeRobotPoseHypothesis",
        "SentTeamMessage": "Class Type: SentTeamMessage",
        "AutonomousCameraCalibrationImplSkill::Params": "Class Type: AutonomousCameraCalibrationImplSkill::Params",
        "SystemSensorData": "Class Type: SystemSensorData",
        "GyroStateProviderModule::Params": "Class Type: GyroStateProviderModule::Params",
        "LowerCameraStatus": "Class Type: LowerCameraStatus",
        "EnumIndexedArray<CameraInfo,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<CameraInfo,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "Image<PixelTypes::HuePixel>": "Class Type: Image<PixelTypes::HuePixel>",
        "LowerCirclePercept": "Class Type: LowerCirclePercept",
        "ObservePointImplSkill::Params": "Class Type: ObservePointImplSkill::Params",
        "DirectionValue": "Class Type: DirectionValue",
        "FootBumperState::State": "Class Type: FootBumperState::State",
        "LibLookActiveProviderModule::Params": "Class Type: LibLookActiveProviderModule::Params",
        "EnumIndexedArray<KeyframeMotionParameters::BalancingParameter,KeyframeMotionPhases::KeyframeMotionPhase,KeyframeMotionPhases::KeyframeMotionPhase_Info>": "Class Type: EnumIndexedArray<KeyframeMotionParameters::BalancingParameter,KeyframeMotionPhases::KeyframeMotionPhase,KeyframeMotionPhases::KeyframeMotionPhase_Info>",
        "GlobalOpponentsModel::OpponentEstimate": "Class Type: GlobalOpponentsModel::OpponentEstimate",
        "EigenMatrixRow<unsigned char,4>": "Class Type: EigenMatrixRow<unsigned char,4>",
        "Strategy::WeightedSetPlay<OwnPenaltyKick>": "Class Type: Strategy::WeightedSetPlay<OwnPenaltyKick>",
        "Strategy::TacticState": "Class Type: Strategy::TacticState",
        "DemoGoToBallAndKickImplSkill::Params": "Class Type: DemoGoToBallAndKickImplSkill::Params",
        "EnumIndexedArray<Angle[6],KeyframeLimb,KeyframeLimb_Info>": "Class Type: EnumIndexedArray<Angle[6],KeyframeLimb,KeyframeLimb_Info>",
        "SetPlay::Action": "Class Type: SetPlay::Action",
        "CalibrationControlImplSkill::Params": "Class Type: CalibrationControlImplSkill::Params",
        "PassEvaluation": "Class Type: PassEvaluation",
        "OptionalImageRequest": "Class Type: OptionalImageRequest",
        "Image<PixelTypes::RGBPixel>": "Class Type: Image<PixelTypes::RGBPixel>",
        "FieldDimensions::read(In&)::DimensionsOpt": "Class Type: FieldDimensions::read(In&)::DimensionsOpt",
        "WalkToPointImplSkill::Params": "Class Type: WalkToPointImplSkill::Params",
        "JointPlayAnalyserModule::Params": "Class Type: JointPlayAnalyserModule::Params",
        "LowerObstaclesPerceptorData": "Class Type: LowerObstaclesPerceptorData",
        "FieldBoundaryProviderModule::Params": "Class Type: FieldBoundaryProviderModule::Params",
        "Eigen::Matrix<float,1,3,0,1,3>": "Class Type: Eigen::Matrix<float,1,3,0,1,3>",
        "FrameInfo": "Class Type: FrameInfo",
        "FieldBoundary": "Class Type: FieldBoundary",
        "EnergySavingProviderModule::Params": "Class Type: EnergySavingProviderModule::Params",
        "ModuleGraphCreator::ExecutionValues": "Class Type: ModuleGraphCreator::ExecutionValues",
        "LinePerceptorModule::Params": "Class Type: LinePerceptorModule::Params",
        "WalkSpeedParams": "Class Type: WalkSpeedParams",
        "DemoTalkImplSkill::Params": "Class Type: DemoTalkImplSkill::Params",
        "ReplayWalkRequestProviderModule::Params": "Class Type: ReplayWalkRequestProviderModule::Params",
        "LibWalkProviderModule::Params": "Class Type: LibWalkProviderModule::Params",
        "StrategyBehaviorControlModule::Params": "Class Type: StrategyBehaviorControlModule::Params",
        "FieldDimensions::read(In&)::Dimensions::Field": "Class Type: FieldDimensions::read(In&)::Dimensions::Field",
        "WalkDelayParameters": "Class Type: WalkDelayParameters",
        "CalibrationRequest": "Class Type: CalibrationRequest",
        "BallContactInformation": "Class Type: BallContactInformation",
        "CNSImageProviderModule::Params": "Class Type: CNSImageProviderModule::Params",
        "PenaltyMarkPercept": "Class Type: PenaltyMarkPercept",
        "JerseyClassifier": "Class Type: JerseyClassifier",
        "InertialSensorData": "Class Type: InertialSensorData",
        "PenaltyMarkRegionsProviderModule::Params": "Class Type: PenaltyMarkRegionsProviderModule::Params",
        "Defender::Parameters": "Class Type: Defender::Parameters",
        "OptionalCameraImage": "Class Type: OptionalCameraImage",
        "Image<CNSResponse>": "Class Type: Image<CNSResponse>",
        "EnumIndexedArray<ArmKeyFrameRequest::Arm,Arms::Arm,Arms::Arm_Info>": "Class Type: EnumIndexedArray<ArmKeyFrameRequest::Arm,Arms::Arm,Arms::Arm_Info>",
        "EnumIndexedArray<MassCalibration::MassInfo,Limbs::Limb,Limbs::Limb_Info>": "Class Type: EnumIndexedArray<MassCalibration::MassInfo,Limbs::Limb,Limbs::Limb_Info>",
        "EnumIndexedArray<bool,Arms::Arm,Arms::Arm_Info>": "Class Type: EnumIndexedArray<bool,Arms::Arm,Arms::Arm_Info>",
        "ColorScanLineRegionsHorizontal": "Class Type: ColorScanLineRegionsHorizontal",
        "CalibrationGenerator": "Class Type: CalibrationGenerator",
        "ScanGrid::Line": "Class Type: ScanGrid::Line",
        "LowerIntersectionsPercept": "Class Type: LowerIntersectionsPercept",
        "BHLoggingController::Team": "Class Type: BHLoggingController::Team",
        "GyroState": "Class Type: GyroState",
        "WalkLearnerProviderModule::Params": "Class Type: WalkLearnerProviderModule::Params",
        "Keyframe3DPose": "Class Type: Keyframe3DPose",
        "BallDropInModel": "Class Type: BallDropInModel",
        "MotionRequest::ObstacleAvoidance": "Class Type: MotionRequest::ObstacleAvoidance",
        "BehaviorStatus": "Class Type: BehaviorStatus",
        "CameraCalibrationStatus": "Class Type: CameraCalibrationStatus",
        "JerseyClassifierProvider2020For2023Module::Params": "Class Type: JerseyClassifierProvider2020For2023Module::Params",
        "ArmKeyFrameRequest": "Class Type: ArmKeyFrameRequest",
        "WalkLearner": "Class Type: WalkLearner",
        "EnumIndexedArray<KeyframeMotionList,KeyframeMotionListID::KeyframeMotionListID,KeyframeMotionListID::KeyframeMotionListID_Info>": "Class Type: EnumIndexedArray<KeyframeMotionList,KeyframeMotionListID::KeyframeMotionListID,KeyframeMotionListID::KeyframeMotionListID_Info>",
        "OtherObstaclesPerceptorData": "Class Type: OtherObstaclesPerceptorData",
        "AudioProviderModule::Params": "Class Type: AudioProviderModule::Params",
        "KeyframeMotionParameters": "Class Type: KeyframeMotionParameters",
        "Keyframe3DPoseWrapper": "Class Type: Keyframe3DPoseWrapper",
        "FilteredBallPercept": "Class Type: FilteredBallPercept",
        "EnumIndexedArray<LEDRequest::LEDState,LEDRequest::LED,LEDRequest::LED_Info>": "Class Type: EnumIndexedArray<LEDRequest::LEDState,LEDRequest::LED,LEDRequest::LED_Info>",
        "CNSImage": "Class Type: CNSImage",
        "EnumIndexedArray<int,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>": "Class Type: EnumIndexedArray<int,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>",
        "LowerLinesPercept": "Class Type: LowerLinesPercept",
        "ArmContactModel": "Class Type: ArmContactModel",
        "EigenMatrixRow<float,6>": "Class Type: EigenMatrixRow<float,6>",
        "LEDHandlerModule::Params": "Class Type: LEDHandlerModule::Params",
        "ActivationGraph::Node": "Class Type: ActivationGraph::Node",
        "RobotDetectorModule::Params": "Class Type: RobotDetectorModule::Params",
        "WaitCondition": "Class Type: WaitCondition",
        "ConditionPair": "Class Type: ConditionPair",
        "WalkingEngineCommon": "Class Type: WalkingEngineCommon",
        "Strategy::WeightedSetPlay<OwnKickOff>": "Class Type: Strategy::WeightedSetPlay<OwnKickOff>",
        "ParabolicFootHeightParameters": "Class Type: ParabolicFootHeightParameters",
        "DebugRequest": "Class Type: DebugRequest",
        "Eigen::Matrix<unsigned char,4,4,1,4,4>": "Class Type: Eigen::Matrix<unsigned char,4,4,1,4,4>",
        "DynPoint": "Class Type: DynPoint",
        "CameraResolutionRequest": "Class Type: CameraResolutionRequest",
        "Odometer": "Class Type: Odometer",
        "ExtendedGameState": "Class Type: ExtendedGameState",
        "UpperBallPercept": "Class Type: UpperBallPercept",
        "WalkKickStep": "Class Type: WalkKickStep",
        "FieldDimensions::LinesTable::Line": "Class Type: FieldDimensions::LinesTable::Line",
        "FieldRating": "Class Type: FieldRating",
        "DuelTimings": "Class Type: DuelTimings",
        "Strategy::WeightedSetPlay<OpponentFreeKick>": "Class Type: Strategy::WeightedSetPlay<OpponentFreeKick>",
        "JointSensorData": "Class Type: JointSensorData",
        "GameState::Team": "Class Type: GameState::Team",
        "OtherFieldBoundary": "Class Type: OtherFieldBoundary",
        "CameraMatrix": "Class Type: CameraMatrix",
        "SkillRegistryBase::Configuration": "Class Type: SkillRegistryBase::Configuration",
        "GoToBallAndKickImplSkill::Params": "Class Type: GoToBallAndKickImplSkill::Params",
        "DribbleToGoalImplSkill::Params": "Class Type: DribbleToGoalImplSkill::Params",
        "SetPlay": "Class Type: SetPlay",
        "Image<PixelTypes::YUYVPixel>": "Class Type: Image<PixelTypes::YUYVPixel>",
        "UpperCameraStatus": "Class Type: UpperCameraStatus",
        "Obstacle": "Class Type: Obstacle",
        "ArmContactImplSkill::Params": "Class Type: ArmContactImplSkill::Params",
        "PenaltyKick": "Class Type: PenaltyKick",
        "ColorScanLineRegionsVertical": "Class Type: ColorScanLineRegionsVertical",
        "OpponentPenaltyKick": "Class Type: OpponentPenaltyKick",
        "Strategy::WeightedSetPlay<OpponentKickOff>": "Class Type: Strategy::WeightedSetPlay<OpponentKickOff>",
        "JointPlayTranslation::JointPlayState": "Class Type: JointPlayTranslation::JointPlayState",
        "InertialDataProviderModule::Params": "Class Type: InertialDataProviderModule::Params",
        "HeadMotionRequest": "Class Type: HeadMotionRequest",
        "BallSearchAreas": "Class Type: BallSearchAreas",
        "GameState": "Class Type: GameState",
        "JointPlayOffsetParameters": "Class Type: JointPlayOffsetParameters",
        "LegacyMeasurementCovarianceProviderModule::Params": "Class Type: LegacyMeasurementCovarianceProviderModule::Params",
        "ExtendedGameStateProviderModule::Params": "Class Type: ExtendedGameStateProviderModule::Params",
        "IMUCalibration": "Class Type: IMUCalibration",
        "FieldLines": "Class Type: FieldLines",
        "Range<float>": "Class Type: Range<float>",
        "Eigen::Matrix<Angle,3,1,0,3,1>": "Class Type: Eigen::Matrix<Angle,3,1,0,3,1>",
        "SpeedRegulatorParams": "Class Type: SpeedRegulatorParams",
        "RotationMatrix": "Class Type: RotationMatrix",
        "GoaliePose": "Class Type: GoaliePose",
        "SE3WithCov": "Class Type: SE3WithCov",
        "FreeKick::Condition": "Class Type: FreeKick::Condition",
        "DelayKickParams": "Class Type: DelayKickParams",
        "StiffnessPair": "Class Type: StiffnessPair",
        "GroundTruthWorldState::GroundTruthPlayer": "Class Type: GroundTruthWorldState::GroundTruthPlayer",
        "AlternativeRobotPoseProviderModule::Params": "Class Type: AlternativeRobotPoseProviderModule::Params",
        "CenterCircleWithLinePerceptorModule::Params": "Class Type: CenterCircleWithLinePerceptorModule::Params",
        "ECImageProviderModule::Params": "Class Type: ECImageProviderModule::Params",
        "MeasurementCovariance": "Class Type: MeasurementCovariance",
        "ObstacleModelProviderModule::Params": "Class Type: ObstacleModelProviderModule::Params",
        "CNSBallSpotsProviderModule::Params": "Class Type: CNSBallSpotsProviderModule::Params",
        "Keyframe3DPoseArray": "Class Type: Keyframe3DPoseArray",
        "GoToBallAndDribbleImplSkill::Params": "Class Type: GoToBallAndDribbleImplSkill::Params",
        "InterceptBallProviderModule::Params": "Class Type: InterceptBallProviderModule::Params",
        "SkillRequest": "Class Type: SkillRequest",
        "BallPerceptorModule::Params": "Class Type: BallPerceptorModule::Params",
        "EnumIndexedArray<bool,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<bool,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "KeypointsProviderModule::Params": "Class Type: KeypointsProviderModule::Params",
        "TeammatesBallModel": "Class Type: TeammatesBallModel",
        "ArmContactModelProviderModule::Params": "Class Type: ArmContactModelProviderModule::Params",
        "HeadTarget": "Class Type: HeadTarget",
        "Boundary<float>": "Class Type: Boundary<float>",
        "OracledWorldModelProviderModule::Params": "Class Type: OracledWorldModelProviderModule::Params",
        "WalkToBallEngineModule::Params": "Class Type: WalkToBallEngineModule::Params",
        "EnumIndexedArray<SolePressureInfo,Legs::Leg,Legs::Leg_Info>": "Class Type: EnumIndexedArray<SolePressureInfo,Legs::Leg,Legs::Leg_Info>",
        "SectorWheel::Sector": "Class Type: SectorWheel::Sector",
        "TeamData": "Class Type: TeamData",
        "Phase": "Class Type: Phase",
        "KeyStates": "Class Type: KeyStates",
        "PenaltyMarkWithPenaltyAreaLinePerceptorModule::Params": "Class Type: PenaltyMarkWithPenaltyAreaLinePerceptorModule::Params",
        "PassToTeammateImplSkill::Params": "Class Type: PassToTeammateImplSkill::Params",
        "CameraMatrixProvider::ModelPoints": "Class Type: CameraMatrixProvider::ModelPoints",
        "DamageConfigurationBody": "Class Type: DamageConfigurationBody",
        "Image<Sobel::SobelPixel>": "Class Type: Image<Sobel::SobelPixel>",
        "EnumIndexedArray<float,Legs::Leg,Legs::Leg_Info>": "Class Type: EnumIndexedArray<float,Legs::Leg,Legs::Leg_Info>",
        "FsrData": "Class Type: FsrData",
        "ArmMotionInfo": "Class Type: ArmMotionInfo",
        "GetUpGenerator": "Class Type: GetUpGenerator",
        "TeammatesBallModelProviderModule::Params": "Class Type: TeammatesBallModelProviderModule::Params",
        "RobotPose": "Class Type: RobotPose",
        "JointPlay::JointState": "Class Type: JointPlay::JointState",
        "RobotCameraMatrix": "Class Type: RobotCameraMatrix",
        "JointCompensation": "Class Type: JointCompensation",
        "GameControllerDataProviderModule::Params": "Class Type: GameControllerDataProviderModule::Params",
        "WalkStepData": "Class Type: WalkStepData",
        "Agent": "Class Type: Agent",
        "EnumIndexedArray<int,RefereePercept::Gesture,RefereePercept::Gesture_Info>": "Class Type: EnumIndexedArray<int,RefereePercept::Gesture,RefereePercept::Gesture_Info>",
        "FieldBallProviderModule::Params": "Class Type: FieldBallProviderModule::Params",
        "InterceptBallGenerator": "Class Type: InterceptBallGenerator",
        "JointPlayData": "Class Type: JointPlayData",
        "FallGenerator": "Class Type: FallGenerator",
        "MotionGenerator": "Class Type: MotionGenerator",
        "ArmParameters": "Class Type: ArmParameters",
        "ObstaclesFieldPercept::Obstacle": "Class Type: ObstaclesFieldPercept::Obstacle",
        "Strategy::TacticState::Transition": "Class Type: Strategy::TacticState::Transition",
        "Eigen::Matrix<float,6,6,0,6,6>": "Class Type: Eigen::Matrix<float,6,6,0,6,6>",
        "BallSearchAreas::Cell": "Class Type: BallSearchAreas::Cell",
        "UpperObstaclesFieldPercept": "Class Type: UpperObstaclesFieldPercept",
        "Strategy::WeightedSetPlay<OwnFreeKick>": "Class Type: Strategy::WeightedSetPlay<OwnFreeKick>",
        "HeadMotionEngineModule::Params": "Class Type: HeadMotionEngineModule::Params",
        "Strategy": "Class Type: Strategy",
        "ScanGrid": "Class Type: ScanGrid",
        "RegisteredLine": "Class Type: RegisteredLine",
        "KinematicParameters": "Class Type: KinematicParameters",
        "GoaliePoseProviderModule::Params": "Class Type: GoaliePoseProviderModule::Params",
        "Settings": "Class Type: Settings",
        "DamageConfigurationBody::Side": "Class Type: DamageConfigurationBody::Side",
        "BallState": "Class Type: BallState",
        "SimpleFieldDimensions": "Class Type: SimpleFieldDimensions",
        "ReceivedTeamMessage": "Class Type: ReceivedTeamMessage",
        "WalkPhaseData": "Class Type: WalkPhaseData",
        "StrategyStatus": "Class Type: StrategyStatus",
        "MarkImplSkill::Params": "Class Type: MarkImplSkill::Params",
        "MotionRequest": "Class Type: MotionRequest",
        "LowerRobotCameraMatrix": "Class Type: LowerRobotCameraMatrix",
        "WalkGenerator": "Class Type: WalkGenerator",
        "Tactic::Position": "Class Type: Tactic::Position",
        "PenaltyMarkWithPenaltyAreaLine": "Class Type: PenaltyMarkWithPenaltyAreaLine",
        "DirectKickOffImplSkill::Params": "Class Type: DirectKickOffImplSkill::Params",
        "ModuleGraphCreator::ExecutionValues::ModuleRequired": "Class Type: ModuleGraphCreator::ExecutionValues::ModuleRequired",
        "DebugImage": "Class Type: DebugImage",
        "CenterCircleWithLine": "Class Type: CenterCircleWithLine",
        "SpecialGenerator": "Class Type: SpecialGenerator",
        "StandGenerator": "Class Type: StandGenerator",
        "DribbleEngineModule::Params": "Class Type: DribbleEngineModule::Params",
        "KeyframeMotionList": "Class Type: KeyframeMotionList",
        "ExpectedGoalsProviderModule::Params": "Class Type: ExpectedGoalsProviderModule::Params",
        "JointFailureParams": "Class Type: JointFailureParams",
        "WalkToBallGenerator": "Class Type: WalkToBallGenerator",
        "WalkStepAdjustmentParams": "Class Type: WalkStepAdjustmentParams",
        "GroundTruthRobotPose": "Class Type: GroundTruthRobotPose",
        "ConfiguratedParameters": "Class Type: ConfiguratedParameters",
        "KickEngineParameters::ArmBalancing": "Class Type: KickEngineParameters::ArmBalancing",
        "EnergySaving": "Class Type: EnergySaving",
        "LowerPenaltyMarkPercept": "Class Type: LowerPenaltyMarkPercept",
        "FieldDimensions::read(In&)::Dimensions::Goal": "Class Type: FieldDimensions::read(In&)::Dimensions::Goal",
        "EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<int,Joints::Joint,Joints::Joint_Info>",
        "PointAtEngineModule::Params": "Class Type: PointAtEngineModule::Params",
        "JointPlay": "Class Type: JointPlay",
        "Logger::RepresentationsPerThread": "Class Type: Logger::RepresentationsPerThread",
        "EnumIndexedArray<Keypoints::Point,Keypoints::Keypoint,Keypoints::Keypoint_Info>": "Class Type: EnumIndexedArray<Keypoints::Point,Keypoints::Keypoint,Keypoints::Keypoint_Info>",
        "KickEngineModule::Params": "Class Type: KickEngineModule::Params",
        "IntersectionsProviderModule::Params": "Class Type: IntersectionsProviderModule::Params",
        "GlobalTeammatesModel::TeammateEstimate": "Class Type: GlobalTeammatesModel::TeammateEstimate",
        "ScanLineRegion": "Class Type: ScanLineRegion",
        "DribbleGenerator": "Class Type: DribbleGenerator",
        "StepSizeParameters": "Class Type: StepSizeParameters",
        "DiveGenerator": "Class Type: DiveGenerator",
        "KeyframeBlockBranch": "Class Type: KeyframeBlockBranch",
        "WalkToBallAndKickEngineModule::Params": "Class Type: WalkToBallAndKickEngineModule::Params",
        "BallSpecification": "Class Type: BallSpecification",
        "EnumIndexedArray<EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>,Legs::Leg,Legs::Leg_Info>": "Class Type: EnumIndexedArray<EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>,Legs::Leg,Legs::Leg_Info>",
        "InterceptBallProviderDBHCModule::Params": "Class Type: InterceptBallProviderDBHCModule::Params",
        "GlobalOpponentsTrackerModule::Params": "Class Type: GlobalOpponentsTrackerModule::Params",
        "RegisteredAbsolutePoseMeasurement": "Class Type: RegisteredAbsolutePoseMeasurement",
        "SideStabilizeParameters": "Class Type: SideStabilizeParameters",
        "RobotHealthProviderModule::Params": "Class Type: RobotHealthProviderModule::Params",
        "GlobalOpponentsModel": "Class Type: GlobalOpponentsModel",
        "ImageCoordinateSystem": "Class Type: ImageCoordinateSystem",
        "EnumIndexedArray<JointSensorData::TemperatureStatus,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<JointSensorData::TemperatureStatus,Joints::Joint,Joints::Joint_Info>",
        "WhistleRecognizerModule::Params": "Class Type: WhistleRecognizerModule::Params",
        "EnumIndexedArray<CameraResolutionRequest::Resolutions,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<CameraResolutionRequest::Resolutions,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "FallDownStateProviderModule::Params": "Class Type: FallDownStateProviderModule::Params",
        "OdometerProviderModule::Params": "Class Type: OdometerProviderModule::Params",
        "Midfielder::Parameters": "Class Type: Midfielder::Parameters",
        "HeadLimits": "Class Type: HeadLimits",
        "Image<bool>": "Class Type: Image<bool>",
        "KeyStateEnhancerModule::Params": "Class Type: KeyStateEnhancerModule::Params",
        "BallContactChecker": "Class Type: BallContactChecker",
        "SampleConfigurationRequest": "Class Type: SampleConfigurationRequest",
        "Image<unsigned short>": "Class Type: Image<unsigned short>",
        "HeadMotionGenerator": "Class Type: HeadMotionGenerator",
        "BallSpots": "Class Type: BallSpots",
        "SelfLocalizationHypotheses": "Class Type: SelfLocalizationHypotheses",
        "UpperLinesPercept": "Class Type: UpperLinesPercept",
        "FieldFeature": "Class Type: FieldFeature",
        "EnumIndexedArray<Eigen::Matrix<unsigned char,4,4,1,4,4>,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<Eigen::Matrix<unsigned char,4,4,1,4,4>,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "RobotStatus": "Class Type: RobotStatus",
        "LowerFieldLines": "Class Type: LowerFieldLines",
        "JointPair": "Class Type: JointPair",
        "JointPlayProviderModule::Params": "Class Type: JointPlayProviderModule::Params",
        "EnumIndexedArray<bool,KeyStates::Key,KeyStates::Key_Info>": "Class Type: EnumIndexedArray<bool,KeyStates::Key,KeyStates::Key_Info>",
        "WalkToPointObstacleImplSkill::Params": "Class Type: WalkToPointObstacleImplSkill::Params",
        "UpperFieldBoundary": "Class Type: UpperFieldBoundary",
        "BallDropInLocatorModule::Params": "Class Type: BallDropInLocatorModule::Params",
        "BallSpotsProviderModule::Params": "Class Type: BallSpotsProviderModule::Params",
        "KickKeyframePart": "Class Type: KickKeyframePart",
        "FieldLineIntersections::Intersection": "Class Type: FieldLineIntersections::Intersection",
        "WalkToPoseGenerator": "Class Type: WalkToPoseGenerator",
        "UpperOdometryData": "Class Type: UpperOdometryData",
        "SolePressureInfo": "Class Type: SolePressureInfo",
        "CameraStatus": "Class Type: CameraStatus",
        "EnumIndexedArray<Keyframe3DPoseWrapper,KeyframeLimb,KeyframeLimb_Info>": "Class Type: EnumIndexedArray<Keyframe3DPoseWrapper,KeyframeLimb,KeyframeLimb_Info>",
        "ObstaclesImagePercept": "Class Type: ObstaclesImagePercept",
        "Eigen::Matrix<float,3,3,0,3,3>": "Class Type: Eigen::Matrix<float,3,3,0,3,3>",
        "Geometry::Circle": "Class Type: Geometry::Circle",
        "OdometryTranslationRequest": "Class Type: OdometryTranslationRequest",
        "ObstacleModel": "Class Type: ObstacleModel",
        "Eigen::Matrix<float,2,1,0,2,1>": "Class Type: Eigen::Matrix<float,2,1,0,2,1>",
        "Strategy::WeightedSetPlay<OpponentPenaltyKick>": "Class Type: Strategy::WeightedSetPlay<OpponentPenaltyKick>",
        "UpperFrameInfo": "Class Type: UpperFrameInfo",
        "Image<PixelTypes::Edge2Pixel>": "Class Type: Image<PixelTypes::Edge2Pixel>",
        "RefereeSignal": "Class Type: RefereeSignal",
        "OpponentKickOff": "Class Type: OpponentKickOff",
        "BallContactCheckerProviderModule::Params": "Class Type: BallContactCheckerProviderModule::Params",
        "ArmContactModel::ArmContact": "Class Type: ArmContactModel::ArmContact",
        "JPEGImage": "Class Type: JPEGImage",
        "PenaltyMarkPerceptorModule::Params": "Class Type: PenaltyMarkPerceptorModule::Params",
        "WalkKickVariant": "Class Type: WalkKickVariant",
        "FallEngineModule::Params": "Class Type: FallEngineModule::Params",
        "ArmKeyFrameEngineModule::Params": "Class Type: ArmKeyFrameEngineModule::Params",
        "GroundTruthWorldState": "Class Type: GroundTruthWorldState",
        "IntersectionsPercept::Intersection": "Class Type: IntersectionsPercept::Intersection",
        "BallRegions": "Class Type: BallRegions",
        "FilteredCurrent": "Class Type: FilteredCurrent",
        "WalkPotentialFieldImplSkill::Params": "Class Type: WalkPotentialFieldImplSkill::Params",
        "MotionRobotHealth": "Class Type: MotionRobotHealth",
        "InertialData": "Class Type: InertialData",
        "WalkAtAbsoluteSpeedGenerator": "Class Type: WalkAtAbsoluteSpeedGenerator",
        "RobotPoseCompact": "Class Type: RobotPoseCompact",
        "GlobalTeammatesTrackerModule::Params": "Class Type: GlobalTeammatesTrackerModule::Params",
        "SkillRegistryBase::Configuration::SkillImplementation": "Class Type: SkillRegistryBase::Configuration::SkillImplementation",
        "Eigen::Matrix<Angle,2,1,0,2,1>": "Class Type: Eigen::Matrix<Angle,2,1,0,2,1>",
        "TeamMessage": "Class Type: TeamMessage",
        "FreeKick": "Class Type: FreeKick",
        "WalkKickGenerator": "Class Type: WalkKickGenerator",
        "PenaltyMarkRegions": "Class Type: PenaltyMarkRegions",
        "GyroOffsetProviderModule::Params": "Class Type: GyroOffsetProviderModule::Params",
        "FootSupportProviderModule::Params": "Class Type: FootSupportProviderModule::Params",
        "RecentWhistle": "Class Type: RecentWhistle",
        "LowerOptionalECImage": "Class Type: LowerOptionalECImage",
        "ColorScanLineRegionsHorizontal::ScanLine": "Class Type: ColorScanLineRegionsHorizontal::ScanLine",
        "Eigen::Matrix<float,4,1,0,4,1>": "Class Type: Eigen::Matrix<float,4,1,0,4,1>",
        "SetupPosesProviderModule::Params": "Class Type: SetupPosesProviderModule::Params",
        "RefereeGestureDetectionModule::Params::Rule": "Class Type: RefereeGestureDetectionModule::Params::Rule",
        "UpperIntersectionsPercept": "Class Type: UpperIntersectionsPercept",
        "OwnFreeKick": "Class Type: OwnFreeKick",
        "JointPlayTranslationProviderModule::Params": "Class Type: JointPlayTranslationProviderModule::Params",
        "HeadControlImplSkill::Params": "Class Type: HeadControlImplSkill::Params",
        "CNSRegionsProviderModule::Params": "Class Type: CNSRegionsProviderModule::Params",
        "LowerOdometryData": "Class Type: LowerOdometryData",
        "ImageRegions": "Class Type: ImageRegions",
        "FieldRatingProviderModule::Params": "Class Type: FieldRatingProviderModule::Params",
        "TeamInfo": "Class Type: TeamInfo",
        "JointAnglePredictorModule::Params": "Class Type: JointAnglePredictorModule::Params",
        "LEDRequest": "Class Type: LEDRequest",
        "RobotDimensions": "Class Type: RobotDimensions",
        "KickAtGoalImplSkill::Params": "Class Type: KickAtGoalImplSkill::Params",
        "ComInFootState": "Class Type: ComInFootState",
        "FilteredCurrentProviderModule::Params": "Class Type: FilteredCurrentProviderModule::Params",
        "CommonSpeedParameters": "Class Type: CommonSpeedParameters",
        "NoParameters": "Class Type: NoParameters",
        "KickInfo": "Class Type: KickInfo",
        "OdometryData": "Class Type: OdometryData",
        "PenaltyStrikerGoToBallAndKickImplSkill::Params": "Class Type: PenaltyStrikerGoToBallAndKickImplSkill::Params",
        "AutoExposureWeightTableProviderModule::Params": "Class Type: AutoExposureWeightTableProviderModule::Params",
        "ScanLineRegionizerModule::Params": "Class Type: ScanLineRegionizerModule::Params",
        "PathPlannerProviderModule::Params": "Class Type: PathPlannerProviderModule::Params",
        "WalkingEngineOutput": "Class Type: WalkingEngineOutput",
        "WalkToPoseEngineModule::Params": "Class Type: WalkToPoseEngineModule::Params",
        "ObstacleHandling": "Class Type: ObstacleHandling",
        "ManualHeadMotionProviderModule::Params": "Class Type: ManualHeadMotionProviderModule::Params",
        "BallSearchAreasProviderModule::Params": "Class Type: BallSearchAreasProviderModule::Params",
        "TorsoMatrix": "Class Type: TorsoMatrix",
        "EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>",
        "FieldDimensions": "Class Type: FieldDimensions",
        "OdometryDataPreviewProviderModule::Params": "Class Type: OdometryDataPreviewProviderModule::Params",
        "BallInGoalTrackerModule::Params": "Class Type: BallInGoalTrackerModule::Params",
        "Image<PixelTypes::YUVPixel>": "Class Type: Image<PixelTypes::YUVPixel>",
        "KickRequest": "Class Type: KickRequest",
        "ObstaclesPerceptorData::ScanScore": "Class Type: ObstaclesPerceptorData::ScanScore",
        "RobotStableState": "Class Type: RobotStableState",
        "WalkingEngine": "Class Type: WalkingEngine",
        "RobotInfo": "Class Type: RobotInfo",
        "BodyContour::Line": "Class Type: BodyContour::Line",
        "RefereeGestureDetectionNNModule::Params": "Class Type: RefereeGestureDetectionNNModule::Params",
        "OracledPerceptsProviderModule::Params": "Class Type: OracledPerceptsProviderModule::Params",
        "EnumIndexedArray<Angle,JointAnglePred::Joint,JointAnglePred::Joint_Info>": "Class Type: EnumIndexedArray<Angle,JointAnglePred::Joint,JointAnglePred::Joint_Info>",
        "LowerObstaclesFieldPercept": "Class Type: LowerObstaclesFieldPercept",
        "GyroOffset": "Class Type: GyroOffset",
        "ActivationGraph": "Class Type: ActivationGraph",
        "CameraIntrinsics": "Class Type: CameraIntrinsics",
        "SelfLocatorModule::Params": "Class Type: SelfLocatorModule::Params",
        "ArmMotionRequest": "Class Type: ArmMotionRequest",
        "KickEngineParameters::BoostAngle": "Class Type: KickEngineParameters::BoostAngle",
        "LowerFieldBoundary": "Class Type: LowerFieldBoundary",
        "UpperFieldLines": "Class Type: UpperFieldLines",
        "JointAnglePred": "Class Type: JointAnglePred",
        "EnumIndexedArray<float,RefereePercept::Gesture,RefereePercept::Gesture_Info>": "Class Type: EnumIndexedArray<float,RefereePercept::Gesture,RefereePercept::Gesture_Info>",
        "LibDemoProviderModule::Params": "Class Type: LibDemoProviderModule::Params",
        "EnumIndexedArray<CoordinateSystemProviderModule::CameraTiming,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<CoordinateSystemProviderModule::CameraTiming,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "FieldDimensions::read(In&)::Dimensions": "Class Type: FieldDimensions::read(In&)::Dimensions",
        "TeamMessageHandlerModule::Params": "Class Type: TeamMessageHandlerModule::Params",
        "EnumIndexedArray<WalkKickParameters,WalkKicks::Type,WalkKicks::Type_Info>": "Class Type: EnumIndexedArray<WalkKickParameters,WalkKicks::Type,WalkKicks::Type_Info>",
        "RobotHealth": "Class Type: RobotHealth",
        "EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>": "Class Type: EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>",
        "WalkKickStep::LongKickParams": "Class Type: WalkKickStep::LongKickParams",
        "EnumIndexedArray<Eigen::Matrix<Angle,3,1,0,3,1>,CameraInfo::Camera,CameraInfo::Camera_Info>": "Class Type: EnumIndexedArray<Eigen::Matrix<Angle,3,1,0,3,1>,CameraInfo::Camera,CameraInfo::Camera_Info>",
        "ColorScanLineRegionsVerticalClipped": "Class Type: ColorScanLineRegionsVerticalClipped",
        "Logger": "Class Type: Logger",
        "AutomaticCameraCalibratorModule::Params": "Class Type: AutomaticCameraCalibratorModule::Params",
        "DummyRepresentationOnlineBallFriction": "Class Type: DummyRepresentationOnlineBallFriction",
        "WalkKickParameters": "Class Type: WalkKickParameters",
        "LibTeammates": "Class Type: LibTeammates",
        "FieldFeatureOverview::FieldFeatureStatus": "Class Type: FieldFeatureOverview::FieldFeatureStatus",
        "KickEngineParameters": "Class Type: KickEngineParameters",
        "SegmentedObstacleImage": "Class Type: SegmentedObstacleImage",
        "EnumIndexedArray<unsigned int,KeyStates::Key,KeyStates::Key_Info>": "Class Type: EnumIndexedArray<unsigned int,KeyStates::Key,KeyStates::Key_Info>",
        "RefereeGestureDetection::update(RefereePercept&)::Helper": "Class Type: RefereeGestureDetection::update(RefereePercept&)::Helper",
        "OptionalECImage": "Class Type: OptionalECImage",
        "EnumIndexedArray<EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>,StaticJointPoses::StaticJointPoseName,StaticJointPoses::StaticJointPoseName_Info>": "Class Type: EnumIndexedArray<EnumIndexedArray<Angle,Joints::Joint,Joints::Joint_Info>,StaticJointPoses::StaticJointPoseName,StaticJointPoses::StaticJointPoseName_Info>",
        "Range<unsigned int>": "Class Type: Range<unsigned int>",
        "WalkToBallAndKickGenerator": "Class Type: WalkToBallAndKickGenerator",
        "PointAtGenerator": "Class Type: PointAtGenerator",
        "PotentialValue": "Class Type: PotentialValue",
        "FieldDimensions::read(In&)::DimensionsOpt::Field": "Class Type: FieldDimensions::read(In&)::DimensionsOpt::Field",
        "GoToBallHeadControlImplSkill::Params": "Class Type: GoToBallHeadControlImplSkill::Params",
        "LowerCameraMatrix": "Class Type: LowerCameraMatrix",
        "LibCheckProviderModule::Params": "Class Type: LibCheckProviderModule::Params",
        "Eigen::AngleAxis<float>": "Class Type: Eigen::AngleAxis<float>",
        "WalkKickStep::StepKeyframe": "Class Type: WalkKickStep::StepKeyframe",
        "RefereeGestureDetectionModule::Params": "Class Type: RefereeGestureDetectionModule::Params",
        "KeyframeMotionRequest": "Class Type: KeyframeMotionRequest",
        "CirclePercept": "Class Type: CirclePercept",
        "EnumIndexedArray<bool,ArmContactModel::PushDirection,ArmContactModel::PushDirection_Info>": "Class Type: EnumIndexedArray<bool,ArmContactModel::PushDirection,ArmContactModel::PushDirection_Info>",
        "FieldLinesProviderModule::Params": "Class Type: FieldLinesProviderModule::Params",
        "Range<Angle>": "Class Type: Range<Angle>",
        "WorldModelPrediction": "Class Type: WorldModelPrediction",
        "EnumIndexedArray<ArmMotionRequest::ArmRequest,Arms::Arm,Arms::Arm_Info>": "Class Type: EnumIndexedArray<ArmMotionRequest::ArmRequest,Arms::Arm,Arms::Arm_Info>",
        "GameControllerData": "Class Type: GameControllerData",
        "EigenMatrixRow<float,2>": "Class Type: EigenMatrixRow<float,2>",
        "NetworkParameters": "Class Type: NetworkParameters",
        "HeadOrientation": "Class Type: HeadOrientation",
        "GuardGoalHeadControlImplSkill::Params": "Class Type: GuardGoalHeadControlImplSkill::Params",
        "BodyContour": "Class Type: BodyContour",
        "Whistle": "Class Type: Whistle",
        "SideInformationProviderModule::Params": "Class Type: SideInformationProviderModule::Params",
        "CompressedColorScanLineRegionsVertical": "Class Type: CompressedColorScanLineRegionsVertical",
        "EnumIndexedArray<FieldFeatureOverview::FieldFeatureStatus,FieldFeatureOverview::Feature,FieldFeatureOverview::Feature_Info>": "Class Type: EnumIndexedArray<FieldFeatureOverview::FieldFeatureStatus,FieldFeatureOverview::Feature,FieldFeatureOverview::Feature_Info>",
        "KickKeyframe": "Class Type: KickKeyframe",
        "PathPlanner": "Class Type: PathPlanner",
        "Teammate": "Class Type: Teammate",
        "BodyContourProviderModule::Params": "Class Type: BodyContourProviderModule::Params",
        "PlayBall::Parameters": "Class Type: PlayBall::Parameters",
        "StealBallParameters": "Class Type: StealBallParameters",
        "GroundTruthWorldState::GroundTruthBall": "Class Type: GroundTruthWorldState::GroundTruthBall",
        "EnumIndexedArray<LibCheckProviderModule::Params::Reaction,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>": "Class Type: EnumIndexedArray<LibCheckProviderModule::Params::Reaction,LibCheck::CheckedOutput,LibCheck::CheckedOutput_Info>",
        "DemoSearchForBallImplSkill::Params": "Class Type: DemoSearchForBallImplSkill::Params",
        "SetupPoses": "Class Type: SetupPoses",
        "BalanceParameters": "Class Type: BalanceParameters",
        "SoleRotationParameter": "Class Type: SoleRotationParameter",
        "FootBumperStateProviderModule::Params": "Class Type: FootBumperStateProviderModule::Params",
        "Eigen::Matrix<Angle,1,3,0,1,3>": "Class Type: Eigen::Matrix<Angle,1,3,0,1,3>",
        "ZweikampfImplSkill::Params": "Class Type: ZweikampfImplSkill::Params",
        "CoordinateSystemProviderModule::Params": "Class Type: CoordinateSystemProviderModule::Params",
        "EnumIndexedArray<JointPlayTranslation::JointPlayState,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<JointPlayTranslation::JointPlayState,Joints::Joint,Joints::Joint_Info>",
        "HeadAngleRequest": "Class Type: HeadAngleRequest",
        "ReplayRequest": "Class Type: ReplayRequest",
        "BallPerceptFilterModule::Params": "Class Type: BallPerceptFilterModule::Params",
        "FootBumperState": "Class Type: FootBumperState",
        "HandleBallAtOwnGoalPostImplSkill::Params": "Class Type: HandleBallAtOwnGoalPostImplSkill::Params",
        "LibDemo": "Class Type: LibDemo",
        "Eigen::Quaternion<float,0>": "Class Type: Eigen::Quaternion<float,0>",
        "KeyframeBlock": "Class Type: KeyframeBlock",
        "ObstaclesFieldPercept": "Class Type: ObstaclesFieldPercept",
        "ObstacleScan": "Class Type: ObstacleScan",
        "BalanceOptionJoints": "Class Type: BalanceOptionJoints",
        "EnumIndexedArray<SE3WithCov,Limbs::Limb,Limbs::Limb_Info>": "Class Type: EnumIndexedArray<SE3WithCov,Limbs::Limb,Limbs::Limb_Info>",
        "ArmKeyFrameRequest::Arm": "Class Type: ArmKeyFrameRequest::Arm",
        "Next<CameraCalibration>": "Class Type: Next<CameraCalibration>",
        "LowerFrameInfo": "Class Type: LowerFrameInfo",
        "Configuration::Thread": "Class Type: Configuration::Thread",
        "ExpectedGoals": "Class Type: ExpectedGoals",
        "JointPlayTranslation": "Class Type: JointPlayTranslation",
        "Tactic": "Class Type: Tactic",
        "MotionEngineModule::Params": "Class Type: MotionEngineModule::Params",
        "FieldDimensions::LinesTable::Circle": "Class Type: FieldDimensions::LinesTable::Circle",
        "UpperFieldLineIntersections": "Class Type: UpperFieldLineIntersections",
        "MassCalibration::MassInfo": "Class Type: MassCalibration::MassInfo",
        "RegisteredLandmark": "Class Type: RegisteredLandmark",
        "SetPlay::Position": "Class Type: SetPlay::Position",
        "Pose2f": "Class Type: Pose2f",
        "CameraInfo": "Class Type: CameraInfo",
        "GlobalTeammatesModel": "Class Type: GlobalTeammatesModel",
        "CameraProviderModule::Params": "Class Type: CameraProviderModule::Params",
        "FrictionLearnerModule::Params": "Class Type: FrictionLearnerModule::Params",
        "CameraIntrinsics::Camera": "Class Type: CameraIntrinsics::Camera",
        "GroundContactState": "Class Type: GroundContactState",
        "FallDownState": "Class Type: FallDownState",
        "Pose3f": "Class Type: Pose3f",
        "Configuration::RepresentationProvider": "Class Type: Configuration::RepresentationProvider",
        "LibWalk": "Class Type: LibWalk",
        "Geometry::Line": "Class Type: Geometry::Line",
        "ColorRGBA": "Class Type: ColorRGBA",
        "Eigen::Matrix<short,2,2,0,2,2>": "Class Type: Eigen::Matrix<short,2,2,0,2,2>",
        "GroundTruthOdometryData": "Class Type: GroundTruthOdometryData",
        "EnumIndexedArray<JointPlay::JointState,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<JointPlay::JointState,Joints::Joint,Joints::Joint_Info>",
        "UpperObstaclesPerceptorData": "Class Type: UpperObstaclesPerceptorData",
        "StaticInitialPose": "Class Type: StaticInitialPose",
        "UpperCameraMatrix": "Class Type: UpperCameraMatrix",
        "NaoQiImageInfo": "Class Type: NaoQiImageInfo",
        "ArmKeyFrameMotion::ArmKeyFrameState": "Class Type: ArmKeyFrameMotion::ArmKeyFrameState",
        "GroundTruthBallModel": "Class Type: GroundTruthBallModel",
        "Image<unsigned char>": "Class Type: Image<unsigned char>",
        "Eigen::Matrix<float,3,1,0,3,1>": "Class Type: Eigen::Matrix<float,3,1,0,3,1>",
        "IllegalAreas": "Class Type: IllegalAreas",
        "EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>*,FieldDimensions::CornerClass,FieldDimensions::CornerClass_Info>": "Class Type: EnumIndexedArray<Eigen::Matrix<float,2,1,0,2,1>*,FieldDimensions::CornerClass,FieldDimensions::CornerClass_Info>",
        "MotionRequest::ObstacleAvoidance::PathSegment": "Class Type: MotionRequest::ObstacleAvoidance::PathSegment",
        "NaoQiImageDetectorModule::Params": "Class Type: NaoQiImageDetectorModule::Params",
        "RobotModel": "Class Type: RobotModel",
        "EigenMatrixRow<float,3>": "Class Type: EigenMatrixRow<float,3>",
        "UpperCameraInfo": "Class Type: UpperCameraInfo",
        "ReceivedTeamMessages": "Class Type: ReceivedTeamMessages",
        "BlockImplSkill::Params": "Class Type: BlockImplSkill::Params",
        "FieldFeature::RobotPoseToFF": "Class Type: FieldFeature::RobotPoseToFF",
        "ReplayWalkRequestGenerator": "Class Type: ReplayWalkRequestGenerator",
        "EmergencyStepParameters": "Class Type: EmergencyStepParameters",
        "OtherOdometryData": "Class Type: OtherOdometryData",
        "Configuration": "Class Type: Configuration",
        "KickInfo::Kick": "Class Type: KickInfo::Kick",
        "PerceptRegistrationProviderModule::Params": "Class Type: PerceptRegistrationProviderModule::Params",
        "SideInformation": "Class Type: SideInformation",
        "ArmKeyFrameMotion::ArmAngles": "Class Type: ArmKeyFrameMotion::ArmAngles",
        "Geometry::Rect": "Class Type: Geometry::Rect",
        "EigenMatrixRow<short,2>": "Class Type: EigenMatrixRow<short,2>",
        "UpperOptionalECImage": "Class Type: UpperOptionalECImage",
        "LastKickHysterese": "Class Type: LastKickHysterese",
        "MassCalibration": "Class Type: MassCalibration",
        "FieldBall": "Class Type: FieldBall",
        "BHumanMessageOutputGenerator": "Class Type: BHumanMessageOutputGenerator",
        "LibPosition": "Class Type: LibPosition",
        "EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>": "Class Type: EnumIndexedArray<float,FsrSensors::FsrSensor,FsrSensors::FsrSensor_Info>",
        "CameraSettings::Collection": "Class Type: CameraSettings::Collection",
        "BehaviorParameters": "Class Type: BehaviorParameters",
        "OwnPenaltyKick": "Class Type: OwnPenaltyKick",
        "KeyframeJointAngles": "Class Type: KeyframeJointAngles",
        "FootSupport": "Class Type: FootSupport",
        "RefereePercept": "Class Type: RefereePercept",
        "KeyframeMotionGenerator": "Class Type: KeyframeMotionGenerator",
        "JointCompensationParams": "Class Type: JointCompensationParams",
        "FootValues": "Class Type: FootValues",
        "KeyframeMotionEngineModule::Params": "Class Type: KeyframeMotionEngineModule::Params",
        "StiffnessParameters": "Class Type: StiffnessParameters",
        "ModuleGraphCreator::ExecutionValues::StringVector": "Class Type: ModuleGraphCreator::ExecutionValues::StringVector",
        "CoordinateSystemProviderModule::CameraTiming": "Class Type: CoordinateSystemProviderModule::CameraTiming",
        "LibCheck": "Class Type: LibCheck",
        "Keyframe": "Class Type: Keyframe",
        "PassEvaluationProviderModule::Params": "Class Type: PassEvaluationProviderModule::Params",
        "JointPlayPair": "Class Type: JointPlayPair",
        "EnumIndexedArray<KickInfo::Kick,KickInfo::KickType,KickInfo::KickType_Info>": "Class Type: EnumIndexedArray<KickInfo::Kick,KickInfo::KickType,KickInfo::KickType_Info>",
        "JointRequest": "Class Type: JointRequest",
        "Keypoints::Point": "Class Type: Keypoints::Point",
        "ArmKeyFrameMotion": "Class Type: ArmKeyFrameMotion",
        "FsrDataProviderModule::Params": "Class Type: FsrDataProviderModule::Params",
        "Image<float>": "Class Type: Image<float>",
        "DeviationValues": "Class Type: DeviationValues",
        "WhistleRecognizer::Signature": "Class Type: WhistleRecognizer::Signature",
        "StaticInitialPoseProviderModule::Params": "Class Type: StaticInitialPoseProviderModule::Params",
        "NaoProviderModule::Params": "Class Type: NaoProviderModule::Params",
        "EnumIndexedArray<unsigned char,Joints::Joint,Joints::Joint_Info>": "Class Type: EnumIndexedArray<unsigned char,Joints::Joint,Joints::Joint_Info>",
        "EnhancedKeyStates": "Class Type: EnhancedKeyStates",
        "OdometryDataPreview": "Class Type: OdometryDataPreview",
        "MotionOdometryData": "Class Type: MotionOdometryData",
        "WalkKickEngineModule::Params": "Class Type: WalkKickEngineModule::Params",
        "MotionInfo": "Class Type: MotionInfo",
        "WalkAtRelativeSpeedGenerator": "Class Type: WalkAtRelativeSpeedGenerator",
        "LowerImageCoordinateSystem": "Class Type: LowerImageCoordinateSystem",
        "AudioData": "Class Type: AudioData",
        "LibTeammatesProviderModule::Params": "Class Type: LibTeammatesProviderModule::Params",
        "Eigen::Matrix<float,2,2,0,2,2>": "Class Type: Eigen::Matrix<float,2,2,0,2,2>",
        "IMUCalibrationProviderModule::Params": "Class Type: IMUCalibrationProviderModule::Params",
        "FrameBegin": "Class Type: FrameBegin",
        "FrameFinished": "Class Type: FrameFinished"
    },
    "enumDescriptions": {
        "Joints::Joint": [
            "headYaw",
            "headPitch",
            "lShoulderPitch",
            "lShoulderRoll",
            "lElbowYaw",
            "lElbowRoll",
            "lWristYaw",
            "lHand",
            "rShoulderPitch",
            "rShoulderRoll",
            "rElbowYaw",
            "rElbowRoll",
            "rWristYaw",
            "rHand",
            "lHipYawPitch",
            "lHipRoll",
            "lHipPitch",
            "lKneePitch",
            "lAnklePitch",
            "lAnkleRoll",
            "rHipYawPitch",
            "rHipRoll",
            "rHipPitch",
            "rKneePitch",
            "rAnklePitch",
            "rAnkleRoll"
        ],
        "Limbs::Limb": [
            "neck",
            "head",
            "shoulderLeft",
            "bicepsLeft",
            "elbowLeft",
            "foreArmLeft",
            "wristLeft",
            "shoulderRight",
            "bicepsRight",
            "elbowRight",
            "foreArmRight",
            "wristRight",
            "pelvisLeft",
            "hipLeft",
            "thighLeft",
            "tibiaLeft",
            "ankleLeft",
            "footLeft",
            "pelvisRight",
            "hipRight",
            "thighRight",
            "tibiaRight",
            "ankleRight",
            "footRight",
            "torso"
        ],
        "LoggingTools::LogFileFormat": [
            "logFileUncompressed",
            "logFileCompressed",
            "logFileMessageIDs",
            "logFileTypeInfo",
            "logFileSettings",
            "logFileIndices"
        ],
        "KeyStates::Key": [
            "headFront",
            "headMiddle",
            "headRear",
            "lHandBack",
            "lHandLeft",
            "lHandRight",
            "rHandBack",
            "rHandLeft",
            "rHandRight",
            "lFootLeft",
            "lFootRight",
            "rFootLeft",
            "rFootRight",
            "chest"
        ],
        "FittingMethod": [
            "Ransac",
            "NotRansac",
            "NoFitting"
        ],
        "OwnFreeKick::Type": [
            "ownCornerKick",
            "ownGoalKick"
        ],
        "PixelTypes::PixelType": [
            "RGB",
            "BGRA",
            "YUYV",
            "YUV",
            "Grayscale",
            "Hue",
            "Binary",
            "Edge2",
            "Edge2MonoAvg",
            "Edge2MonoAbsAvg"
        ],
        "FieldDimensions::CornerClass": [
            "xCorner",
            "tCorner0",
            "tCorner90",
            "tCorner180",
            "tCorner270",
            "lCorner0",
            "lCorner90",
            "lCorner180",
            "lCorner270"
        ],
        "Joints::ArmJoint": [
            "shoulderPitch",
            "shoulderRoll",
            "elbowYaw",
            "elbowRoll",
            "wristYaw",
            "hand"
        ],
        "BallPerceptorModule::Params::NormalizationMode": [
            "none",
            "normalizeContrast",
            "normalizeBrightness"
        ],
        "OwnKickOff::Type": [
            "directKickOff"
        ],
        "PatchUtilities::ExtractionMode": [
            "fast",
            "fastInterpolated",
            "interpolated"
        ],
        "IllegalAreas::FieldArea": [
            "ownGoalArea",
            "ownPenaltyArea",
            "opponentPenaltyArea",
            "borderStrip",
            "opponentHalf",
            "centerCircle",
            "ballArea",
            "notOwnGoalLine"
        ],
        "KeyframeLimb": [
            "leftArm",
            "rightArm",
            "leftLeg",
            "rightLeg"
        ],
        "GyroOffsetProvider::State": [
            "waiting",
            "sampling",
            "set",
            "off"
        ],
        "Obstacle::Type": [
            "unknown",
            "someRobot",
            "opponent",
            "teammate",
            "fallenSomeRobot",
            "fallenOpponent",
            "fallenTeammate"
        ],
        "WalkKickVariant::DiagonalKickState": [
            "none",
            "allowed",
            "set"
        ],
        "SectorWheel::Sector::Type": [
            "free",
            "obstacle",
            "teammate",
            "goal",
            "erased"
        ],
        "GameState::State": [
            "beforeHalf",
            "afterHalf",
            "timeout",
            "playing",
            "setupOwnKickOff",
            "setupOpponentKickOff",
            "waitForOwnKickOff",
            "waitForOpponentKickOff",
            "ownKickOff",
            "opponentKickOff",
            "setupOwnPenaltyKick",
            "setupOpponentPenaltyKick",
            "waitForOwnPenaltyKick",
            "waitForOpponentPenaltyKick",
            "ownPenaltyKick",
            "opponentPenaltyKick",
            "ownPushingFreeKick",
            "opponentPushingFreeKick",
            "ownKickIn",
            "opponentKickIn",
            "ownGoalKick",
            "opponentGoalKick",
            "ownCornerKick",
            "opponentCornerKick",
            "beforePenaltyShootout",
            "waitForOwnPenaltyShot",
            "waitForOpponentPenaltyShot",
            "ownPenaltyShot",
            "opponentPenaltyShot",
            "afterOwnPenaltyShot",
            "afterOpponentPenaltyShot"
        ],
        "LEDHandler::EyeColor": [
            "red",
            "green",
            "blue",
            "white",
            "magenta",
            "yellow",
            "cyan"
        ],
        "JointAnglePred::Joint": [
            "rAnkleRoll",
            "rAnklePitch",
            "rKneePitch",
            "rHipPitch",
            "rHipRoll",
            "lKneePitch",
            "lAnkleRoll",
            "lAnklePitch",
            "lHipPitch",
            "lHipRoll",
            "hipYawPitch"
        ],
        "GlobalTeammatesTracker::TeammateState": [
            "invalid",
            "penalized",
            "waitingAfterUnpenalize",
            "playing"
        ],
        "LEDRequest::LEDState": [
            "off",
            "on",
            "blinking",
            "fastBlinking",
            "half"
        ],
        "Limbs::LimbLegVarieties": [
            "pelvis",
            "hip",
            "thigh",
            "tibia",
            "ankle",
            "foot"
        ],
        "EngineStates::EngineState": [
            "off",
            "helpMeState",
            "breakUp",
            "decideAction",
            "waiting",
            "waitForRequest",
            "working",
            "finished",
            "balanceOut",
            "retryState"
        ],
        "HeadMotionRequest::Mode": [
            "panTiltMode",
            "targetMode",
            "targetOnGroundMode",
            "calibrationMode"
        ],
        "GameController::AutomaticReferee": [
            "trueGameState",
            "placeBall",
            "placePlayers",
            "switchToSet",
            "switchToPlaying",
            "switchToFinished",
            "ballOut",
            "freeKickComplete",
            "clearBall",
            "penalizeLeavingTheField",
            "penalizeIllegalPosition",
            "penalizeIllegalPositionInSet",
            "unpenalize",
            "kickOffDelay"
        ],
        "LibCheckProviderModule::Params::Reaction": [
            "ignore",
            "warn",
            "abort"
        ],
        "Joints::LegJoint": [
            "hipYawPitch",
            "hipRoll",
            "hipPitch",
            "kneePitch",
            "anklePitch",
            "ankleRoll"
        ],
        "HeadMotionRequest::CameraControlMode": [
            "autoCamera",
            "lowerCamera",
            "upperCamera"
        ],
        "WalkKickStep::OverrideFoot": [
            "none",
            "measured",
            "request"
        ],
        "Cabsl<FallDownStateProvider>::OptionInfos::Option": [
            "none",
            "Root",
            "Fall"
        ],
        "ConditionVar": [
            "InertialDataAngleY",
            "InertialDataAngleAbsoluteX",
            "FluctuationY",
            "ShoulderPitchLeft",
            "ShoulderPitchRight",
            "ShoulderRollLeft",
            "ShoulderRollRight",
            "WristTranslationYLeft",
            "WristTranslationYRight",
            "WaitTime",
            "FrontHack",
            "IsSitting",
            "LowCom",
            "HYPDifference",
            "FootSupportVal",
            "BreakUp",
            "ComOutOfSupportPolygonX",
            "LyingOnArmsFront",
            "TryCounter"
        ],
        "GameState::Phase": [
            "firstHalf",
            "secondHalf",
            "penaltyShootout"
        ],
        "KickPrecision": [
            "precise",
            "notPrecise",
            "justHitTheBall"
        ],
        "MotionPhase::Limb": [
            "head",
            "leftArm",
            "rightArm"
        ],
        "KeyframeMotionListID::KeyframeMotionListID": [
            "front",
            "back",
            "recoverGeneric",
            "catchBack",
            "catchFront",
            "recoverFromGenu",
            "recoverFromSumo",
            "restartFront",
            "restartBack",
            "stand",
            "sit",
            "sitDown",
            "sitDownKeeper",
            "keeperJumpLeft",
            "genuflectStand",
            "genuflectStandDefender",
            "demoBannerWave",
            "demoBannerWaveInitial"
        ],
        "WalkKickStep::InterpolationType": [
            "normal",
            "linear",
            "sinusMaxToZero",
            "cosinusZeroToMax"
        ],
        "CameraResolutionRequest::Resolutions": [
            "defaultRes",
            "w320h240",
            "w640h480",
            "w1280h960",
            "noRequest"
        ],
        "LogDataProvider::State": [
            "unknown",
            "accept",
            "convert"
        ],
        "InverseKinematic::IKAError": [
            "shoulderPitchOutOfRange",
            "shoulderRollOutOfRange",
            "elbowYawOutOfRange",
            "elbowRollOutOfRange",
            "armToShort",
            "noPossibleElbowPosition"
        ],
        "JointPlay::JointStatus": [
            "allFine",
            "sensorJump",
            "broken",
            "damaged"
        ],
        "EnergySaving::EnergyState": [
            "off",
            "waiting",
            "working",
            "resetState"
        ],
        "ScanLineRegion::Color": [
            "unset",
            "black",
            "white",
            "field",
            "none"
        ],
        "KickEngineParameters::BoostAngle::InterpolationMode": [
            "linear",
            "cosine",
            "square"
        ],
        "KeyframeMotionPhases::KeyframeMotionPhase": [
            "UnknownPhase",
            "PushingWithArmsFromGround",
            "ReduceVel",
            "Split",
            "HalfSplit",
            "Sit",
            "Stand",
            "StandStatic"
        ],
        "Role::Type": [
            "none",
            "playBall",
            "freeKickWall",
            "closestToTeammatesBall",
            "startSetPlay",
            "goalkeeper",
            "defender",
            "midfielder",
            "forward"
        ],
        "GameState::PlayerState": [
            "unstiff",
            "calibration",
            "penalizedManual",
            "penalizedIllegalBallContact",
            "penalizedPlayerPushing",
            "penalizedIllegalMotionInSet",
            "penalizedInactivePlayer",
            "penalizedIllegalPosition",
            "penalizedLeavingTheField",
            "penalizedRequestForPickup",
            "penalizedLocalGameStuck",
            "penalizedIllegalPositionInSet",
            "penalizedPlayerStance",
            "substitute",
            "active"
        ],
        "Cabsl<BallSearch>::OptionInfos::Option": [
            "none",
            "Root"
        ],
        "BallContactInformation::ContactType": [
            "leftFoot",
            "rightFoot",
            "center",
            "none"
        ],
        "EnergySavingProvider::State": [
            "deactive",
            "energySaving",
            "accuratePosition"
        ],
        "PathPlannerProvider::Tangent::Side": [
            "none",
            "left",
            "right"
        ],
        "ArmKeyFrameRequest::ArmKeyFrameId": [
            "useDefault",
            "back",
            "raiseArm",
            "keeperStand",
            "waving1",
            "waving2",
            "waving",
            "wavingInitial",
            "arm45degreeUpSideways",
            "arm45degreeDownSideways",
            "armHorizontalSideways",
            "armHandToChest",
            "arm45degreeUpFront",
            "dynamicRefereePositon",
            "reverse"
        ],
        "Arms::Arm": [
            "left",
            "right"
        ],
        "CameraCalibrationStatus::State": [
            "idle",
            "recordSamples",
            "optimize"
        ],
        "SampleType": [
            "cornerAngle",
            "parallelAngle",
            "parallelLinesDistance",
            "goalAreaDistance",
            "groundLineDistance"
        ],
        "KickAtGoalImpl::State": [
            "notActive",
            "normal",
            "inGoal",
            "nextToGoal"
        ],
        "SetPlay::Type": [
            "none",
            "directKickOff",
            "kiteKickOff",
            "theOneTrueOwnPenaltyKick",
            "theOneTrueOpponentPenaltyKick",
            "ownCornerKick",
            "ownGoalKick",
            "opponentCornerKick"
        ],
        "BallDropInModel::DropInType": [
            "ownGoalKick",
            "ownCornerKick",
            "opponentGoalKick",
            "opponentCornerKick",
            "kickIn"
        ],
        "ObstaclesFieldPercept::Type": [
            "unknown",
            "ownPlayer",
            "opponentPlayer",
            "ownGoalkeeper",
            "opponentGoalkeeper"
        ],
        "BallPercept::Status": [
            "notSeen",
            "seen",
            "guessed"
        ],
        "ArmContactModel::PushDirection": [
            "forward",
            "backward",
            "left",
            "right",
            "none"
        ],
        "KeyframeMotionBlockID::KeyframeMotionBlockID": [
            "sit",
            "sitDown",
            "stand",
            "standHigh",
            "front",
            "frontCatch",
            "frontCatchStart",
            "frontUpright",
            "back",
            "backTipOver",
            "backTipOverReset",
            "recover",
            "recoverBackStaticArms",
            "recoverFront",
            "recoverBack",
            "recoverSlow",
            "recoverGenuflect",
            "recoverGenuflectWide",
            "armSavingFront",
            "armSavingBack",
            "fromSitting",
            "genuflectFromSitting",
            "genuflectFromStand",
            "genuflect",
            "genuflectWide",
            "genuflectEnd",
            "wait",
            "jumpLeftFromSitting",
            "jumpLeftFromStand",
            "sitKeeper",
            "sitKeeperJump",
            "waveInitial",
            "wave"
        ],
        "RobotConsole::Color": [
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "violet",
            "gray",
            "brown"
        ],
        "Keypoints::Keypoint": [
            "nose",
            "leftEye",
            "rightEye",
            "leftEar",
            "rightEar",
            "leftShoulder",
            "rightShoulder",
            "leftElbow",
            "rightElbow",
            "leftWrist",
            "rightWrist",
            "leftHip",
            "rightHip",
            "leftKnee",
            "rightKnee",
            "leftAnkle",
            "rightAnkle"
        ],
        "MotionPhase::Type": [
            "playDead",
            "stand",
            "walk",
            "kick",
            "fall",
            "getUp",
            "keyframeMotion",
            "replayWalk",
            "calibration"
        ],
        "FieldLineIntersections::Intersection::IntersectionType": [
            "L",
            "T",
            "X"
        ],
        "RefereePercept::Gesture": [
            "none",
            "kickInBlue",
            "kickInRed",
            "goalKickBlue",
            "goalKickRed",
            "cornerKickBlue",
            "cornerKickRed",
            "goalBlue",
            "goalRed",
            "pushingFreeKickBlue",
            "pushingFreeKickRed",
            "fullTime",
            "substitutionBlue",
            "substitutionRed"
        ],
        "EnergySavingType::EnergySavingType": [
            "none",
            "activeInWait",
            "activeAlways"
        ],
        "PotentialType": [
            "fieldBorder",
            "opponentGoal",
            "opponent",
            "teammate",
            "ownGoal"
        ],
        "CameraInfo::Camera": [
            "upper",
            "lower"
        ],
        "FieldLinesProvider::SpotLineStatus": [
            "thrown",
            "stayed"
        ],
        "Limbs::LimbArmVarieties": [
            "shoulder",
            "biceps",
            "elbow",
            "foreArm",
            "wrist"
        ],
        "KickInfo::KickType": [
            "forwardFastRight",
            "forwardFastLeft",
            "forwardFastRightPass",
            "forwardFastLeftPass",
            "forwardFastRightLong",
            "forwardFastLeftLong",
            "walkForwardsRight",
            "walkForwardsLeft",
            "walkForwardsRightLong",
            "walkForwardsLeftLong",
            "walkSidewardsRightFootToRight",
            "walkSidewardsLeftFootToLeft",
            "walkTurnRightFootToLeft",
            "walkTurnLeftFootToRight",
            "walkTurnRightFootToLeftShifted",
            "walkTurnLeftFootToRightShifted",
            "walkForwardStealBallLeft",
            "walkForwardStealBallRight",
            "walkForwardsRightAlternative",
            "walkForwardsLeftAlternative",
            "walkForwardsRightVeryLong",
            "walkForwardsLeftVeryLong",
            "newKick"
        ],
        "WalkKicks::Type": [
            "none",
            "forward",
            "forwardLong",
            "forwardVeryLong",
            "sidewardsOuter",
            "turnOut",
            "forwardSteal",
            "forwardAlternative"
        ],
        "FieldFeatureOverview::Feature": [
            "centerCircleWithLine",
            "penaltyMarkWithPenaltyAreaLine"
        ],
        "ArmMotionRequest::ArmRequest": [
            "none",
            "keyFrame",
            "pointAt"
        ],
        "ZweikampfImpl::TargetType": [
            "goalShot",
            "stealBall",
            "pass",
            "other"
        ],
        "Phase::Limb": [
            "leftFootTra",
            "leftFootRot",
            "rightFootTra",
            "rightFootRot",
            "leftArmTra",
            "leftHandRot",
            "rightArmTra",
            "rightHandRot"
        ],
        "Strategy::Type": [
            "none",
            "s7v7"
        ],
        "DamageConfigurationBody::BrokenStandUp": [
            "allFine",
            "onlyNormal",
            "onlyMirrored",
            "allBroken"
        ],
        "CameraSettings::Collection::CameraSetting": [
            "autoExposure",
            "autoExposureBrightness",
            "exposure",
            "gain",
            "autoWhiteBalance",
            "autoFocus",
            "focus",
            "autoHue",
            "hue",
            "saturation",
            "contrast",
            "sharpness",
            "redGain",
            "greenGain",
            "blueGain"
        ],
        "ColorSpaceView::ColorModel": [
            "YUV",
            "RGB",
            "HSI"
        ],
        "JointSensorData::TemperatureStatus": [
            "regular",
            "hot",
            "veryHot",
            "criticallyHot"
        ],
        "MotionRequest::Special::Request": [
            "demoBannerWave",
            "demoBannerWaveInitial"
        ],
        "KickRequest::KickMotionID": [
            "kickForwardFast",
            "kickForwardFastLong",
            "newKick",
            "none"
        ],
        "SkillRequest::Type": [
            "none",
            "stand",
            "walk",
            "shoot",
            "pass",
            "dribble",
            "block",
            "mark",
            "observe",
            "neuralControl"
        ],
        "PathPlannerProvider::Rotation": [
            "cw",
            "ccw"
        ],
        "OwnPenaltyKick::Type": [
            "theOneTrueOwnPenaltyKick"
        ],
        "Tactic::Position::Type": [
            "none",
            "goalkeeper",
            "defender",
            "defenderL",
            "defenderR",
            "midfielder",
            "midfielderM",
            "midfielderL",
            "midfielderR",
            "forward",
            "forwardM",
            "forwardL",
            "forwardR"
        ],
        "FsrSensors::FsrSensor": [
            "fl",
            "fr",
            "bl",
            "br"
        ],
        "RobotHealth::Configuration": [
            "Debug",
            "Develop",
            "Release"
        ],
        "OpponentPenaltyKick::Type": [
            "theOneTrueOpponentPenaltyKick"
        ],
        "FallDownState::Direction": [
            "none",
            "front",
            "left",
            "back",
            "right"
        ],
        "LEDRequest::LED": [
            "faceLeftRed0Deg",
            "faceLeftRed45Deg",
            "faceLeftRed90Deg",
            "faceLeftRed135Deg",
            "faceLeftRed180Deg",
            "faceLeftRed225Deg",
            "faceLeftRed270Deg",
            "faceLeftRed315Deg",
            "faceLeftGreen0Deg",
            "faceLeftGreen45Deg",
            "faceLeftGreen90Deg",
            "faceLeftGreen135Deg",
            "faceLeftGreen180Deg",
            "faceLeftGreen225Deg",
            "faceLeftGreen270Deg",
            "faceLeftGreen315Deg",
            "faceLeftBlue0Deg",
            "faceLeftBlue45Deg",
            "faceLeftBlue90Deg",
            "faceLeftBlue135Deg",
            "faceLeftBlue180Deg",
            "faceLeftBlue225Deg",
            "faceLeftBlue270Deg",
            "faceLeftBlue315Deg",
            "faceRightRed0Deg",
            "faceRightRed45Deg",
            "faceRightRed90Deg",
            "faceRightRed135Deg",
            "faceRightRed180Deg",
            "faceRightRed225Deg",
            "faceRightRed270Deg",
            "faceRightRed315Deg",
            "faceRightGreen0Deg",
            "faceRightGreen45Deg",
            "faceRightGreen90Deg",
            "faceRightGreen135Deg",
            "faceRightGreen180Deg",
            "faceRightGreen225Deg",
            "faceRightGreen270Deg",
            "faceRightGreen315Deg",
            "faceRightBlue0Deg",
            "faceRightBlue45Deg",
            "faceRightBlue90Deg",
            "faceRightBlue135Deg",
            "faceRightBlue180Deg",
            "faceRightBlue225Deg",
            "faceRightBlue270Deg",
            "faceRightBlue315Deg",
            "earsLeft0Deg",
            "earsLeft36Deg",
            "earsLeft72Deg",
            "earsLeft108Deg",
            "earsLeft144Deg",
            "earsLeft180Deg",
            "earsLeft216Deg",
            "earsLeft252Deg",
            "earsLeft288Deg",
            "earsLeft324Deg",
            "earsRight0Deg",
            "earsRight36Deg",
            "earsRight72Deg",
            "earsRight108Deg",
            "earsRight144Deg",
            "earsRight180Deg",
            "earsRight216Deg",
            "earsRight252Deg",
            "earsRight288Deg",
            "earsRight324Deg",
            "chestRed",
            "chestGreen",
            "chestBlue",
            "headRearLeft0",
            "headRearLeft1",
            "headRearLeft2",
            "headRearRight0",
            "headRearRight1",
            "headRearRight2",
            "headMiddleRight0",
            "headFrontRight0",
            "headFrontRight1",
            "headFrontLeft0",
            "headFrontLeft1",
            "headMiddleLeft0",
            "footLeftRed",
            "footLeftGreen",
            "footLeftBlue",
            "footRightRed",
            "footRightGreen",
            "footRightBlue"
        ],
        "AutomaticCameraCalibrator::ParameterTranslation": [
            "lowerCameraRollCorrection",
            "lowerCameraTiltCorrection",
            "upperCameraRollCorrection",
            "upperCameraTiltCorrection",
            "bodyRollCorrection",
            "bodyTiltCorrection"
        ],
        "KeyframeMotionRequest::KeyframeMotionID": [
            "decideAutomatic",
            "sitDown",
            "sitDownKeeper",
            "keeperJumpLeft",
            "genuflectStand",
            "genuflectStandDefender",
            "demoBannerWave",
            "demoBannerWaveInitial"
        ],
        "FallDownState::State": [
            "pickedUp",
            "upright",
            "staggering",
            "falling",
            "fallen",
            "squatting"
        ],
        "SetPlay::GameState": [
            "noSetPlay",
            "ownKickOff",
            "opponentKickOff",
            "ownPenaltyKick",
            "opponentPenaltyKick",
            "ownFreeKick",
            "opponentFreeKick"
        ],
        "LibCheck::CheckedOutput": [
            "motionRequest",
            "headMotionRequest",
            "calibrationFinished",
            "passTarget"
        ],
        "ActiveRole::Type": [
            "playBall",
            "freeKickWall",
            "closestToTeammatesBall",
            "startSetPlay"
        ],
        "MotionRequest::Motion": [
            "playDead",
            "stand",
            "walkAtAbsoluteSpeed",
            "walkAtRelativeSpeed",
            "walkToPose",
            "walkToBallAndKick",
            "dribble",
            "dive",
            "special",
            "replayWalk",
            "calibration"
        ],
        "SetPlay::Action::Type": [
            "shot",
            "pass",
            "wait",
            "mark",
            "position"
        ],
        "Tactic::Type": [
            "none",
            "t123",
            "t222"
        ],
        "OpponentKickOff::Type": [
            "kiteKickOff"
        ],
        "ArmKeyFrameMotion::ArmInterpolation": [
            "linear",
            "maxToZero",
            "zeroToMax",
            "zeroToMaxToZero"
        ],
        "RobotPose::LocalizationQuality": [
            "superb",
            "okay",
            "poor"
        ],
        "OpponentFreeKick::Type": [
            "opponentCornerKick"
        ],
        "SampleConfigurationStatus": [
            "none",
            "recording",
            "visible",
            "notVisible",
            "finished"
        ],
        "GameState::CompetitionPhase": [
            "roundRobin",
            "playOff"
        ],
        "MessageID": [
            "undefined",
            "idFrameBegin",
            "idFrameFinished",
            "idActivationGraph",
            "idAnnotation",
            "idCameraImage",
            "idInertialSensorData",
            "idJointCalibration",
            "idJointRequest",
            "idJointSensorData",
            "idJPEGImage",
            "idMotionRequest",
            "idStopwatch",
            "idAlternativeRobotPoseHypothesis",
            "idArmMotionRequest",
            "idAudioData",
            "idBallModel",
            "idBallPercept",
            "idBallSpots",
            "idBehaviorStatus",
            "idBodyContour",
            "idCameraCalibration",
            "idCameraInfo",
            "idCameraMatrix",
            "idCirclePercept",
            "idFallDownState",
            "idFieldBoundary",
            "idFieldFeatureOverview",
            "idFootOffset",
            "idFootSupport",
            "idFrameInfo",
            "idFsrData",
            "idFsrSensorData",
            "idGameControllerData",
            "idGameState",
            "idGyroOffset",
            "idGyroState",
            "idGroundContactState",
            "idGroundTruthOdometryData",
            "idGroundTruthWorldState",
            "idHeadMotionRequest",
            "idIMUCalibration",
            "idImageCoordinateSystem",
            "idInertialData",
            "idJointAnglePred",
            "idJointAngles",
            "idJointLimits",
            "idJointPlay",
            "idKeypoints",
            "idKeyStates",
            "idLinesPercept",
            "idMotionInfo",
            "idObstacleModel",
            "idObstaclesFieldPercept",
            "idObstaclesImagePercept",
            "idOdometer",
            "idOdometryData",
            "idOdometryDataPreview",
            "idOdometryTranslationRequest",
            "idPenaltyMarkPercept",
            "idReceivedTeamMessages",
            "idRefereePercept",
            "idRobotDimensions",
            "idRobotHealth",
            "idRobotPose",
            "idRobotStableState",
            "idSelfLocalizationHypotheses",
            "idSideInformation",
            "idSkillRequest",
            "idStaticJointPoses",
            "idStrategyStatus",
            "idSystemSensorData",
            "idTeammatesBallModel",
            "idTeamData",
            "idWalkGenerator",
            "idWalkStepData",
            "idWalkingEngineOutput",
            "idWalkLearner",
            "idWhistle",
            "idConsole",
            "idDebugDataChangeRequest",
            "idDebugDataResponse",
            "idDebugDrawing",
            "idDebugDrawing3D",
            "idDebugImage",
            "idDebugRequest",
            "idDebugResponse",
            "idDrawingManager",
            "idDrawingManager3D",
            "idLogResponse",
            "idModuleRequest",
            "idModuleTable",
            "idPlot",
            "idRobotName",
            "idText",
            "idThread",
            "idTypeInfo",
            "idTypeInfoRequest"
        ],
        "StaticJointPoses::StaticJointPoseName": [
            "sit",
            "sitBack",
            "sitFront",
            "sitFrontGetUp",
            "sitBackAfterFall",
            "sitFrontAfterFall"
        ],
        "Settings::TeamColor": [
            "blue",
            "red",
            "yellow",
            "black",
            "white",
            "green",
            "orange",
            "purple",
            "brown",
            "gray"
        ],
        "Interception::Method": [
            "stand",
            "walk",
            "genuflectStandDefender",
            "genuflectStand",
            "jumpLeft",
            "jumpRight"
        ],
        "InterpolationType": [
            "Default",
            "Linear",
            "SinusMinToMax",
            "SinusZeroToMax"
        ],
        "Cabsl<SkillBehaviorControl>::OptionInfos::Option": [
            "none",
            "PlaySoccer",
            "HandleAnyPlaceDemo",
            "HandleCatchBall",
            "HandleCatchBall2023",
            "HandleGameState",
            "HandleGoalkeeperCatchBall",
            "HandleIllegalAreas",
            "HandlePenaltyKick",
            "HandlePenaltyShootout",
            "HandlePhotoMode",
            "HandlePhysicalRobot",
            "HandlePlayerState",
            "HandleRefereeWatchdog",
            "RefereeWatchdog",
            "RefereeActivation",
            "HandleRefereeSignal",
            "HandleReplayWalk",
            "HandleStrikerLostBall",
            "PenaltyKeeper",
            "PenaltyTaker",
            "HandleCameraCalibrationDataCollection",
            "HandleReturnFromSideline"
        ],
        "FreeKick::BallSide": [
            "irrelevant",
            "left",
            "right"
        ],
        "SimpleMap::Symbol": [
            "literal",
            "equals",
            "comma",
            "semicolon",
            "lBracket",
            "rBracket",
            "lBrace",
            "rBrace",
            "eof"
        ],
        "RobotDetector::Classification": [
            "Horizontal",
            "Vertical",
            "Mixed",
            "Nothing",
            "Unknown",
            "Default"
        ],
        "MotionRequest::Dive::Request": [
            "prepare",
            "jumpLeft",
            "jumpRight",
            "squatArmsBackLeft",
            "squatArmsBackRight",
            "squatWideArmsBackLeft",
            "squatWideArmsBackRight"
        ],
        "PositionRole::Type": [
            "goalkeeper",
            "defender",
            "midfielder",
            "forward"
        ],
        "IntersectionsPercept::Intersection::IntersectionType": [
            "L",
            "T",
            "X"
        ],
        "GameController::Penalty": [
            "none",
            "illegalBallContact",
            "playerPushing",
            "illegalMotionInSet",
            "inactivePlayer",
            "illegalPosition",
            "leavingTheField",
            "requestForPickup",
            "localGameStuck",
            "illegalPositionInSet",
            "playerStance",
            "substitute",
            "manual"
        ],
        "LibDemo::DemoGameState": [
            "soccer",
            "waving",
            "talking",
            "posing"
        ],
        "Legs::Leg": [
            "left",
            "right"
        ],
        "PositionRole::Side": [
            "unspecified",
            "left",
            "right",
            "center"
        ]
    },
    "enumClasses": {
        "Joints::Joint": "Enum Type: Joints::Joint",
        "Limbs::Limb": "Enum Type: Limbs::Limb",
        "LoggingTools::LogFileFormat": "Enum Type: LoggingTools::LogFileFormat",
        "KeyStates::Key": "Enum Type: KeyStates::Key",
        "FittingMethod": "Enum Type: FittingMethod",
        "OwnFreeKick::Type": "Enum Type: OwnFreeKick::Type",
        "PixelTypes::PixelType": "Enum Type: PixelTypes::PixelType",
        "FieldDimensions::CornerClass": "Enum Type: FieldDimensions::CornerClass",
        "Joints::ArmJoint": "Enum Type: Joints::ArmJoint",
        "BallPerceptorModule::Params::NormalizationMode": "Enum Type: BallPerceptorModule::Params::NormalizationMode",
        "OwnKickOff::Type": "Enum Type: OwnKickOff::Type",
        "PatchUtilities::ExtractionMode": "Enum Type: PatchUtilities::ExtractionMode",
        "IllegalAreas::FieldArea": "Enum Type: IllegalAreas::FieldArea",
        "KeyframeLimb": "Enum Type: KeyframeLimb",
        "GyroOffsetProvider::State": "Enum Type: GyroOffsetProvider::State",
        "Obstacle::Type": "Enum Type: Obstacle::Type",
        "WalkKickVariant::DiagonalKickState": "Enum Type: WalkKickVariant::DiagonalKickState",
        "SectorWheel::Sector::Type": "Enum Type: SectorWheel::Sector::Type",
        "GameState::State": "Enum Type: GameState::State",
        "LEDHandler::EyeColor": "Enum Type: LEDHandler::EyeColor",
        "JointAnglePred::Joint": "Enum Type: JointAnglePred::Joint",
        "GlobalTeammatesTracker::TeammateState": "Enum Type: GlobalTeammatesTracker::TeammateState",
        "LEDRequest::LEDState": "Enum Type: LEDRequest::LEDState",
        "Limbs::LimbLegVarieties": "Enum Type: Limbs::LimbLegVarieties",
        "EngineStates::EngineState": "Enum Type: EngineStates::EngineState",
        "HeadMotionRequest::Mode": "Enum Type: HeadMotionRequest::Mode",
        "GameController::AutomaticReferee": "Enum Type: GameController::AutomaticReferee",
        "LibCheckProviderModule::Params::Reaction": "Enum Type: LibCheckProviderModule::Params::Reaction",
        "Joints::LegJoint": "Enum Type: Joints::LegJoint",
        "HeadMotionRequest::CameraControlMode": "Enum Type: HeadMotionRequest::CameraControlMode",
        "WalkKickStep::OverrideFoot": "Enum Type: WalkKickStep::OverrideFoot",
        "Cabsl<FallDownStateProvider>::OptionInfos::Option": "Enum Type: Cabsl<FallDownStateProvider>::OptionInfos::Option",
        "ConditionVar": "Enum Type: ConditionVar",
        "GameState::Phase": "Enum Type: GameState::Phase",
        "KickPrecision": "Enum Type: KickPrecision",
        "MotionPhase::Limb": "Enum Type: MotionPhase::Limb",
        "KeyframeMotionListID::KeyframeMotionListID": "Enum Type: KeyframeMotionListID::KeyframeMotionListID",
        "WalkKickStep::InterpolationType": "Enum Type: WalkKickStep::InterpolationType",
        "CameraResolutionRequest::Resolutions": "Enum Type: CameraResolutionRequest::Resolutions",
        "LogDataProvider::State": "Enum Type: LogDataProvider::State",
        "InverseKinematic::IKAError": "Enum Type: InverseKinematic::IKAError",
        "JointPlay::JointStatus": "Enum Type: JointPlay::JointStatus",
        "EnergySaving::EnergyState": "Enum Type: EnergySaving::EnergyState",
        "ScanLineRegion::Color": "Enum Type: ScanLineRegion::Color",
        "KickEngineParameters::BoostAngle::InterpolationMode": "Enum Type: KickEngineParameters::BoostAngle::InterpolationMode",
        "KeyframeMotionPhases::KeyframeMotionPhase": "Enum Type: KeyframeMotionPhases::KeyframeMotionPhase",
        "Role::Type": "Enum Type: Role::Type",
        "GameState::PlayerState": "Enum Type: GameState::PlayerState",
        "Cabsl<BallSearch>::OptionInfos::Option": "Enum Type: Cabsl<BallSearch>::OptionInfos::Option",
        "BallContactInformation::ContactType": "Enum Type: BallContactInformation::ContactType",
        "EnergySavingProvider::State": "Enum Type: EnergySavingProvider::State",
        "PathPlannerProvider::Tangent::Side": "Enum Type: PathPlannerProvider::Tangent::Side",
        "ArmKeyFrameRequest::ArmKeyFrameId": "Enum Type: ArmKeyFrameRequest::ArmKeyFrameId",
        "Arms::Arm": "Enum Type: Arms::Arm",
        "CameraCalibrationStatus::State": "Enum Type: CameraCalibrationStatus::State",
        "SampleType": "Enum Type: SampleType",
        "KickAtGoalImpl::State": "Enum Type: KickAtGoalImpl::State",
        "SetPlay::Type": "Enum Type: SetPlay::Type",
        "BallDropInModel::DropInType": "Enum Type: BallDropInModel::DropInType",
        "ObstaclesFieldPercept::Type": "Enum Type: ObstaclesFieldPercept::Type",
        "BallPercept::Status": "Enum Type: BallPercept::Status",
        "ArmContactModel::PushDirection": "Enum Type: ArmContactModel::PushDirection",
        "KeyframeMotionBlockID::KeyframeMotionBlockID": "Enum Type: KeyframeMotionBlockID::KeyframeMotionBlockID",
        "RobotConsole::Color": "Enum Type: RobotConsole::Color",
        "Keypoints::Keypoint": "Enum Type: Keypoints::Keypoint",
        "MotionPhase::Type": "Enum Type: MotionPhase::Type",
        "FieldLineIntersections::Intersection::IntersectionType": "Enum Type: FieldLineIntersections::Intersection::IntersectionType",
        "RefereePercept::Gesture": "Enum Type: RefereePercept::Gesture",
        "EnergySavingType::EnergySavingType": "Enum Type: EnergySavingType::EnergySavingType",
        "PotentialType": "Enum Type: PotentialType",
        "CameraInfo::Camera": "Enum Type: CameraInfo::Camera",
        "FieldLinesProvider::SpotLineStatus": "Enum Type: FieldLinesProvider::SpotLineStatus",
        "Limbs::LimbArmVarieties": "Enum Type: Limbs::LimbArmVarieties",
        "KickInfo::KickType": "Enum Type: KickInfo::KickType",
        "WalkKicks::Type": "Enum Type: WalkKicks::Type",
        "FieldFeatureOverview::Feature": "Enum Type: FieldFeatureOverview::Feature",
        "ArmMotionRequest::ArmRequest": "Enum Type: ArmMotionRequest::ArmRequest",
        "ZweikampfImpl::TargetType": "Enum Type: ZweikampfImpl::TargetType",
        "Phase::Limb": "Enum Type: Phase::Limb",
        "Strategy::Type": "Enum Type: Strategy::Type",
        "DamageConfigurationBody::BrokenStandUp": "Enum Type: DamageConfigurationBody::BrokenStandUp",
        "CameraSettings::Collection::CameraSetting": "Enum Type: CameraSettings::Collection::CameraSetting",
        "ColorSpaceView::ColorModel": "Enum Type: ColorSpaceView::ColorModel",
        "JointSensorData::TemperatureStatus": "Enum Type: JointSensorData::TemperatureStatus",
        "MotionRequest::Special::Request": "Enum Type: MotionRequest::Special::Request",
        "KickRequest::KickMotionID": "Enum Type: KickRequest::KickMotionID",
        "SkillRequest::Type": "Enum Type: SkillRequest::Type",
        "PathPlannerProvider::Rotation": "Enum Type: PathPlannerProvider::Rotation",
        "OwnPenaltyKick::Type": "Enum Type: OwnPenaltyKick::Type",
        "Tactic::Position::Type": "Enum Type: Tactic::Position::Type",
        "FsrSensors::FsrSensor": "Enum Type: FsrSensors::FsrSensor",
        "RobotHealth::Configuration": "Enum Type: RobotHealth::Configuration",
        "OpponentPenaltyKick::Type": "Enum Type: OpponentPenaltyKick::Type",
        "FallDownState::Direction": "Enum Type: FallDownState::Direction",
        "LEDRequest::LED": "Enum Type: LEDRequest::LED",
        "AutomaticCameraCalibrator::ParameterTranslation": "Enum Type: AutomaticCameraCalibrator::ParameterTranslation",
        "KeyframeMotionRequest::KeyframeMotionID": "Enum Type: KeyframeMotionRequest::KeyframeMotionID",
        "FallDownState::State": "Enum Type: FallDownState::State",
        "SetPlay::GameState": "Enum Type: SetPlay::GameState",
        "LibCheck::CheckedOutput": "Enum Type: LibCheck::CheckedOutput",
        "ActiveRole::Type": "Enum Type: ActiveRole::Type",
        "MotionRequest::Motion": "Enum Type: MotionRequest::Motion",
        "SetPlay::Action::Type": "Enum Type: SetPlay::Action::Type",
        "Tactic::Type": "Enum Type: Tactic::Type",
        "OpponentKickOff::Type": "Enum Type: OpponentKickOff::Type",
        "ArmKeyFrameMotion::ArmInterpolation": "Enum Type: ArmKeyFrameMotion::ArmInterpolation",
        "RobotPose::LocalizationQuality": "Enum Type: RobotPose::LocalizationQuality",
        "OpponentFreeKick::Type": "Enum Type: OpponentFreeKick::Type",
        "SampleConfigurationStatus": "Enum Type: SampleConfigurationStatus",
        "GameState::CompetitionPhase": "Enum Type: GameState::CompetitionPhase",
        "MessageID": "Enum Type: MessageID",
        "StaticJointPoses::StaticJointPoseName": "Enum Type: StaticJointPoses::StaticJointPoseName",
        "Settings::TeamColor": "Enum Type: Settings::TeamColor",
        "Interception::Method": "Enum Type: Interception::Method",
        "InterpolationType": "Enum Type: InterpolationType",
        "Cabsl<SkillBehaviorControl>::OptionInfos::Option": "Enum Type: Cabsl<SkillBehaviorControl>::OptionInfos::Option",
        "FreeKick::BallSide": "Enum Type: FreeKick::BallSide",
        "SimpleMap::Symbol": "Enum Type: SimpleMap::Symbol",
        "RobotDetector::Classification": "Enum Type: RobotDetector::Classification",
        "MotionRequest::Dive::Request": "Enum Type: MotionRequest::Dive::Request",
        "PositionRole::Type": "Enum Type: PositionRole::Type",
        "IntersectionsPercept::Intersection::IntersectionType": "Enum Type: IntersectionsPercept::Intersection::IntersectionType",
        "GameController::Penalty": "Enum Type: GameController::Penalty",
        "LibDemo::DemoGameState": "Enum Type: LibDemo::DemoGameState",
        "Legs::Leg": "Enum Type: Legs::Leg",
        "PositionRole::Side": "Enum Type: PositionRole::Side"
    }
}